   1               		.file	"UART.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	uart_init
  12               	uart_init:
  13               	.LFB0:
  14               		.file 1 "../drivers/UART.c"
   1:../drivers/UART.c **** #include <avr/io.h>
   2:../drivers/UART.c **** #include <avr/interrupt.h>
   3:../drivers/UART.c **** #include <inttypes.h>
   4:../drivers/UART.c **** #include "UART.h"
   5:../drivers/UART.c **** #include "config.h"
   6:../drivers/UART.c **** 
   7:../drivers/UART.c **** #define UART_RX_BUFFER_SIZE 256 //UART Receive Buffer Size /* 2,4,8,16,32,64,128 or 256 bytes */
   8:../drivers/UART.c **** #define UART_TX_BUFFER_SIZE 256 //UART Transmit Buffer Size
   9:../drivers/UART.c **** 
  10:../drivers/UART.c **** #ifndef BAUDRATE
  11:../drivers/UART.c **** #define BAUDRATE 57600
  12:../drivers/UART.c **** #endif
  13:../drivers/UART.c **** 
  14:../drivers/UART.c **** static volatile uint8_t UART_RxBuf[UART_RX_BUFFER_SIZE];    //UART Receive Buffer
  15:../drivers/UART.c **** static volatile uint8_t UART_RxHead;
  16:../drivers/UART.c **** static volatile uint8_t UART_RxTail;
  17:../drivers/UART.c **** static volatile uint8_t UART_TxBuf[UART_TX_BUFFER_SIZE];    //UART Transmit Buffer
  18:../drivers/UART.c **** static volatile uint8_t UART_TxHead;
  19:../drivers/UART.c **** static volatile uint8_t UART_TxTail;
  20:../drivers/UART.c **** 
  21:../drivers/UART.c **** static volatile uint8_t UART_RxFlag=0;
  22:../drivers/UART.c **** 
  23:../drivers/UART.c **** void uart_init(void)
  24:../drivers/UART.c **** {
  15               		.loc 1 24 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  25:../drivers/UART.c ****     PORTD |= 0x02;
  21               		.loc 1 25 0
  22 0000 599A      		sbi 0xb,1
  26:../drivers/UART.c **** 
  27:../drivers/UART.c ****     UBRR0H = (uint8_t) (((F_CPU / (16UL * BAUDRATE)) - 1) >> 8);  // set baud rate
  23               		.loc 1 27 0
  24 0002 1092 C500 		sts 197,__zero_reg__
  28:../drivers/UART.c ****     UBRR0L = (uint8_t) ((F_CPU / (16UL * BAUDRATE)) - 1);
  25               		.loc 1 28 0
  26 0006 87E6      		ldi r24,lo8(103)
  27 0008 8093 C400 		sts 196,r24
  29:../drivers/UART.c ****     UCSR0B = (1 << RXCIE0) | (1 << RXEN0) | (1 << TXEN0);
  28               		.loc 1 29 0
  29 000c 88E9      		ldi r24,lo8(-104)
  30 000e 8093 C100 		sts 193,r24
  30:../drivers/UART.c **** 
  31:../drivers/UART.c ****     UART_RxTail = 0;    //Set UART Buffer
  31               		.loc 1 31 0
  32 0012 1092 0000 		sts UART_RxTail,__zero_reg__
  32:../drivers/UART.c ****     UART_RxHead = 0;
  33               		.loc 1 32 0
  34 0016 1092 0000 		sts UART_RxHead,__zero_reg__
  33:../drivers/UART.c ****     UART_TxTail = 0;
  35               		.loc 1 33 0
  36 001a 1092 0000 		sts UART_TxTail,__zero_reg__
  34:../drivers/UART.c ****     UART_TxHead = 0;
  37               		.loc 1 34 0
  38 001e 1092 0000 		sts UART_TxHead,__zero_reg__
  39 0022 0895      		ret
  40               		.cfi_endproc
  41               	.LFE0:
  43               	.global	uart_update_baudrate
  45               	uart_update_baudrate:
  46               	.LFB1:
  35:../drivers/UART.c **** }
  36:../drivers/UART.c **** 
  37:../drivers/UART.c **** void uart_update_baudrate(uint32_t baudrate)
  38:../drivers/UART.c **** {
  47               		.loc 1 38 0
  48               		.cfi_startproc
  49               	.LVL0:
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  39:../drivers/UART.c ****     UBRR0H = (uint8_t) (((F_CPU / (16UL * baudrate)) - 1) >> 8);  // set baud rate
  54               		.loc 1 39 0
  55 0024 9B01      		movw r18,r22
  56 0026 AC01      		movw r20,r24
  57 0028 84E0      		ldi r24,4
  58               		1:
  59 002a 220F      		lsl r18
  60 002c 331F      		rol r19
  61 002e 441F      		rol r20
  62 0030 551F      		rol r21
  63 0032 8A95      		dec r24
  64 0034 01F4      		brne 1b
  65 0036 60E0      		ldi r22,0
  66 0038 74E2      		ldi r23,lo8(36)
  67 003a 84EF      		ldi r24,lo8(-12)
  68 003c 90E0      		ldi r25,0
  69               	.LVL1:
  70 003e 0E94 0000 		call __udivmodsi4
  71 0042 DA01      		movw r26,r20
  72 0044 C901      		movw r24,r18
  73 0046 0197      		sbiw r24,1
  74 0048 A109      		sbc r26,__zero_reg__
  75 004a B109      		sbc r27,__zero_reg__
  76 004c 892F      		mov r24,r25
  77 004e 9A2F      		mov r25,r26
  78 0050 AB2F      		mov r26,r27
  79 0052 BB27      		clr r27
  80 0054 8093 C500 		sts 197,r24
  40:../drivers/UART.c ****     UBRR0L = (uint8_t) ((F_CPU / (16UL * baudrate)) - 1);
  81               		.loc 1 40 0
  82 0058 2150      		subi r18,lo8(-(-1))
  83 005a 2093 C400 		sts 196,r18
  84 005e 0895      		ret
  85               		.cfi_endproc
  86               	.LFE1:
  88               	.global	uart_check_receiver
  90               	uart_check_receiver:
  91               	.LFB2:
  41:../drivers/UART.c **** }
  42:../drivers/UART.c **** 
  43:../drivers/UART.c **** uint8_t uart_check_receiver(void)
  44:../drivers/UART.c **** {
  92               		.loc 1 44 0
  93               		.cfi_startproc
  94               	/* prologue: function */
  95               	/* frame size = 0 */
  96               	/* stack size = 0 */
  97               	.L__stack_usage = 0
  45:../drivers/UART.c ****     return UART_RxFlag;
  98               		.loc 1 45 0
  99 0060 8091 0000 		lds r24,UART_RxFlag
  46:../drivers/UART.c **** }
 100               		.loc 1 46 0
 101 0064 0895      		ret
 102               		.cfi_endproc
 103               	.LFE2:
 105               	.global	uart_send_byte
 107               	uart_send_byte:
 108               	.LFB3:
  47:../drivers/UART.c **** 
  48:../drivers/UART.c **** void uart_send_byte(uint8_t data) //UART Transmit Byte
  49:../drivers/UART.c **** {
 109               		.loc 1 49 0
 110               		.cfi_startproc
 111               	.LVL2:
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
  50:../drivers/UART.c ****     uint8_t tmphead;
  51:../drivers/UART.c **** 
  52:../drivers/UART.c ****     tmphead = UART_TxHead + 1;
 116               		.loc 1 52 0
 117 0066 9091 0000 		lds r25,UART_TxHead
 118 006a 9F5F      		subi r25,lo8(-(1))
 119               	.LVL3:
 120               	.L5:
  53:../drivers/UART.c ****     while(tmphead == UART_TxTail);
 121               		.loc 1 53 0 discriminator 1
 122 006c 2091 0000 		lds r18,UART_TxTail
 123 0070 9217      		cp r25,r18
 124 0072 01F0      		breq .L5
  54:../drivers/UART.c ****     UART_TxBuf[tmphead] = data;
 125               		.loc 1 54 0
 126 0074 E92F      		mov r30,r25
 127 0076 F0E0      		ldi r31,0
 128 0078 E050      		subi r30,lo8(-(UART_TxBuf))
 129 007a F040      		sbci r31,hi8(-(UART_TxBuf))
 130 007c 8083      		st Z,r24
  55:../drivers/UART.c ****     UART_TxHead = tmphead;
 131               		.loc 1 55 0
 132 007e 9093 0000 		sts UART_TxHead,r25
  56:../drivers/UART.c ****     UCSR0B |= (1 << UDRIE0);    //Enable Interrupt UART Data Register Empty
 133               		.loc 1 56 0
 134 0082 8091 C100 		lds r24,193
 135               	.LVL4:
 136 0086 8062      		ori r24,lo8(32)
 137 0088 8093 C100 		sts 193,r24
 138 008c 0895      		ret
 139               		.cfi_endproc
 140               	.LFE3:
 142               	.global	uart_get_byte
 144               	uart_get_byte:
 145               	.LFB4:
  57:../drivers/UART.c **** }
  58:../drivers/UART.c **** 
  59:../drivers/UART.c **** uint8_t uart_get_byte(void)   //UART Receive Byte
  60:../drivers/UART.c **** {
 146               		.loc 1 60 0
 147               		.cfi_startproc
 148               	/* prologue: function */
 149               	/* frame size = 0 */
 150               	/* stack size = 0 */
 151               	.L__stack_usage = 0
 152               	.L9:
  61:../drivers/UART.c ****     uint8_t tmptail;
  62:../drivers/UART.c **** 
  63:../drivers/UART.c ****     while(UART_RxHead == UART_RxTail);
 153               		.loc 1 63 0 discriminator 1
 154 008e 9091 0000 		lds r25,UART_RxHead
 155 0092 8091 0000 		lds r24,UART_RxTail
 156 0096 9817      		cp r25,r24
 157 0098 01F0      		breq .L9
  64:../drivers/UART.c ****     tmptail = UART_RxTail + 1;
 158               		.loc 1 64 0
 159 009a E091 0000 		lds r30,UART_RxTail
 160 009e EF5F      		subi r30,lo8(-(1))
 161               	.LVL5:
  65:../drivers/UART.c ****     UART_RxTail = tmptail;
 162               		.loc 1 65 0
 163 00a0 E093 0000 		sts UART_RxTail,r30
  66:../drivers/UART.c ****     if(UART_RxHead == UART_RxTail)
 164               		.loc 1 66 0
 165 00a4 9091 0000 		lds r25,UART_RxHead
 166 00a8 8091 0000 		lds r24,UART_RxTail
 167 00ac 9813      		cpse r25,r24
 168 00ae 00C0      		rjmp .L10
  67:../drivers/UART.c ****         UART_RxFlag = 0;
 169               		.loc 1 67 0
 170 00b0 1092 0000 		sts UART_RxFlag,__zero_reg__
 171               	.L10:
  68:../drivers/UART.c **** 
  69:../drivers/UART.c ****     return UART_RxBuf[tmptail];
 172               		.loc 1 69 0
 173 00b4 F0E0      		ldi r31,0
 174 00b6 E050      		subi r30,lo8(-(UART_RxBuf))
 175 00b8 F040      		sbci r31,hi8(-(UART_RxBuf))
 176               	.LVL6:
 177 00ba 8081      		ld r24,Z
  70:../drivers/UART.c **** }
 178               		.loc 1 70 0
 179 00bc 0895      		ret
 180               		.cfi_endproc
 181               	.LFE4:
 183               	.global	__vector_18
 185               	__vector_18:
 186               	.LFB5:
  71:../drivers/UART.c **** 
  72:../drivers/UART.c **** SIGNAL(USART_RX_vect)   //Interrupt UART Receive Byte
  73:../drivers/UART.c **** {
 187               		.loc 1 73 0
 188               		.cfi_startproc
 189 00be 1F92      		push r1
 190               	.LCFI0:
 191               		.cfi_def_cfa_offset 3
 192               		.cfi_offset 1, -2
 193 00c0 0F92      		push r0
 194               	.LCFI1:
 195               		.cfi_def_cfa_offset 4
 196               		.cfi_offset 0, -3
 197 00c2 0FB6      		in r0,__SREG__
 198 00c4 0F92      		push r0
 199 00c6 1124      		clr __zero_reg__
 200 00c8 8F93      		push r24
 201               	.LCFI2:
 202               		.cfi_def_cfa_offset 5
 203               		.cfi_offset 24, -4
 204 00ca 9F93      		push r25
 205               	.LCFI3:
 206               		.cfi_def_cfa_offset 6
 207               		.cfi_offset 25, -5
 208 00cc EF93      		push r30
 209               	.LCFI4:
 210               		.cfi_def_cfa_offset 7
 211               		.cfi_offset 30, -6
 212 00ce FF93      		push r31
 213               	.LCFI5:
 214               		.cfi_def_cfa_offset 8
 215               		.cfi_offset 31, -7
 216               	/* prologue: Signal */
 217               	/* frame size = 0 */
 218               	/* stack size = 7 */
 219               	.L__stack_usage = 7
  74:../drivers/UART.c ****     uint8_t tmphead;
  75:../drivers/UART.c **** 
  76:../drivers/UART.c ****     tmphead = UART_RxHead + 1;
 220               		.loc 1 76 0
 221 00d0 8091 0000 		lds r24,UART_RxHead
 222 00d4 8F5F      		subi r24,lo8(-(1))
 223               	.LVL7:
  77:../drivers/UART.c ****     UART_RxBuf[tmphead] = UDR0;
 224               		.loc 1 77 0
 225 00d6 E82F      		mov r30,r24
 226 00d8 F0E0      		ldi r31,0
 227 00da 9091 C600 		lds r25,198
 228 00de E050      		subi r30,lo8(-(UART_RxBuf))
 229 00e0 F040      		sbci r31,hi8(-(UART_RxBuf))
 230 00e2 9083      		st Z,r25
  78:../drivers/UART.c ****     UART_RxHead = tmphead;
 231               		.loc 1 78 0
 232 00e4 8093 0000 		sts UART_RxHead,r24
  79:../drivers/UART.c ****     UART_RxFlag = 1;
 233               		.loc 1 79 0
 234 00e8 81E0      		ldi r24,lo8(1)
 235               	.LVL8:
 236 00ea 8093 0000 		sts UART_RxFlag,r24
 237               	.LVL9:
 238               	/* epilogue start */
  80:../drivers/UART.c **** }
 239               		.loc 1 80 0
 240 00ee FF91      		pop r31
 241 00f0 EF91      		pop r30
 242 00f2 9F91      		pop r25
 243 00f4 8F91      		pop r24
 244 00f6 0F90      		pop r0
 245 00f8 0FBE      		out __SREG__,r0
 246 00fa 0F90      		pop r0
 247 00fc 1F90      		pop r1
 248 00fe 1895      		reti
 249               		.cfi_endproc
 250               	.LFE5:
 252               	.global	__vector_19
 254               	__vector_19:
 255               	.LFB6:
  81:../drivers/UART.c **** 
  82:../drivers/UART.c **** SIGNAL(USART_UDRE_vect) //Interrupt UART Data Register Empty (Transmit Byte)
  83:../drivers/UART.c **** {
 256               		.loc 1 83 0
 257               		.cfi_startproc
 258 0100 1F92      		push r1
 259               	.LCFI6:
 260               		.cfi_def_cfa_offset 3
 261               		.cfi_offset 1, -2
 262 0102 0F92      		push r0
 263               	.LCFI7:
 264               		.cfi_def_cfa_offset 4
 265               		.cfi_offset 0, -3
 266 0104 0FB6      		in r0,__SREG__
 267 0106 0F92      		push r0
 268 0108 1124      		clr __zero_reg__
 269 010a 8F93      		push r24
 270               	.LCFI8:
 271               		.cfi_def_cfa_offset 5
 272               		.cfi_offset 24, -4
 273 010c 9F93      		push r25
 274               	.LCFI9:
 275               		.cfi_def_cfa_offset 6
 276               		.cfi_offset 25, -5
 277 010e EF93      		push r30
 278               	.LCFI10:
 279               		.cfi_def_cfa_offset 7
 280               		.cfi_offset 30, -6
 281 0110 FF93      		push r31
 282               	.LCFI11:
 283               		.cfi_def_cfa_offset 8
 284               		.cfi_offset 31, -7
 285               	/* prologue: Signal */
 286               	/* frame size = 0 */
 287               	/* stack size = 7 */
 288               	.L__stack_usage = 7
  84:../drivers/UART.c ****     uint8_t tmptail;
  85:../drivers/UART.c **** 
  86:../drivers/UART.c **** 
  87:../drivers/UART.c ****     if(UART_TxHead != UART_TxTail)  //If Transmit Buffer Not Free, Transmit Byte
 289               		.loc 1 87 0
 290 0112 9091 0000 		lds r25,UART_TxHead
 291 0116 8091 0000 		lds r24,UART_TxTail
 292 011a 9817      		cp r25,r24
 293 011c 01F0      		breq .L14
  88:../drivers/UART.c ****     {
  89:../drivers/UART.c ****         tmptail = UART_TxTail + 1;
 294               		.loc 1 89 0
 295 011e E091 0000 		lds r30,UART_TxTail
 296 0122 EF5F      		subi r30,lo8(-(1))
 297               	.LVL10:
  90:../drivers/UART.c ****         UART_TxTail = tmptail;
 298               		.loc 1 90 0
 299 0124 E093 0000 		sts UART_TxTail,r30
  91:../drivers/UART.c ****         UDR0 = UART_TxBuf[tmptail];
 300               		.loc 1 91 0
 301 0128 F0E0      		ldi r31,0
 302 012a E050      		subi r30,lo8(-(UART_TxBuf))
 303 012c F040      		sbci r31,hi8(-(UART_TxBuf))
 304               	.LVL11:
 305 012e 8081      		ld r24,Z
 306 0130 8093 C600 		sts 198,r24
 307               	.LVL12:
 308 0134 00C0      		rjmp .L13
 309               	.L14:
  92:../drivers/UART.c ****     }
  93:../drivers/UART.c ****     else    //If Transmit Buffer Free
  94:../drivers/UART.c ****     {
  95:../drivers/UART.c ****         UCSR0B &= ~(1 << UDRIE0);   //Disable Interrupt UART Data Register Empty
 310               		.loc 1 95 0
 311 0136 8091 C100 		lds r24,193
 312 013a 8F7D      		andi r24,lo8(-33)
 313 013c 8093 C100 		sts 193,r24
 314               	.L13:
 315               	/* epilogue start */
  96:../drivers/UART.c ****     }
  97:../drivers/UART.c **** }
 316               		.loc 1 97 0
 317 0140 FF91      		pop r31
 318 0142 EF91      		pop r30
 319 0144 9F91      		pop r25
 320 0146 8F91      		pop r24
 321 0148 0F90      		pop r0
 322 014a 0FBE      		out __SREG__,r0
 323 014c 0F90      		pop r0
 324 014e 1F90      		pop r1
 325 0150 1895      		reti
 326               		.cfi_endproc
 327               	.LFE6:
 329               	.global	uart_send_hex
 331               	uart_send_hex:
 332               	.LFB7:
  98:../drivers/UART.c **** 
  99:../drivers/UART.c **** /********************************************************************************
 100:../drivers/UART.c **** Conversion HEX to ASCII and send to UART
 101:../drivers/UART.c **** ********************************************************************************/
 102:../drivers/UART.c **** void uart_send_hex(uint8_t hexNumber)
 103:../drivers/UART.c **** {
 333               		.loc 1 103 0
 334               		.cfi_startproc
 335               	.LVL13:
 336 0152 CF93      		push r28
 337               	.LCFI12:
 338               		.cfi_def_cfa_offset 3
 339               		.cfi_offset 28, -2
 340               	/* prologue: function */
 341               	/* frame size = 0 */
 342               	/* stack size = 1 */
 343               	.L__stack_usage = 1
 344 0154 C82F      		mov r28,r24
 104:../drivers/UART.c ****     uint8_t tmp;
 105:../drivers/UART.c **** 
 106:../drivers/UART.c ****     tmp = hexNumber >> 4;
 345               		.loc 1 106 0
 346 0156 8295      		swap r24
 347               	.LVL14:
 348 0158 8F70      		andi r24,lo8(15)
 349               	.LVL15:
 107:../drivers/UART.c ****     if(tmp > 9) tmp = (tmp - 9) | 0x40;
 350               		.loc 1 107 0
 351 015a 8A30      		cpi r24,lo8(10)
 352 015c 00F0      		brlo .L17
 353               		.loc 1 107 0 is_stmt 0 discriminator 1
 354 015e 8950      		subi r24,lo8(-(-9))
 355               	.LVL16:
 356 0160 8064      		ori r24,lo8(64)
 357               	.LVL17:
 358 0162 00C0      		rjmp .L18
 359               	.L17:
 108:../drivers/UART.c ****     else tmp |= 0x30;
 360               		.loc 1 108 0 is_stmt 1
 361 0164 8063      		ori r24,lo8(48)
 362               	.LVL18:
 363               	.L18:
 109:../drivers/UART.c ****     uart_send_byte(tmp);
 364               		.loc 1 109 0
 365 0166 0E94 0000 		call uart_send_byte
 366               	.LVL19:
 110:../drivers/UART.c ****     hexNumber &= 0x0F;
 367               		.loc 1 110 0
 368 016a 8C2F      		mov r24,r28
 369 016c 8F70      		andi r24,lo8(15)
 370               	.LVL20:
 111:../drivers/UART.c ****     if(hexNumber > 9) hexNumber = (hexNumber - 9) | 0x40;
 371               		.loc 1 111 0
 372 016e 8A30      		cpi r24,lo8(10)
 373 0170 00F0      		brlo .L19
 374               		.loc 1 111 0 is_stmt 0 discriminator 1
 375 0172 8950      		subi r24,lo8(-(-9))
 376               	.LVL21:
 377 0174 8064      		ori r24,lo8(64)
 378               	.LVL22:
 379 0176 00C0      		rjmp .L20
 380               	.L19:
 112:../drivers/UART.c ****     else hexNumber |= 0x30;
 381               		.loc 1 112 0 is_stmt 1
 382 0178 8063      		ori r24,lo8(48)
 383               	.LVL23:
 384               	.L20:
 385               	/* epilogue start */
 113:../drivers/UART.c ****     uart_send_byte(hexNumber);
 114:../drivers/UART.c **** }
 386               		.loc 1 114 0
 387 017a CF91      		pop r28
 113:../drivers/UART.c ****     uart_send_byte(hexNumber);
 388               		.loc 1 113 0
 389 017c 0C94 0000 		jmp uart_send_byte
 390               	.LVL24:
 391               		.cfi_endproc
 392               	.LFE7:
 394               		.local	UART_RxFlag
 395               		.comm	UART_RxFlag,1,1
 396               		.local	UART_TxTail
 397               		.comm	UART_TxTail,1,1
 398               		.local	UART_TxHead
 399               		.comm	UART_TxHead,1,1
 400               		.local	UART_TxBuf
 401               		.comm	UART_TxBuf,256,1
 402               		.local	UART_RxTail
 403               		.comm	UART_RxTail,1,1
 404               		.local	UART_RxHead
 405               		.comm	UART_RxHead,1,1
 406               		.local	UART_RxBuf
 407               		.comm	UART_RxBuf,256,1
 408               	.Letext0:
 409               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 UART.c
     /tmp/ccELpPkQ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccELpPkQ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccELpPkQ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccELpPkQ.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccELpPkQ.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccELpPkQ.s:12     .text:0000000000000000 uart_init
     /tmp/ccELpPkQ.s:401    .bss:0000000000000103 UART_RxTail
     /tmp/ccELpPkQ.s:403    .bss:0000000000000104 UART_RxHead
     /tmp/ccELpPkQ.s:395    .bss:0000000000000001 UART_TxTail
     /tmp/ccELpPkQ.s:397    .bss:0000000000000002 UART_TxHead
     /tmp/ccELpPkQ.s:45     .text:0000000000000024 uart_update_baudrate
     /tmp/ccELpPkQ.s:90     .text:0000000000000060 uart_check_receiver
                             .bss:0000000000000000 UART_RxFlag
     /tmp/ccELpPkQ.s:107    .text:0000000000000066 uart_send_byte
     /tmp/ccELpPkQ.s:399    .bss:0000000000000003 UART_TxBuf
     /tmp/ccELpPkQ.s:144    .text:000000000000008e uart_get_byte
     /tmp/ccELpPkQ.s:405    .bss:0000000000000105 UART_RxBuf
     /tmp/ccELpPkQ.s:185    .text:00000000000000be __vector_18
     /tmp/ccELpPkQ.s:254    .text:0000000000000100 __vector_19
     /tmp/ccELpPkQ.s:331    .text:0000000000000152 uart_send_hex

UNDEFINED SYMBOLS
__udivmodsi4
__do_clear_bss
