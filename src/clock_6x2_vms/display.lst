   1               		.file	"display.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	display_wait_right
  12               	display_wait_right:
  13               	.LFB19:
  14               		.file 1 "display.c"
   1:display.c     **** #include <avr/io.h>
   2:display.c     **** #include <avr/interrupt.h>
   3:display.c     **** #include <avr/pgmspace.h>
   4:display.c     **** #include <util/delay.h>
   5:display.c     **** #include <stdint.h>
   6:display.c     **** #include "config.h"
   7:display.c     **** #include "max7219.h"
   8:display.c     **** #include "fonts.h"
   9:display.c     **** #include "cyrillicfont.h"
  10:display.c     **** #include "text.h"
  11:display.c     **** #include "UART.h"
  12:display.c     **** #include "neo7m.h"
  13:display.c     **** #include "timer.h"
  14:display.c     **** #include "display.h"
  15:display.c     **** 
  16:display.c     **** #define DISPLAY_TIMER_ID 0
  17:display.c     **** 
  18:display.c     **** #define MAX7219_PER_ROW 6
  19:display.c     **** 
  20:display.c     **** #define DISPLAY_VIRTUAL_ROWS 32
  21:display.c     **** #define DISPLAY_ROWS 16
  22:display.c     **** #define DISPLAY_BOTTOM_2_SHIFT 64
  23:display.c     **** 
  24:display.c     **** const uint8_t bit_reverse_table256[] PROGMEM =
  25:display.c     **** {
  26:display.c     ****     0x00, 0x80, 0x40, 0xC0, 0x20, 0xA0, 0x60, 0xE0, 0x10, 0x90, 0x50, 0xD0, 0x30, 0xB0, 0x70, 0xF0,
  27:display.c     ****     0x08, 0x88, 0x48, 0xC8, 0x28, 0xA8, 0x68, 0xE8, 0x18, 0x98, 0x58, 0xD8, 0x38, 0xB8, 0x78, 0xF8,
  28:display.c     ****     0x04, 0x84, 0x44, 0xC4, 0x24, 0xA4, 0x64, 0xE4, 0x14, 0x94, 0x54, 0xD4, 0x34, 0xB4, 0x74, 0xF4,
  29:display.c     ****     0x0C, 0x8C, 0x4C, 0xCC, 0x2C, 0xAC, 0x6C, 0xEC, 0x1C, 0x9C, 0x5C, 0xDC, 0x3C, 0xBC, 0x7C, 0xFC,
  30:display.c     ****     0x02, 0x82, 0x42, 0xC2, 0x22, 0xA2, 0x62, 0xE2, 0x12, 0x92, 0x52, 0xD2, 0x32, 0xB2, 0x72, 0xF2,
  31:display.c     ****     0x0A, 0x8A, 0x4A, 0xCA, 0x2A, 0xAA, 0x6A, 0xEA, 0x1A, 0x9A, 0x5A, 0xDA, 0x3A, 0xBA, 0x7A, 0xFA,
  32:display.c     ****     0x06, 0x86, 0x46, 0xC6, 0x26, 0xA6, 0x66, 0xE6, 0x16, 0x96, 0x56, 0xD6, 0x36, 0xB6, 0x76, 0xF6,
  33:display.c     ****     0x0E, 0x8E, 0x4E, 0xCE, 0x2E, 0xAE, 0x6E, 0xEE, 0x1E, 0x9E, 0x5E, 0xDE, 0x3E, 0xBE, 0x7E, 0xFE,
  34:display.c     ****     0x01, 0x81, 0x41, 0xC1, 0x21, 0xA1, 0x61, 0xE1, 0x11, 0x91, 0x51, 0xD1, 0x31, 0xB1, 0x71, 0xF1,
  35:display.c     ****     0x09, 0x89, 0x49, 0xC9, 0x29, 0xA9, 0x69, 0xE9, 0x19, 0x99, 0x59, 0xD9, 0x39, 0xB9, 0x79, 0xF9,
  36:display.c     ****     0x05, 0x85, 0x45, 0xC5, 0x25, 0xA5, 0x65, 0xE5, 0x15, 0x95, 0x55, 0xD5, 0x35, 0xB5, 0x75, 0xF5,
  37:display.c     ****     0x0D, 0x8D, 0x4D, 0xCD, 0x2D, 0xAD, 0x6D, 0xED, 0x1D, 0x9D, 0x5D, 0xDD, 0x3D, 0xBD, 0x7D, 0xFD,
  38:display.c     ****     0x03, 0x83, 0x43, 0xC3, 0x23, 0xA3, 0x63, 0xE3, 0x13, 0x93, 0x53, 0xD3, 0x33, 0xB3, 0x73, 0xF3,
  39:display.c     ****     0x0B, 0x8B, 0x4B, 0xCB, 0x2B, 0xAB, 0x6B, 0xEB, 0x1B, 0x9B, 0x5B, 0xDB, 0x3B, 0xBB, 0x7B, 0xFB,
  40:display.c     ****     0x07, 0x87, 0x47, 0xC7, 0x27, 0xA7, 0x67, 0xE7, 0x17, 0x97, 0x57, 0xD7, 0x37, 0xB7, 0x77, 0xF7,
  41:display.c     ****     0x0F, 0x8F, 0x4F, 0xCF, 0x2F, 0xAF, 0x6F, 0xEF, 0x1F, 0x9F, 0x5F, 0xDF, 0x3F, 0xBF, 0x7F, 0xFF
  42:display.c     **** };
  43:display.c     **** #define reverse(byte) pgm_read_byte(&bit_reverse_table256[byte])
  44:display.c     **** 
  45:display.c     **** const uint8_t img_table[16][6] PROGMEM =
  46:display.c     **** {
  47:display.c     ****     0x0,0x0,0x0,0x0,0x0,0x0,
  48:display.c     ****     0x0,0x9,0x74,0x4c,0x60,0x0,
  49:display.c     ****     0x0,0x9,0x46,0xd2,0x80,0x0,
  50:display.c     ****     0x0,0xf,0x75,0x52,0xe0,0x0,
  51:display.c     ****     0x0,0x9,0x44,0x5e,0x80,0x0,
  52:display.c     ****     0x0,0x9,0x74,0x52,0x60,0x0,
  53:display.c     ****     0x0,0x0,0x0,0x0,0x0,0x0,
  54:display.c     ****     0x0,0x0,0x0,0x0,0x0,0x0,
  55:display.c     ****     0x0,0x0,0x0,0x0,0x0,0x0,
  56:display.c     ****     0x0,0x64,0xba,0x4c,0x35,0x0,
  57:display.c     ****     0x0,0x94,0xa2,0x52,0x55,0x0,
  58:display.c     ****     0x0,0x85,0xa3,0xd2,0x53,0x0,
  59:display.c     ****     0x0,0x96,0xa2,0x5e,0x51,0x0,
  60:display.c     ****     0x0,0x64,0xa2,0x52,0x96,0x0,
  61:display.c     ****     0x0,0x0,0x0,0x0,0x0,0x0,
  62:display.c     ****     0x0,0x0,0x0,0x0,0x0,0x0
  63:display.c     **** };
  64:display.c     **** 
  65:display.c     **** static uint8_t display_full_buf[DISPLAY_ROWS][MAX7219_PER_ROW];
  66:display.c     **** static uint8_t display_top_buf[MAX7219_ROWS][MAX7219_PER_ROW];
  67:display.c     **** static uint8_t display_bottom_buf[MAX7219_ROWS][32];
  68:display.c     **** static uint8_t *display_buf[DISPLAY_VIRTUAL_ROWS] =
  69:display.c     **** {
  70:display.c     ****     display_full_buf[0], display_full_buf[1], display_full_buf[2], display_full_buf[3], display_ful
  71:display.c     ****     display_full_buf[8], display_full_buf[9], display_full_buf[10], display_full_buf[11], display_f
  72:display.c     ****     display_top_buf[0], display_top_buf[1], display_top_buf[2], display_top_buf[3], display_top_buf
  73:display.c     ****     display_bottom_buf[0], display_bottom_buf[1], display_bottom_buf[2], display_bottom_buf[3], dis
  74:display.c     **** };
  75:display.c     **** 
  76:display.c     **** static uint8_t display_row_shift=16;
  77:display.c     **** static uint8_t display_col_shift=0;
  78:display.c     **** 
  79:display.c     **** #define DISPLAY_STATE_IDLE 0
  80:display.c     **** #define DISPLAY_STATE_ACTIVATING 1
  81:display.c     **** #define DISPLAY_STATE_WAITING 2
  82:display.c     **** #define DISPLAY_STATE_ACTIVE 3
  83:display.c     **** #define DISPLAY_STATE_INACTIVE 4
  84:display.c     **** static uint8_t display_state=DISPLAY_STATE_IDLE;
  85:display.c     **** 
  86:display.c     **** void print_img(void);
  87:display.c     **** void print_top_time(void);
  88:display.c     **** void print_bottom_dow(void);
  89:display.c     **** void print_bottom_date(void);
  90:display.c     **** void display_wait_down(void);
  91:display.c     **** void display_wait_right(void);
  92:display.c     **** void display_scroll_up(void);
  93:display.c     **** void display_scroll_down(void);
  94:display.c     **** void display_scroll_right(void);
  95:display.c     **** void display_clear_buf(void);
  96:display.c     **** 
  97:display.c     **** void display_init(void)
  98:display.c     **** {
  99:display.c     ****     display_clear_buf();
 100:display.c     ****     // print_img();
 101:display.c     ****     max7219_init();
 102:display.c     ****     max7219_update();
 103:display.c     **** }
 104:display.c     **** 
 105:display.c     **** void print_full_time(void)
 106:display.c     **** {
 107:display.c     ****     uint8_t h_l = get_hour_bcd_l();
 108:display.c     ****     uint8_t h_h = get_hour_bcd_h();
 109:display.c     ****     uint8_t m_l = get_minute_bcd_l();
 110:display.c     ****     uint8_t m_h = get_minute_bcd_h();
 111:display.c     **** 
 112:display.c     ****     for (uint8_t i=0; i<30; i+=2)
 113:display.c     ****     {
 114:display.c     ****         display_full_buf[i>>1][0] = tdDigital15table(h_h, i);
 115:display.c     ****         display_full_buf[i>>1][1] = tdDigital15table(h_h, i+1) | (tdDigital15table(h_l, i) >> 4);
 116:display.c     ****         display_full_buf[i>>1][2] = (tdDigital15table(h_l, i) << 4) | (tdDigital15table(h_l, i+1) >
 117:display.c     ****         display_full_buf[i>>1][3] = tdDigital15table(m_h, i) >> 1;
 118:display.c     ****         display_full_buf[i>>1][4] = (tdDigital15table(m_h, i) << 7) | (tdDigital15table(m_h, i+1) >
 119:display.c     ****         display_full_buf[i>>1][5] = (tdDigital15table(m_l, i) << 3) | (tdDigital15table(m_l, i+1) >
 120:display.c     ****     }
 121:display.c     **** }
 122:display.c     **** 
 123:display.c     **** 
 124:display.c     **** void print_img(void)
 125:display.c     **** {
 126:display.c     ****     for (uint8_t i=0; i<6; i++)
 127:display.c     ****     {
 128:display.c     ****         for (uint8_t j=0; j<16; j++)
 129:display.c     ****         {
 130:display.c     ****             uint8_t tmp = pgm_read_byte(&img_table[j][i]);
 131:display.c     ****             display_full_buf[j][i] = tmp;
 132:display.c     ****         }
 133:display.c     ****     }
 134:display.c     **** }
 135:display.c     **** 
 136:display.c     **** void print_top_time(void)
 137:display.c     **** {
 138:display.c     ****     uint8_t h_l = get_hour_bcd_l();
 139:display.c     ****     uint8_t h_h = get_hour_bcd_h();
 140:display.c     ****     uint8_t m_l = get_minute_bcd_l();
 141:display.c     ****     uint8_t m_h = get_minute_bcd_h();
 142:display.c     ****     uint8_t s_l = get_second_bcd_l();
 143:display.c     ****     uint8_t s_h = get_second_bcd_h();
 144:display.c     **** 
 145:display.c     ****     if(h_h == 0)
 146:display.c     ****     {
 147:display.c     ****         for (uint8_t i=0; i<7; i++)
 148:display.c     ****         {
 149:display.c     ****             display_top_buf[i][0] = 0;
 150:display.c     ****         }
 151:display.c     ****     }
 152:display.c     ****     else
 153:display.c     ****     {
 154:display.c     ****         for (uint8_t i=0; i<7; i++)
 155:display.c     ****         {
 156:display.c     ****             display_top_buf[i][0] = dDigital7table(h_h, i) >> 1;
 157:display.c     ****         }
 158:display.c     ****     }
 159:display.c     **** 
 160:display.c     ****     for (uint8_t i=0; i<7; i++)
 161:display.c     ****     {
 162:display.c     ****         display_top_buf[i][1] = dDigital7table(h_l, i);
 163:display.c     ****         display_top_buf[i][2] = dDigital7table(m_h, i) >> 2;
 164:display.c     ****         display_top_buf[i][3] = dDigital7table(m_l, i) >> 1;
 165:display.c     ****         display_top_buf[i][4] = dDigital7table(s_h, i) >> 3;
 166:display.c     ****         display_top_buf[i][5] = dDigital7table(s_l, i) >> 2;
 167:display.c     ****     }
 168:display.c     **** 
 169:display.c     ****     if(s_l & 0x01)
 170:display.c     ****     {
 171:display.c     ****         display_top_buf[1][1] |= 0x01;
 172:display.c     ****         display_top_buf[5][1] |= 0x01;
 173:display.c     ****         display_top_buf[1][4] |= 0x80;
 174:display.c     ****         display_top_buf[5][4] |= 0x80;
 175:display.c     ****     }
 176:display.c     **** }
 177:display.c     **** 
 178:display.c     **** void print_bottom_dow(void)
 179:display.c     **** {
 180:display.c     ****     uint8_t dow = get_dow();
 181:display.c     ****     uint8_t shift=get_dow_shift(dow);
 182:display.c     ****     uint8_t col, col_shift, c, c_len;
 183:display.c     **** 
 184:display.c     ****     for(uint8_t i=0; i<MAX7219_ROWS; i++)
 185:display.c     ****         for(uint8_t j=0; j<MAX7219_PER_ROW; j++)
 186:display.c     ****             display_bottom_buf[i][j] = 0;
 187:display.c     **** 
 188:display.c     ****     for(uint8_t i=0; i<get_dow_len(dow); i++)
 189:display.c     ****     {
 190:display.c     ****         c = get_dow_str(dow, i);
 191:display.c     ****         c_len = cyr7width(c);
 192:display.c     ****         col = shift >> 3;
 193:display.c     ****         col_shift = shift & 0x07;
 194:display.c     ****         if(col_shift)
 195:display.c     ****         {
 196:display.c     ****             for (uint8_t j=0; j<7; j++)
 197:display.c     ****             {
 198:display.c     ****                 display_bottom_buf[j][col] |= cyr7table(c, j) >> col_shift;
 199:display.c     ****             }
 200:display.c     ****             if((col_shift + c_len) > 7)
 201:display.c     ****             {
 202:display.c     ****                 col++;
 203:display.c     ****                 col_shift = 8 - col_shift;
 204:display.c     ****                 for (uint8_t j=0; j<7; j++)
 205:display.c     ****                 {
 206:display.c     ****                     display_bottom_buf[j][col] = cyr7table(c, j) << col_shift;
 207:display.c     ****                 }
 208:display.c     ****             }
 209:display.c     ****         }
 210:display.c     ****         else
 211:display.c     ****         {
 212:display.c     ****             for (uint8_t j=0; j<7; j++)
 213:display.c     ****             {
 214:display.c     ****                 display_bottom_buf[j][col] = cyr7table(c, j);
 215:display.c     ****             }
 216:display.c     ****         }
 217:display.c     ****         shift += c_len + 1;
 218:display.c     ****     }
 219:display.c     **** }
 220:display.c     **** 
 221:display.c     **** void print_bottom_date(void)
 222:display.c     **** {
 223:display.c     ****     uint8_t date_l = get_date_bcd_l();
 224:display.c     ****     uint8_t date_h = get_date_bcd_h();
 225:display.c     ****     uint8_t mon = get_month() - 1;
 226:display.c     ****     uint8_t width = _months_width(mon) + 6;
 227:display.c     ****     if (date_h > 0)
 228:display.c     ****     {
 229:display.c     ****         width += 6;
 230:display.c     ****     }
 231:display.c     ****     uint8_t shift = DISPLAY_BOTTOM_2_SHIFT + (48 - width)/2;
 232:display.c     ****     uint8_t col, col_shift;
 233:display.c     **** 
 234:display.c     ****     for(uint8_t i=0; i<8; i++)
 235:display.c     ****         for(uint8_t j=8; j<14; j++)
 236:display.c     ****             display_bottom_buf[i][j] = 0;
 237:display.c     **** 
 238:display.c     ****     if(date_h)
 239:display.c     ****     {
 240:display.c     ****         col = shift >> 3;
 241:display.c     ****         col_shift = shift & 0x07;
 242:display.c     ****         for (uint8_t j=0; j<7; j++)
 243:display.c     ****         {
 244:display.c     ****             display_bottom_buf[j][col] = dDigital7table(date_h, j) >> col_shift;
 245:display.c     ****         }
 246:display.c     ****         if((col_shift + 5) > 7)
 247:display.c     ****         {
 248:display.c     ****             col++;
 249:display.c     ****             col_shift = 8 - col_shift;
 250:display.c     ****             for (uint8_t j=0; j<7; j++)
 251:display.c     ****             {
 252:display.c     ****                 display_bottom_buf[j][col] = dDigital7table(date_h, j) << col_shift;
 253:display.c     ****             }
 254:display.c     ****         }
 255:display.c     ****         shift += 5 + 1;
 256:display.c     ****     }
 257:display.c     **** 
 258:display.c     ****     col = shift >> 3;
 259:display.c     ****     col_shift = shift & 0x07;
 260:display.c     ****     if(col_shift)
 261:display.c     ****     {
 262:display.c     ****         for (uint8_t j=0; j<7; j++)
 263:display.c     ****         {
 264:display.c     ****             display_bottom_buf[j][col] |= dDigital7table(date_l, j) >> col_shift;
 265:display.c     ****         }
 266:display.c     ****         if((col_shift + 5) > 7)
 267:display.c     ****         {
 268:display.c     ****             col++;
 269:display.c     ****             col_shift = 8 - col_shift;
 270:display.c     ****             for (uint8_t j=0; j<7; j++)
 271:display.c     ****             {
 272:display.c     ****                 display_bottom_buf[j][col] = dDigital7table(date_l, j) << col_shift;
 273:display.c     ****             }
 274:display.c     ****         }
 275:display.c     ****     }
 276:display.c     ****     else
 277:display.c     ****     {
 278:display.c     ****         for (uint8_t j=0; j<7; j++)
 279:display.c     ****         {
 280:display.c     ****             display_bottom_buf[j][col] = dDigital7table(date_l, j);
 281:display.c     ****         }
 282:display.c     ****     }
 283:display.c     ****     shift += 5 + 2;
 284:display.c     **** 
 285:display.c     ****     col = shift / 8;
 286:display.c     ****     col_shift = shift & 0x07;
 287:display.c     ****     for (uint8_t i=0; i<4; i++) {
 288:display.c     ****         for (uint8_t j=0; j<5; j++) {
 289:display.c     ****             uint8_t tmp = _months_table(mon, j, i);
 290:display.c     ****             if (col_shift) {
 291:display.c     ****                 display_bottom_buf[j+2][col] |= tmp >> col_shift;
 292:display.c     ****                 display_bottom_buf[j+2][col+1] = tmp << (8 - col_shift);
 293:display.c     ****             } else {
 294:display.c     ****                 display_bottom_buf[j+2][col] = tmp;
 295:display.c     ****             }
 296:display.c     ****         }
 297:display.c     ****         col++;
 298:display.c     ****     }
 299:display.c     **** }
 300:display.c     **** 
 301:display.c     **** void print_ext_temperature(int16_t temperature)
 302:display.c     **** {
 303:display.c     ****     uint8_t temp_h, temp_l, temp_f, sign=0;
 304:display.c     ****     if (temperature < 0)
 305:display.c     ****     {
 306:display.c     ****         temperature *= -1;
 307:display.c     ****         sign = 1;
 308:display.c     ****     }
 309:display.c     ****     temp_l = temperature >> 4;
 310:display.c     ****     temp_h = temp_l / 10;
 311:display.c     ****     temp_l %= 10;
 312:display.c     ****     temp_f = temperature & 0x0F;
 313:display.c     ****     temp_f *= 10;
 314:display.c     ****     temp_f /= 16;
 315:display.c     ****     for (uint8_t i=0; i<7; i++)
 316:display.c     ****     {
 317:display.c     ****         display_bottom_buf[i][19] = dDigital7table(temp_l, i) >> 6;
 318:display.c     ****         display_bottom_buf[i][20] = (dDigital7table(temp_l, i) << 2) | (dDigital7table(temp_f, i) >
 319:display.c     ****         display_bottom_buf[i][21] = dDigital7table(temp_f, i) << 2;
 320:display.c     ****     }
 321:display.c     ****     display_bottom_buf[3][18] = 0;
 322:display.c     ****     display_bottom_buf[6][20] |= 0x08;
 323:display.c     ****     if (temp_h > 0)
 324:display.c     ****     {
 325:display.c     ****         for (uint8_t i=0; i<7; i++)
 326:display.c     ****         {
 327:display.c     ****             display_bottom_buf[i][19] |= dDigital7table(temp_h, i);
 328:display.c     ****         }
 329:display.c     ****         if (sign)
 330:display.c     ****         {
 331:display.c     ****             display_bottom_buf[3][18] = 0x0E;
 332:display.c     ****         }
 333:display.c     ****     }
 334:display.c     ****     else if (sign)
 335:display.c     ****     {
 336:display.c     ****         display_bottom_buf[3][19] |= 0x38;
 337:display.c     ****     }
 338:display.c     ****     display_bottom_buf[0][21] |= 0x06;
 339:display.c     ****     display_bottom_buf[3][21] |= 0x06;
 340:display.c     ****     display_bottom_buf[1][21] |= 0x09;
 341:display.c     ****     display_bottom_buf[2][21] |= 0x09;
 342:display.c     **** 
 343:display.c     ****     // Temperature to big display
 344:display.c     ****     for (uint8_t i=0; i<30; i+=2)
 345:display.c     ****     {
 346:display.c     ****         display_full_buf[i>>1][0] = tdDigital15table(temp_h, i) >> 4;
 347:display.c     ****         display_full_buf[i>>1][1] = (tdDigital15table(temp_h, i) << 4) | (tdDigital15table(temp_h, 
 348:display.c     ****         display_full_buf[i>>1][2] = tdDigital15table(temp_l, i);
 349:display.c     ****         display_full_buf[i>>1][3] = tdDigital15table(temp_l, i+1);
 350:display.c     ****         display_full_buf[i>>1][4] = tdDigital15table(temp_f, i);
 351:display.c     ****         display_full_buf[i>>1][5] = tdDigital15table(temp_f, i+1);
 352:display.c     ****     }
 353:display.c     ****     display_full_buf[14][3] ^= 4;
 354:display.c     **** }
 355:display.c     **** 
 356:display.c     **** void clear_ext_temperature(void)
 357:display.c     **** {
 358:display.c     ****     for (uint8_t i=0; i<7; i++)
 359:display.c     ****     {
 360:display.c     ****         display_bottom_buf[i][18] = 0;
 361:display.c     ****         display_bottom_buf[i][19] = 0;
 362:display.c     ****         display_bottom_buf[i][20] = 0;
 363:display.c     ****         display_bottom_buf[i][21] = 0;
 364:display.c     ****     }
 365:display.c     **** }
 366:display.c     **** 
 367:display.c     **** void print_pressure(int32_t pressure)
 368:display.c     **** {
 369:display.c     ****     pressure *= 10;
 370:display.c     ****     pressure /= 133;
 371:display.c     ****     uint8_t p1 = pressure / 1000;
 372:display.c     ****     pressure -= (uint16_t)p1 * 1000;
 373:display.c     ****     uint8_t p2 = pressure / 100;
 374:display.c     ****     pressure -= (uint16_t)p2 * 100;
 375:display.c     ****     uint8_t p3 = pressure / 10;
 376:display.c     ****     uint8_t p4 = (uint8_t)pressure - p3 * 10;
 377:display.c     ****     for (uint8_t i=0; i<7; i++)
 378:display.c     ****     {
 379:display.c     ****         display_bottom_buf[i][25] = dDigital7table(p1, i) >> 4;
 380:display.c     ****         display_bottom_buf[i][26] = (dDigital7table(p1, i) << 4) | (dDigital7table(p2, i) >> 2);
 381:display.c     ****         display_bottom_buf[i][27] = dDigital7table(p3, i);
 382:display.c     ****         display_bottom_buf[i][28] = dDigital7table(p4, i);
 383:display.c     ****     }
 384:display.c     ****     display_bottom_buf[6][27] |= 0x02;
 385:display.c     **** }
 386:display.c     **** 
 387:display.c     **** void print_int_temperature(int16_t t)
 388:display.c     **** {
 389:display.c     ****     t /= 10;
 390:display.c     ****     uint8_t temp_l = t % 10;
 391:display.c     ****     uint8_t temp_h = t / 10;
 392:display.c     ****     for (uint8_t i=0; i<7; i++)
 393:display.c     ****     {
 394:display.c     ****         display_bottom_buf[i][16] = dDigital7table(temp_h, i) | (dDigital7table(temp_l, i) >> 6);
 395:display.c     ****         display_bottom_buf[i][17] = (dDigital7table(temp_l, i) << 2);
 396:display.c     ****     }
 397:display.c     ****     display_bottom_buf[0][17] |= 0x06;
 398:display.c     ****     display_bottom_buf[3][17] |= 0x06;
 399:display.c     ****     display_bottom_buf[1][17] |= 0x09;
 400:display.c     ****     display_bottom_buf[2][17] |= 0x09;
 401:display.c     **** }
 402:display.c     **** 
 403:display.c     **** void display_clear_buf(void)
 404:display.c     **** {
 405:display.c     ****     for(uint8_t i=0; i<32; i++)
 406:display.c     ****         for(uint8_t j=0; j<6; j++)
 407:display.c     ****             display_buf[i][j] = 0;
 408:display.c     **** 
 409:display.c     ****     for(uint8_t i=24; i<32; i++)
 410:display.c     ****         for(uint8_t j=0; j<32; j++)
 411:display.c     ****             display_buf[i][j] = 0;
 412:display.c     **** }
 413:display.c     **** 
 414:display.c     **** void max7219_load_row(uint8_t r, uint8_t *buf)
 415:display.c     **** {
 416:display.c     ****     uint8_t tmp, col, row;
 417:display.c     ****     uint8_t col_shift = display_col_shift & 7;
 418:display.c     ****     uint8_t matrix_shift = display_col_shift >> 3;
 419:display.c     **** 
 420:display.c     ****     for(uint8_t m=0; m<MAX7219_NUMBER; m++)
 421:display.c     ****     {
 422:display.c     ****         *buf++ = r + 1;
 423:display.c     **** 
 424:display.c     ****         if(m < MAX7219_PER_ROW)
 425:display.c     ****         {
 426:display.c     ****             row = r + display_row_shift;
 427:display.c     ****             if(row < 24)
 428:display.c     ****                 tmp = display_buf[row][m];
 429:display.c     ****             else
 430:display.c     ****             {
 431:display.c     ****                 col = (m + matrix_shift) & 31;
 432:display.c     ****                 tmp = display_buf[row][col];
 433:display.c     ****                 if(col_shift)
 434:display.c     ****                 {
 435:display.c     ****                     tmp <<= col_shift;
 436:display.c     ****                     col++;
 437:display.c     ****                     col &= 31;
 438:display.c     ****                     tmp |= display_buf[row][col] >> (8 - col_shift);
 439:display.c     ****                 }
 440:display.c     ****             }
 441:display.c     ****             *buf++ = tmp;
 442:display.c     ****         }
 443:display.c     ****         else
 444:display.c     ****         {
 445:display.c     ****             row = 15 - r + display_row_shift;
 446:display.c     ****             col = 11 - m;
 447:display.c     ****             if(row < 24)
 448:display.c     ****                 tmp = display_buf[row][col];
 449:display.c     ****             else
 450:display.c     ****             {
 451:display.c     ****                 col += matrix_shift;
 452:display.c     ****                 col &= 31;
 453:display.c     ****                 tmp = display_buf[row][col];
 454:display.c     ****                 if (col_shift)
 455:display.c     ****                 {
 456:display.c     ****                     tmp <<= col_shift;
 457:display.c     ****                     col++;
 458:display.c     ****                     col &= 31;
 459:display.c     ****                     tmp |= display_buf[row][col] >> (8 - col_shift);
 460:display.c     ****                 }
 461:display.c     ****             }
 462:display.c     ****             *buf++ = reverse(tmp);
 463:display.c     ****         }
 464:display.c     ****     }
 465:display.c     **** }
 466:display.c     **** 
 467:display.c     **** void display_wait_right(void)
 468:display.c     **** {
  15               		.loc 1 468 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 469:display.c     ****     timer_register(DISPLAY_TIMER_ID, 1, display_scroll_right);
  21               		.loc 1 469 0
  22 0000 40E0      		ldi r20,lo8(gs(display_scroll_right))
  23 0002 50E0      		ldi r21,hi8(gs(display_scroll_right))
  24 0004 61E0      		ldi r22,lo8(1)
  25 0006 80E0      		ldi r24,0
  26 0008 0C94 0000 		jmp timer_register
  27               	.LVL0:
  28               		.cfi_endproc
  29               	.LFE19:
  31               	.global	display_wait_down
  33               	display_wait_down:
  34               	.LFB20:
 470:display.c     **** }
 471:display.c     **** 
 472:display.c     **** void display_wait_down(void)
 473:display.c     **** {
  35               		.loc 1 473 0
  36               		.cfi_startproc
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
 474:display.c     ****     timer_register(DISPLAY_TIMER_ID, 1, display_scroll_down);
  41               		.loc 1 474 0
  42 000c 40E0      		ldi r20,lo8(gs(display_scroll_down))
  43 000e 50E0      		ldi r21,hi8(gs(display_scroll_down))
  44 0010 61E0      		ldi r22,lo8(1)
  45 0012 80E0      		ldi r24,0
  46 0014 0C94 0000 		jmp timer_register
  47               	.LVL1:
  48               		.cfi_endproc
  49               	.LFE20:
  51               	.global	display_scroll_right
  53               	display_scroll_right:
  54               	.LFB23:
 475:display.c     **** }
 476:display.c     **** 
 477:display.c     **** void display_scroll_up(void)
 478:display.c     **** {
 479:display.c     ****     if (display_row_shift > 0)
 480:display.c     ****     {
 481:display.c     ****         display_row_shift--;
 482:display.c     ****     }
 483:display.c     ****     if (display_row_shift == 0)
 484:display.c     ****     {
 485:display.c     ****         display_state = DISPLAY_STATE_WAITING;
 486:display.c     ****         timer_stop(DISPLAY_TIMER_ID);
 487:display.c     ****         // timer_register(DISPLAY_TIMER_ID, 50, display_wait_down);//////
 488:display.c     ****     }
 489:display.c     ****     max7219_update();
 490:display.c     **** }
 491:display.c     **** 
 492:display.c     **** void display_scroll_down(void)
 493:display.c     **** {
 494:display.c     ****     if (display_row_shift < 16)
 495:display.c     ****     {
 496:display.c     ****         display_row_shift++;
 497:display.c     ****         max7219_update();
 498:display.c     ****     }
 499:display.c     ****     if (display_row_shift == 16)
 500:display.c     ****     {
 501:display.c     ****         timer_register(DISPLAY_TIMER_ID, 50, display_wait_right);
 502:display.c     ****     }
 503:display.c     **** }
 504:display.c     **** 
 505:display.c     **** void display_scroll_right(void)
 506:display.c     **** {
  55               		.loc 1 506 0
  56               		.cfi_startproc
  57               	/* prologue: function */
  58               	/* frame size = 0 */
  59               	/* stack size = 0 */
  60               	.L__stack_usage = 0
 507:display.c     ****     if((++display_col_shift & 0x3F) == 0)
  61               		.loc 1 507 0
  62 0018 8091 0000 		lds r24,display_col_shift
  63 001c 8F5F      		subi r24,lo8(-(1))
  64 001e 8093 0000 		sts display_col_shift,r24
  65 0022 8F73      		andi r24,lo8(63)
  66 0024 01F4      		brne .L4
 508:display.c     ****     {
 509:display.c     ****         timer_register(DISPLAY_TIMER_ID, 50, display_wait_right);
  67               		.loc 1 509 0
  68 0026 40E0      		ldi r20,lo8(gs(display_wait_right))
  69 0028 50E0      		ldi r21,hi8(gs(display_wait_right))
  70 002a 62E3      		ldi r22,lo8(50)
  71 002c 0E94 0000 		call timer_register
  72               	.LVL2:
  73               	.L4:
 510:display.c     ****     }
 511:display.c     ****     max7219_update();
  74               		.loc 1 511 0
  75 0030 0C94 0000 		jmp max7219_update
  76               	.LVL3:
  77               		.cfi_endproc
  78               	.LFE23:
  80               	.global	display_scroll_up
  82               	display_scroll_up:
  83               	.LFB21:
 478:display.c     ****     if (display_row_shift > 0)
  84               		.loc 1 478 0
  85               		.cfi_startproc
  86               	/* prologue: function */
  87               	/* frame size = 0 */
  88               	/* stack size = 0 */
  89               	.L__stack_usage = 0
 479:display.c     ****     {
  90               		.loc 1 479 0
  91 0034 8091 0000 		lds r24,display_row_shift
  92 0038 8823      		tst r24
  93 003a 01F0      		breq .L7
 481:display.c     ****     }
  94               		.loc 1 481 0
  95 003c 8150      		subi r24,lo8(-(-1))
  96 003e 8093 0000 		sts display_row_shift,r24
  97               	.L7:
 483:display.c     ****     {
  98               		.loc 1 483 0
  99 0042 8091 0000 		lds r24,display_row_shift
 100 0046 8111      		cpse r24,__zero_reg__
 101 0048 00C0      		rjmp .L8
 485:display.c     ****         timer_stop(DISPLAY_TIMER_ID);
 102               		.loc 1 485 0
 103 004a 82E0      		ldi r24,lo8(2)
 104 004c 8093 0000 		sts display_state,r24
 486:display.c     ****         // timer_register(DISPLAY_TIMER_ID, 50, display_wait_down);//////
 105               		.loc 1 486 0
 106 0050 80E0      		ldi r24,0
 107 0052 0E94 0000 		call timer_stop
 108               	.LVL4:
 109               	.L8:
 489:display.c     **** }
 110               		.loc 1 489 0
 111 0056 0C94 0000 		jmp max7219_update
 112               	.LVL5:
 113               		.cfi_endproc
 114               	.LFE21:
 116               	.global	display_scroll_down
 118               	display_scroll_down:
 119               	.LFB22:
 493:display.c     ****     if (display_row_shift < 16)
 120               		.loc 1 493 0
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
 494:display.c     ****     {
 126               		.loc 1 494 0
 127 005a 8091 0000 		lds r24,display_row_shift
 128 005e 8031      		cpi r24,lo8(16)
 129 0060 00F4      		brsh .L13
 496:display.c     ****         max7219_update();
 130               		.loc 1 496 0
 131 0062 8F5F      		subi r24,lo8(-(1))
 132 0064 8093 0000 		sts display_row_shift,r24
 497:display.c     ****     }
 133               		.loc 1 497 0
 134 0068 0E94 0000 		call max7219_update
 135               	.LVL6:
 136               	.L13:
 499:display.c     ****     {
 137               		.loc 1 499 0
 138 006c 8091 0000 		lds r24,display_row_shift
 139 0070 8031      		cpi r24,lo8(16)
 140 0072 01F4      		brne .L12
 141               	.LBB4:
 142               	.LBB5:
 501:display.c     ****     }
 143               		.loc 1 501 0
 144 0074 40E0      		ldi r20,lo8(gs(display_wait_right))
 145 0076 50E0      		ldi r21,hi8(gs(display_wait_right))
 146 0078 62E3      		ldi r22,lo8(50)
 147 007a 80E0      		ldi r24,0
 148 007c 0C94 0000 		jmp timer_register
 149               	.LVL7:
 150               	.L12:
 151 0080 0895      		ret
 152               	.LBE5:
 153               	.LBE4:
 154               		.cfi_endproc
 155               	.LFE22:
 157               	.global	print_full_time
 159               	print_full_time:
 160               	.LFB8:
 106:display.c     ****     uint8_t h_l = get_hour_bcd_l();
 161               		.loc 1 106 0
 162               		.cfi_startproc
 163 0082 4F92      		push r4
 164               	.LCFI0:
 165               		.cfi_def_cfa_offset 3
 166               		.cfi_offset 4, -2
 167 0084 5F92      		push r5
 168               	.LCFI1:
 169               		.cfi_def_cfa_offset 4
 170               		.cfi_offset 5, -3
 171 0086 6F92      		push r6
 172               	.LCFI2:
 173               		.cfi_def_cfa_offset 5
 174               		.cfi_offset 6, -4
 175 0088 7F92      		push r7
 176               	.LCFI3:
 177               		.cfi_def_cfa_offset 6
 178               		.cfi_offset 7, -5
 179 008a 8F92      		push r8
 180               	.LCFI4:
 181               		.cfi_def_cfa_offset 7
 182               		.cfi_offset 8, -6
 183 008c 9F92      		push r9
 184               	.LCFI5:
 185               		.cfi_def_cfa_offset 8
 186               		.cfi_offset 9, -7
 187 008e AF92      		push r10
 188               	.LCFI6:
 189               		.cfi_def_cfa_offset 9
 190               		.cfi_offset 10, -8
 191 0090 BF92      		push r11
 192               	.LCFI7:
 193               		.cfi_def_cfa_offset 10
 194               		.cfi_offset 11, -9
 195 0092 CF92      		push r12
 196               	.LCFI8:
 197               		.cfi_def_cfa_offset 11
 198               		.cfi_offset 12, -10
 199 0094 DF92      		push r13
 200               	.LCFI9:
 201               		.cfi_def_cfa_offset 12
 202               		.cfi_offset 13, -11
 203 0096 EF92      		push r14
 204               	.LCFI10:
 205               		.cfi_def_cfa_offset 13
 206               		.cfi_offset 14, -12
 207 0098 FF92      		push r15
 208               	.LCFI11:
 209               		.cfi_def_cfa_offset 14
 210               		.cfi_offset 15, -13
 211 009a 0F93      		push r16
 212               	.LCFI12:
 213               		.cfi_def_cfa_offset 15
 214               		.cfi_offset 16, -14
 215 009c 1F93      		push r17
 216               	.LCFI13:
 217               		.cfi_def_cfa_offset 16
 218               		.cfi_offset 17, -15
 219 009e CF93      		push r28
 220               	.LCFI14:
 221               		.cfi_def_cfa_offset 17
 222               		.cfi_offset 28, -16
 223 00a0 DF93      		push r29
 224               	.LCFI15:
 225               		.cfi_def_cfa_offset 18
 226               		.cfi_offset 29, -17
 227               	/* prologue: function */
 228               	/* frame size = 0 */
 229               	/* stack size = 16 */
 230               	.L__stack_usage = 16
 107:display.c     ****     uint8_t h_h = get_hour_bcd_h();
 231               		.loc 1 107 0
 232 00a2 0E94 0000 		call get_hour_bcd_l
 233               	.LVL8:
 234 00a6 082F      		mov r16,r24
 235               	.LVL9:
 108:display.c     ****     uint8_t m_l = get_minute_bcd_l();
 236               		.loc 1 108 0
 237 00a8 0E94 0000 		call get_hour_bcd_h
 238               	.LVL10:
 239 00ac C82F      		mov r28,r24
 240               	.LVL11:
 109:display.c     ****     uint8_t m_h = get_minute_bcd_h();
 241               		.loc 1 109 0
 242 00ae 0E94 0000 		call get_minute_bcd_l
 243               	.LVL12:
 244 00b2 182F      		mov r17,r24
 245               	.LVL13:
 110:display.c     **** 
 246               		.loc 1 110 0
 247 00b4 0E94 0000 		call get_minute_bcd_h
 248               	.LVL14:
 249 00b8 2EE1      		ldi r18,lo8(30)
 250 00ba C29F      		mul r28,r18
 251 00bc E001      		movw r28,r0
 252 00be 1124      		clr __zero_reg__
 253               	.LVL15:
 254 00c0 9EE1      		ldi r25,lo8(30)
 255 00c2 099F      		mul r16,r25
 256 00c4 B001      		movw r22,r0
 257 00c6 1124      		clr __zero_reg__
 258 00c8 EEE1      		ldi r30,lo8(30)
 259 00ca 8E9F      		mul r24,r30
 260 00cc C001      		movw r24,r0
 261 00ce 1124      		clr __zero_reg__
 262               	.LVL16:
 263 00d0 FEE1      		ldi r31,lo8(30)
 264 00d2 1F9F      		mul r17,r31
 265 00d4 A001      		movw r20,r0
 266 00d6 1124      		clr __zero_reg__
 267 00d8 20E0      		ldi r18,0
 268 00da 30E0      		ldi r19,0
 269               	.LBB6:
 114:display.c     ****         display_full_buf[i>>1][1] = tdDigital15table(h_h, i+1) | (tdDigital15table(h_l, i) >> 4);
 270               		.loc 1 114 0
 271 00dc E6E0      		ldi r30,lo8(6)
 272 00de 7E2E      		mov r7,r30
 273               	.LBB7:
 115:display.c     ****         display_full_buf[i>>1][2] = (tdDigital15table(h_l, i) << 4) | (tdDigital15table(h_l, i+1) >
 274               		.loc 1 115 0
 275 00e0 7E01      		movw r14,r28
 276 00e2 1FEF      		ldi r17,-1
 277 00e4 E11A      		sub r14,r17
 278 00e6 F10A      		sbc r15,r17
 279               	.LVL17:
 280               	.LBE7:
 281               	.LBB8:
 116:display.c     ****         display_full_buf[i>>1][3] = tdDigital15table(m_h, i) >> 1;
 282               		.loc 1 116 0
 283 00e8 2B01      		movw r4,r22
 284 00ea EFEF      		ldi r30,-1
 285 00ec 4E1A      		sub r4,r30
 286 00ee 5E0A      		sbc r5,r30
 287               	.LBE8:
 288               	.LBB9:
 118:display.c     ****         display_full_buf[i>>1][5] = (tdDigital15table(m_l, i) << 3) | (tdDigital15table(m_l, i+1) >
 289               		.loc 1 118 0
 290 00f0 5C01      		movw r10,r24
 291 00f2 FFEF      		ldi r31,-1
 292 00f4 AF1A      		sub r10,r31
 293 00f6 BF0A      		sbc r11,r31
 294               	.LBE9:
 295               	.LBB10:
 119:display.c     ****     }
 296               		.loc 1 119 0
 297 00f8 4A01      		movw r8,r20
 298 00fa 1FEF      		ldi r17,-1
 299 00fc 811A      		sub r8,r17
 300 00fe 910A      		sbc r9,r17
 301               	.LVL18:
 302               	.L16:
 303               	.LBE10:
 114:display.c     ****         display_full_buf[i>>1][1] = tdDigital15table(h_h, i+1) | (tdDigital15table(h_l, i) >> 4);
 304               		.loc 1 114 0 discriminator 3
 305 0100 C22E      		mov r12,r18
 306 0102 C694      		lsr r12
 307 0104 D12C      		mov r13,__zero_reg__
 308               	.LVL19:
 309               	.LBB11:
 310 0106 FE01      		movw r30,r28
 311 0108 E20F      		add r30,r18
 312 010a F31F      		adc r31,r19
 313 010c E050      		subi r30,lo8(-(TripleDotDigital15table))
 314 010e F040      		sbci r31,hi8(-(TripleDotDigital15table))
 315               	.LVL20:
 316               	/* #APP */
 317               	 ;  114 "display.c" 1
 318 0110 E491      		lpm r30, Z
 319               		
 320               	 ;  0 "" 2
 321               	.LVL21:
 322               	/* #NOAPP */
 323               	.LBE11:
 324 0112 7C9C      		mul r7,r12
 325 0114 D001      		movw r26,r0
 326 0116 7D9C      		mul r7,r13
 327 0118 B00D      		add r27,r0
 328 011a 1124      		clr __zero_reg__
 329 011c A050      		subi r26,lo8(-(display_full_buf))
 330 011e B040      		sbci r27,hi8(-(display_full_buf))
 331 0120 EC93      		st X,r30
 332               	.LVL22:
 333               	.LBB12:
 115:display.c     ****         display_full_buf[i>>1][2] = (tdDigital15table(h_l, i) << 4) | (tdDigital15table(h_l, i+1) >
 334               		.loc 1 115 0 discriminator 3
 335 0122 F701      		movw r30,r14
 336               	.LVL23:
 337 0124 E20F      		add r30,r18
 338 0126 F31F      		adc r31,r19
 339 0128 E050      		subi r30,lo8(-(TripleDotDigital15table))
 340 012a F040      		sbci r31,hi8(-(TripleDotDigital15table))
 341               	/* #APP */
 342               	 ;  115 "display.c" 1
 343 012c D490      		lpm r13, Z
 344               		
 345               	 ;  0 "" 2
 346               	.LVL24:
 347               	/* #NOAPP */
 348 012e FB01      		movw r30,r22
 349 0130 E20F      		add r30,r18
 350 0132 F31F      		adc r31,r19
 351 0134 E050      		subi r30,lo8(-(TripleDotDigital15table))
 352 0136 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 353               	.LVL25:
 354               	.LBE12:
 355               	.LBB13:
 356               	/* #APP */
 357               	 ;  115 "display.c" 1
 358 0138 C490      		lpm r12, Z
 359               		
 360               	 ;  0 "" 2
 361               	.LVL26:
 362               	/* #NOAPP */
 363               	.LBE13:
 364 013a C294      		swap r12
 365               	.LVL27:
 366 013c 1FE0      		ldi r17,lo8(15)
 367 013e C122      		and r12,r17
 368 0140 DC28      		or r13,r12
 369               	.LVL28:
 370 0142 1196      		adiw r26,1
 371 0144 DC92      		st X,r13
 372 0146 1197      		sbiw r26,1
 373               	.LVL29:
 374               	.LBB14:
 116:display.c     ****         display_full_buf[i>>1][3] = tdDigital15table(m_h, i) >> 1;
 375               		.loc 1 116 0 discriminator 3
 376               	/* #APP */
 377               	 ;  116 "display.c" 1
 378 0148 C490      		lpm r12, Z
 379               		
 380               	 ;  0 "" 2
 381               	.LVL30:
 382               	/* #NOAPP */
 383               	.LBE14:
 384               	.LBB15:
 385 014a F201      		movw r30,r4
 386               	.LVL31:
 387 014c E20F      		add r30,r18
 388 014e F31F      		adc r31,r19
 389 0150 E050      		subi r30,lo8(-(TripleDotDigital15table))
 390 0152 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 391               	/* #APP */
 392               	 ;  116 "display.c" 1
 393 0154 E491      		lpm r30, Z
 394               		
 395               	 ;  0 "" 2
 396               	.LVL32:
 397               	/* #NOAPP */
 398               	.LBE15:
 399 0156 F0E1      		ldi r31,lo8(16)
 400 0158 CF9E      		mul r12,r31
 401 015a 6001      		movw r12,r0
 402 015c 1124      		clr __zero_reg__
 403               	.LVL33:
 404 015e E295      		swap r30
 405               	.LVL34:
 406 0160 EF70      		andi r30,lo8(15)
 407 0162 EC29      		or r30,r12
 408 0164 1296      		adiw r26,2
 409 0166 EC93      		st X,r30
 410 0168 1297      		sbiw r26,2
 411 016a F901      		movw r30,r18
 412 016c E80F      		add r30,r24
 413 016e F91F      		adc r31,r25
 414 0170 E050      		subi r30,lo8(-(TripleDotDigital15table))
 415 0172 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 416               	.LVL35:
 417               	.LBB16:
 117:display.c     ****         display_full_buf[i>>1][4] = (tdDigital15table(m_h, i) << 7) | (tdDigital15table(m_h, i+1) >
 418               		.loc 1 117 0 discriminator 3
 419               	/* #APP */
 420               	 ;  117 "display.c" 1
 421 0174 D490      		lpm r13, Z
 422               		
 423               	 ;  0 "" 2
 424               	.LVL36:
 425               	/* #NOAPP */
 426               	.LBE16:
 427 0176 D694      		lsr r13
 428               	.LVL37:
 429 0178 1396      		adiw r26,3
 430 017a DC92      		st X,r13
 431 017c 1397      		sbiw r26,3
 432               	.LVL38:
 433               	.LBB17:
 118:display.c     ****         display_full_buf[i>>1][5] = (tdDigital15table(m_l, i) << 3) | (tdDigital15table(m_l, i+1) >
 434               		.loc 1 118 0 discriminator 3
 435               	/* #APP */
 436               	 ;  118 "display.c" 1
 437 017e D490      		lpm r13, Z
 438               		
 439               	 ;  0 "" 2
 440               	.LVL39:
 441               	/* #NOAPP */
 442               	.LBE17:
 443               	.LBB18:
 444 0180 F501      		movw r30,r10
 445               	.LVL40:
 446 0182 E20F      		add r30,r18
 447 0184 F31F      		adc r31,r19
 448 0186 E050      		subi r30,lo8(-(TripleDotDigital15table))
 449 0188 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 450               	/* #APP */
 451               	 ;  118 "display.c" 1
 452 018a C490      		lpm r12, Z
 453               		
 454               	 ;  0 "" 2
 455               	.LVL41:
 456               	/* #NOAPP */
 457 018c F901      		movw r30,r18
 458 018e E40F      		add r30,r20
 459 0190 F51F      		adc r31,r21
 460 0192 E050      		subi r30,lo8(-(TripleDotDigital15table))
 461 0194 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 462               	.LVL42:
 463               	.LBE18:
 464               	.LBB19:
 465               	/* #APP */
 466               	 ;  118 "display.c" 1
 467 0196 6490      		lpm r6, Z
 468               		
 469               	 ;  0 "" 2
 470               	.LVL43:
 471               	/* #NOAPP */
 472               	.LBE19:
 473 0198 C694      		lsr r12
 474               	.LVL44:
 475 019a 6294      		swap r6
 476               	.LVL45:
 477 019c 6694      		lsr r6
 478 019e 07E0      		ldi r16,lo8(7)
 479 01a0 6022      		and r6,r16
 480 01a2 6C28      		or r6,r12
 481 01a4 10E8      		ldi r17,lo8(-128)
 482 01a6 D19E      		mul r13,r17
 483 01a8 6001      		movw r12,r0
 484 01aa 1124      		clr __zero_reg__
 485 01ac C628      		or r12,r6
 486 01ae 1496      		adiw r26,4
 487 01b0 CC92      		st X,r12
 488 01b2 1497      		sbiw r26,4
 489               	.LVL46:
 490               	.LBB20:
 119:display.c     ****     }
 491               		.loc 1 119 0 discriminator 3
 492               	/* #APP */
 493               	 ;  119 "display.c" 1
 494 01b4 C490      		lpm r12, Z
 495               		
 496               	 ;  0 "" 2
 497               	.LVL47:
 498               	/* #NOAPP */
 499               	.LBE20:
 500               	.LBB21:
 501 01b6 F401      		movw r30,r8
 502               	.LVL48:
 503 01b8 E20F      		add r30,r18
 504 01ba F31F      		adc r31,r19
 505 01bc E050      		subi r30,lo8(-(TripleDotDigital15table))
 506 01be F040      		sbci r31,hi8(-(TripleDotDigital15table))
 507               	/* #APP */
 508               	 ;  119 "display.c" 1
 509 01c0 E491      		lpm r30, Z
 510               		
 511               	 ;  0 "" 2
 512               	.LVL49:
 513               	/* #NOAPP */
 514               	.LBE21:
 515 01c2 F8E0      		ldi r31,lo8(8)
 516 01c4 CF9E      		mul r12,r31
 517 01c6 6001      		movw r12,r0
 518 01c8 1124      		clr __zero_reg__
 519               	.LVL50:
 520 01ca E295      		swap r30
 521               	.LVL51:
 522 01cc E695      		lsr r30
 523 01ce E770      		andi r30,lo8(7)
 524 01d0 EC29      		or r30,r12
 525 01d2 1596      		adiw r26,5
 526 01d4 EC93      		st X,r30
 527               	.LVL52:
 528 01d6 2E5F      		subi r18,-2
 529 01d8 3F4F      		sbci r19,-1
 530               	.LVL53:
 112:display.c     ****     {
 531               		.loc 1 112 0 discriminator 3
 532 01da 2E31      		cpi r18,30
 533 01dc 3105      		cpc r19,__zero_reg__
 534 01de 01F0      		breq .+2
 535 01e0 00C0      		rjmp .L16
 536               	/* epilogue start */
 537               	.LBE6:
 121:display.c     **** 
 538               		.loc 1 121 0
 539 01e2 DF91      		pop r29
 540 01e4 CF91      		pop r28
 541               	.LVL54:
 542 01e6 1F91      		pop r17
 543 01e8 0F91      		pop r16
 544 01ea FF90      		pop r15
 545 01ec EF90      		pop r14
 546               	.LVL55:
 547 01ee DF90      		pop r13
 548               	.LVL56:
 549 01f0 CF90      		pop r12
 550 01f2 BF90      		pop r11
 551 01f4 AF90      		pop r10
 552 01f6 9F90      		pop r9
 553 01f8 8F90      		pop r8
 554 01fa 7F90      		pop r7
 555 01fc 6F90      		pop r6
 556 01fe 5F90      		pop r5
 557 0200 4F90      		pop r4
 558 0202 0895      		ret
 559               		.cfi_endproc
 560               	.LFE8:
 562               	.global	print_img
 564               	print_img:
 565               	.LFB9:
 125:display.c     ****     for (uint8_t i=0; i<6; i++)
 566               		.loc 1 125 0
 567               		.cfi_startproc
 568               	/* prologue: function */
 569               	/* frame size = 0 */
 570               	/* stack size = 0 */
 571               	.L__stack_usage = 0
 572               	.LVL57:
 125:display.c     ****     for (uint8_t i=0; i<6; i++)
 573               		.loc 1 125 0
 574 0204 20E0      		ldi r18,0
 575 0206 30E0      		ldi r19,0
 576               	.LVL58:
 577               	.L19:
 578 0208 80E0      		ldi r24,0
 579 020a 90E0      		ldi r25,0
 580               	.LVL59:
 581               	.L20:
 582               	.LBB22:
 583               	.LBB23:
 584               	.LBB24:
 585               	.LBB25:
 130:display.c     ****             display_full_buf[j][i] = tmp;
 586               		.loc 1 130 0 discriminator 3
 587 020c A901      		movw r20,r18
 588 020e 480F      		add r20,r24
 589 0210 591F      		adc r21,r25
 590 0212 FA01      		movw r30,r20
 591 0214 E050      		subi r30,lo8(-(img_table))
 592 0216 F040      		sbci r31,hi8(-(img_table))
 593               	.LVL60:
 594               	/* #APP */
 595               	 ;  130 "display.c" 1
 596 0218 E491      		lpm r30, Z
 597               		
 598               	 ;  0 "" 2
 599               	.LVL61:
 600               	/* #NOAPP */
 601               	.LBE25:
 131:display.c     ****         }
 602               		.loc 1 131 0 discriminator 3
 603 021a DA01      		movw r26,r20
 604 021c A050      		subi r26,lo8(-(display_full_buf))
 605 021e B040      		sbci r27,hi8(-(display_full_buf))
 606 0220 EC93      		st X,r30
 607 0222 0696      		adiw r24,6
 608               	.LVL62:
 609               	.LBE24:
 128:display.c     ****         {
 610               		.loc 1 128 0 discriminator 3
 611 0224 8036      		cpi r24,96
 612 0226 9105      		cpc r25,__zero_reg__
 613 0228 01F4      		brne .L20
 614               	.LVL63:
 615 022a 2F5F      		subi r18,-1
 616 022c 3F4F      		sbci r19,-1
 617               	.LVL64:
 618               	.LBE23:
 126:display.c     ****     {
 619               		.loc 1 126 0 discriminator 2
 620 022e 2630      		cpi r18,6
 621 0230 3105      		cpc r19,__zero_reg__
 622 0232 01F4      		brne .L19
 623 0234 0895      		ret
 624               	.LBE22:
 625               		.cfi_endproc
 626               	.LFE9:
 628               	.global	print_top_time
 630               	print_top_time:
 631               	.LFB10:
 137:display.c     ****     uint8_t h_l = get_hour_bcd_l();
 632               		.loc 1 137 0
 633               		.cfi_startproc
 634 0236 EF92      		push r14
 635               	.LCFI16:
 636               		.cfi_def_cfa_offset 3
 637               		.cfi_offset 14, -2
 638 0238 FF92      		push r15
 639               	.LCFI17:
 640               		.cfi_def_cfa_offset 4
 641               		.cfi_offset 15, -3
 642 023a 0F93      		push r16
 643               	.LCFI18:
 644               		.cfi_def_cfa_offset 5
 645               		.cfi_offset 16, -4
 646 023c 1F93      		push r17
 647               	.LCFI19:
 648               		.cfi_def_cfa_offset 6
 649               		.cfi_offset 17, -5
 650 023e CF93      		push r28
 651               	.LCFI20:
 652               		.cfi_def_cfa_offset 7
 653               		.cfi_offset 28, -6
 654 0240 DF93      		push r29
 655               	.LCFI21:
 656               		.cfi_def_cfa_offset 8
 657               		.cfi_offset 29, -7
 658               	/* prologue: function */
 659               	/* frame size = 0 */
 660               	/* stack size = 6 */
 661               	.L__stack_usage = 6
 138:display.c     ****     uint8_t h_h = get_hour_bcd_h();
 662               		.loc 1 138 0
 663 0242 0E94 0000 		call get_hour_bcd_l
 664               	.LVL65:
 665 0246 082F      		mov r16,r24
 666               	.LVL66:
 139:display.c     ****     uint8_t m_l = get_minute_bcd_l();
 667               		.loc 1 139 0
 668 0248 0E94 0000 		call get_hour_bcd_h
 669               	.LVL67:
 670 024c D82F      		mov r29,r24
 671               	.LVL68:
 140:display.c     ****     uint8_t m_h = get_minute_bcd_h();
 672               		.loc 1 140 0
 673 024e 0E94 0000 		call get_minute_bcd_l
 674               	.LVL69:
 675 0252 E82E      		mov r14,r24
 676               	.LVL70:
 141:display.c     ****     uint8_t s_l = get_second_bcd_l();
 677               		.loc 1 141 0
 678 0254 0E94 0000 		call get_minute_bcd_h
 679               	.LVL71:
 680 0258 C82F      		mov r28,r24
 681               	.LVL72:
 142:display.c     ****     uint8_t s_h = get_second_bcd_h();
 682               		.loc 1 142 0
 683 025a 0E94 0000 		call get_second_bcd_l
 684               	.LVL73:
 685 025e F82E      		mov r15,r24
 686               	.LVL74:
 143:display.c     **** 
 687               		.loc 1 143 0
 688 0260 0E94 0000 		call get_second_bcd_h
 689               	.LVL75:
 145:display.c     ****     {
 690               		.loc 1 145 0
 691 0264 D111      		cpse r29,__zero_reg__
 692 0266 00C0      		rjmp .L24
 693 0268 E0E0      		ldi r30,lo8(display_top_buf)
 694 026a F0E0      		ldi r31,hi8(display_top_buf)
 695               	.L25:
 696               	.LBB26:
 149:display.c     ****         }
 697               		.loc 1 149 0 discriminator 3
 698 026c 1082      		st Z,__zero_reg__
 699               	.LVL76:
 700 026e 3696      		adiw r30,6
 147:display.c     ****         {
 701               		.loc 1 147 0 discriminator 3
 702 0270 20E0      		ldi r18,hi8(display_top_buf+42)
 703 0272 E030      		cpi r30,lo8(display_top_buf+42)
 704 0274 F207      		cpc r31,r18
 705 0276 01F4      		brne .L25
 706               	.L28:
 707               	.LVL77:
 708 0278 A0E0      		ldi r26,lo8(display_top_buf)
 709 027a B0E0      		ldi r27,hi8(display_top_buf)
 710 027c 97E0      		ldi r25,lo8(7)
 711 027e 099F      		mul r16,r25
 712 0280 8001      		movw r16,r0
 713 0282 1124      		clr __zero_reg__
 714               	.LVL78:
 715 0284 27E0      		ldi r18,lo8(7)
 716 0286 C29F      		mul r28,r18
 717 0288 E001      		movw r28,r0
 718 028a 1124      		clr __zero_reg__
 719               	.LVL79:
 720 028c 97E0      		ldi r25,lo8(7)
 721 028e E99E      		mul r14,r25
 722 0290 B001      		movw r22,r0
 723 0292 1124      		clr __zero_reg__
 724 0294 27E0      		ldi r18,lo8(7)
 725 0296 829F      		mul r24,r18
 726 0298 A001      		movw r20,r0
 727 029a 1124      		clr __zero_reg__
 728 029c 27E0      		ldi r18,lo8(7)
 729 029e F29E      		mul r15,r18
 730 02a0 C001      		movw r24,r0
 731 02a2 1124      		clr __zero_reg__
 732               	.LVL80:
 733               	.LBE26:
 145:display.c     ****     {
 734               		.loc 1 145 0
 735 02a4 20E0      		ldi r18,0
 736 02a6 30E0      		ldi r19,0
 737 02a8 00C0      		rjmp .L26
 738               	.LVL81:
 739               	.L24:
 740 02aa A0E0      		ldi r26,lo8(display_top_buf)
 741 02ac B0E0      		ldi r27,hi8(display_top_buf)
 742 02ae 97E0      		ldi r25,lo8(7)
 743 02b0 D99F      		mul r29,r25
 744 02b2 B001      		movw r22,r0
 745 02b4 1124      		clr __zero_reg__
 746 02b6 20E0      		ldi r18,0
 747 02b8 30E0      		ldi r19,0
 748               	.L27:
 749               	.LVL82:
 750               	.LBB27:
 751               	.LBB28:
 156:display.c     ****         }
 752               		.loc 1 156 0 discriminator 3
 753 02ba FB01      		movw r30,r22
 754 02bc E20F      		add r30,r18
 755 02be F31F      		adc r31,r19
 756 02c0 E050      		subi r30,lo8(-(DotDigital7table))
 757 02c2 F040      		sbci r31,hi8(-(DotDigital7table))
 758               	.LVL83:
 759               	/* #APP */
 760               	 ;  156 "display.c" 1
 761 02c4 E491      		lpm r30, Z
 762               		
 763               	 ;  0 "" 2
 764               	.LVL84:
 765               	/* #NOAPP */
 766               	.LBE28:
 767 02c6 E695      		lsr r30
 768               	.LVL85:
 769 02c8 EC93      		st X,r30
 770               	.LVL86:
 771 02ca 2F5F      		subi r18,-1
 772 02cc 3F4F      		sbci r19,-1
 773               	.LVL87:
 774 02ce 1696      		adiw r26,6
 154:display.c     ****         {
 775               		.loc 1 154 0 discriminator 3
 776 02d0 2730      		cpi r18,7
 777 02d2 3105      		cpc r19,__zero_reg__
 778 02d4 01F4      		brne .L27
 779 02d6 00C0      		rjmp .L28
 780               	.LVL88:
 781               	.L26:
 782               	.LBE27:
 783               	.LBB29:
 784               	.LBB30:
 162:display.c     ****         display_top_buf[i][2] = dDigital7table(m_h, i) >> 2;
 785               		.loc 1 162 0 discriminator 3
 786 02d8 F901      		movw r30,r18
 787 02da E00F      		add r30,r16
 788 02dc F11F      		adc r31,r17
 789 02de E050      		subi r30,lo8(-(DotDigital7table))
 790 02e0 F040      		sbci r31,hi8(-(DotDigital7table))
 791               	.LVL89:
 792               	/* #APP */
 793               	 ;  162 "display.c" 1
 794 02e2 E491      		lpm r30, Z
 795               		
 796               	 ;  0 "" 2
 797               	.LVL90:
 798               	/* #NOAPP */
 799               	.LBE30:
 800 02e4 1196      		adiw r26,1
 801 02e6 EC93      		st X,r30
 802 02e8 1197      		sbiw r26,1
 803               	.LVL91:
 804               	.LBB31:
 163:display.c     ****         display_top_buf[i][3] = dDigital7table(m_l, i) >> 1;
 805               		.loc 1 163 0 discriminator 3
 806 02ea F901      		movw r30,r18
 807               	.LVL92:
 808 02ec EC0F      		add r30,r28
 809 02ee FD1F      		adc r31,r29
 810 02f0 E050      		subi r30,lo8(-(DotDigital7table))
 811 02f2 F040      		sbci r31,hi8(-(DotDigital7table))
 812               	.LVL93:
 813               	/* #APP */
 814               	 ;  163 "display.c" 1
 815 02f4 E491      		lpm r30, Z
 816               		
 817               	 ;  0 "" 2
 818               	.LVL94:
 819               	/* #NOAPP */
 820               	.LBE31:
 821 02f6 E695      		lsr r30
 822 02f8 E695      		lsr r30
 823               	.LVL95:
 824 02fa 1296      		adiw r26,2
 825 02fc EC93      		st X,r30
 826 02fe 1297      		sbiw r26,2
 827               	.LVL96:
 828               	.LBB32:
 164:display.c     ****         display_top_buf[i][4] = dDigital7table(s_h, i) >> 3;
 829               		.loc 1 164 0 discriminator 3
 830 0300 F901      		movw r30,r18
 831 0302 E60F      		add r30,r22
 832 0304 F71F      		adc r31,r23
 833 0306 E050      		subi r30,lo8(-(DotDigital7table))
 834 0308 F040      		sbci r31,hi8(-(DotDigital7table))
 835               	.LVL97:
 836               	/* #APP */
 837               	 ;  164 "display.c" 1
 838 030a E491      		lpm r30, Z
 839               		
 840               	 ;  0 "" 2
 841               	.LVL98:
 842               	/* #NOAPP */
 843               	.LBE32:
 844 030c E695      		lsr r30
 845               	.LVL99:
 846 030e 1396      		adiw r26,3
 847 0310 EC93      		st X,r30
 848 0312 1397      		sbiw r26,3
 849               	.LVL100:
 850               	.LBB33:
 165:display.c     ****         display_top_buf[i][5] = dDigital7table(s_l, i) >> 2;
 851               		.loc 1 165 0 discriminator 3
 852 0314 F901      		movw r30,r18
 853 0316 E40F      		add r30,r20
 854 0318 F51F      		adc r31,r21
 855 031a E050      		subi r30,lo8(-(DotDigital7table))
 856 031c F040      		sbci r31,hi8(-(DotDigital7table))
 857               	.LVL101:
 858               	/* #APP */
 859               	 ;  165 "display.c" 1
 860 031e E491      		lpm r30, Z
 861               		
 862               	 ;  0 "" 2
 863               	.LVL102:
 864               	/* #NOAPP */
 865               	.LBE33:
 866 0320 E695      		lsr r30
 867 0322 E695      		lsr r30
 868 0324 E695      		lsr r30
 869               	.LVL103:
 870 0326 1496      		adiw r26,4
 871 0328 EC93      		st X,r30
 872 032a 1497      		sbiw r26,4
 873               	.LVL104:
 874               	.LBB34:
 166:display.c     ****     }
 875               		.loc 1 166 0 discriminator 3
 876 032c F901      		movw r30,r18
 877 032e E80F      		add r30,r24
 878 0330 F91F      		adc r31,r25
 879 0332 E050      		subi r30,lo8(-(DotDigital7table))
 880 0334 F040      		sbci r31,hi8(-(DotDigital7table))
 881               	.LVL105:
 882               	/* #APP */
 883               	 ;  166 "display.c" 1
 884 0336 E491      		lpm r30, Z
 885               		
 886               	 ;  0 "" 2
 887               	.LVL106:
 888               	/* #NOAPP */
 889               	.LBE34:
 890 0338 E695      		lsr r30
 891 033a E695      		lsr r30
 892               	.LVL107:
 893 033c 1596      		adiw r26,5
 894 033e EC93      		st X,r30
 895 0340 1597      		sbiw r26,5
 896               	.LVL108:
 897 0342 2F5F      		subi r18,-1
 898 0344 3F4F      		sbci r19,-1
 899               	.LVL109:
 900 0346 1696      		adiw r26,6
 901               	.LVL110:
 160:display.c     ****     {
 902               		.loc 1 160 0 discriminator 3
 903 0348 2730      		cpi r18,7
 904 034a 3105      		cpc r19,__zero_reg__
 905 034c 01F0      		breq .+2
 906 034e 00C0      		rjmp .L26
 907               	.LBE29:
 169:display.c     ****     {
 908               		.loc 1 169 0
 909 0350 F0FE      		sbrs r15,0
 910 0352 00C0      		rjmp .L23
 171:display.c     ****         display_top_buf[5][1] |= 0x01;
 911               		.loc 1 171 0
 912 0354 8091 0000 		lds r24,display_top_buf+7
 913               	.LVL111:
 914 0358 8160      		ori r24,lo8(1)
 915 035a 8093 0000 		sts display_top_buf+7,r24
 916               	.LVL112:
 172:display.c     ****         display_top_buf[1][4] |= 0x80;
 917               		.loc 1 172 0
 918 035e 8091 0000 		lds r24,display_top_buf+31
 919 0362 8160      		ori r24,lo8(1)
 920 0364 8093 0000 		sts display_top_buf+31,r24
 173:display.c     ****         display_top_buf[5][4] |= 0x80;
 921               		.loc 1 173 0
 922 0368 8091 0000 		lds r24,display_top_buf+10
 923 036c 8068      		ori r24,lo8(-128)
 924 036e 8093 0000 		sts display_top_buf+10,r24
 174:display.c     ****     }
 925               		.loc 1 174 0
 926 0372 8091 0000 		lds r24,display_top_buf+34
 927 0376 8068      		ori r24,lo8(-128)
 928 0378 8093 0000 		sts display_top_buf+34,r24
 929               	.L23:
 930               	/* epilogue start */
 176:display.c     **** 
 931               		.loc 1 176 0
 932 037c DF91      		pop r29
 933               	.LVL113:
 934 037e CF91      		pop r28
 935               	.LVL114:
 936 0380 1F91      		pop r17
 937 0382 0F91      		pop r16
 938               	.LVL115:
 939 0384 FF90      		pop r15
 940               	.LVL116:
 941 0386 EF90      		pop r14
 942               	.LVL117:
 943 0388 0895      		ret
 944               		.cfi_endproc
 945               	.LFE10:
 947               	.global	print_bottom_dow
 949               	print_bottom_dow:
 950               	.LFB11:
 179:display.c     ****     uint8_t dow = get_dow();
 951               		.loc 1 179 0
 952               		.cfi_startproc
 953 038a AF92      		push r10
 954               	.LCFI22:
 955               		.cfi_def_cfa_offset 3
 956               		.cfi_offset 10, -2
 957 038c BF92      		push r11
 958               	.LCFI23:
 959               		.cfi_def_cfa_offset 4
 960               		.cfi_offset 11, -3
 961 038e CF92      		push r12
 962               	.LCFI24:
 963               		.cfi_def_cfa_offset 5
 964               		.cfi_offset 12, -4
 965 0390 DF92      		push r13
 966               	.LCFI25:
 967               		.cfi_def_cfa_offset 6
 968               		.cfi_offset 13, -5
 969 0392 EF92      		push r14
 970               	.LCFI26:
 971               		.cfi_def_cfa_offset 7
 972               		.cfi_offset 14, -6
 973 0394 FF92      		push r15
 974               	.LCFI27:
 975               		.cfi_def_cfa_offset 8
 976               		.cfi_offset 15, -7
 977 0396 0F93      		push r16
 978               	.LCFI28:
 979               		.cfi_def_cfa_offset 9
 980               		.cfi_offset 16, -8
 981 0398 1F93      		push r17
 982               	.LCFI29:
 983               		.cfi_def_cfa_offset 10
 984               		.cfi_offset 17, -9
 985 039a CF93      		push r28
 986               	.LCFI30:
 987               		.cfi_def_cfa_offset 11
 988               		.cfi_offset 28, -10
 989 039c DF93      		push r29
 990               	.LCFI31:
 991               		.cfi_def_cfa_offset 12
 992               		.cfi_offset 29, -11
 993               	/* prologue: function */
 994               	/* frame size = 0 */
 995               	/* stack size = 10 */
 996               	.L__stack_usage = 10
 180:display.c     ****     uint8_t shift=get_dow_shift(dow);
 997               		.loc 1 180 0
 998 039e 0E94 0000 		call get_dow
 999               	.LVL118:
 1000               	.LBB35:
 181:display.c     ****     uint8_t col, col_shift, c, c_len;
 1001               		.loc 1 181 0
 1002 03a2 C82F      		mov r28,r24
 1003 03a4 D0E0      		ldi r29,0
 1004               	.LVL119:
 1005 03a6 FE01      		movw r30,r28
 1006 03a8 E050      		subi r30,lo8(-(dow_shift))
 1007 03aa F040      		sbci r31,hi8(-(dow_shift))
 1008               	/* #APP */
 1009               	 ;  181 "display.c" 1
 1010 03ac 9491      		lpm r25, Z
 1011               		
 1012               	 ;  0 "" 2
 1013               	.LVL120:
 1014               	/* #NOAPP */
 1015 03ae A0E0      		ldi r26,lo8(display_bottom_buf)
 1016 03b0 B0E0      		ldi r27,hi8(display_bottom_buf)
 1017 03b2 20E0      		ldi r18,lo8(display_bottom_buf+256)
 1018 03b4 30E0      		ldi r19,hi8(display_bottom_buf+256)
 1019               	.LVL121:
 1020               	.L37:
 1021               	.LBE35:
 1022               	.LBB36:
 1023               	.LBB37:
 186:display.c     **** 
 1024               		.loc 1 186 0
 1025 03b6 1C92      		st X,__zero_reg__
 1026               	.LVL122:
 1027 03b8 1196      		adiw r26,1
 1028 03ba 1C92      		st X,__zero_reg__
 1029 03bc 1197      		sbiw r26,1
 1030               	.LVL123:
 1031 03be 1296      		adiw r26,2
 1032 03c0 1C92      		st X,__zero_reg__
 1033 03c2 1297      		sbiw r26,2
 1034               	.LVL124:
 1035 03c4 1396      		adiw r26,3
 1036 03c6 1C92      		st X,__zero_reg__
 1037 03c8 1397      		sbiw r26,3
 1038               	.LVL125:
 1039 03ca 1496      		adiw r26,4
 1040 03cc 1C92      		st X,__zero_reg__
 1041 03ce 1497      		sbiw r26,4
 1042               	.LVL126:
 1043 03d0 1596      		adiw r26,5
 1044 03d2 1C92      		st X,__zero_reg__
 1045 03d4 1597      		sbiw r26,5
 1046               	.LVL127:
 1047 03d6 9096      		adiw r26,32
 1048               	.LBE37:
 184:display.c     ****         for(uint8_t j=0; j<MAX7219_PER_ROW; j++)
 1049               		.loc 1 184 0
 1050 03d8 2A17      		cp r18,r26
 1051 03da 3B07      		cpc r19,r27
 1052 03dc 01F4      		brne .L37
 1053 03de 10E0      		ldi r17,0
 1054               	.LBE36:
 1055               	.LBB38:
 1056               	.LBB39:
 188:display.c     ****     {
 1057               		.loc 1 188 0 discriminator 1
 1058 03e0 BE01      		movw r22,r28
 1059 03e2 6050      		subi r22,lo8(-(dow_len))
 1060 03e4 7040      		sbci r23,hi8(-(dow_len))
 1061               	.LBE39:
 1062               	.LBB40:
 190:display.c     ****         c_len = cyr7width(c);
 1063               		.loc 1 190 0 discriminator 1
 1064 03e6 CC0F      		lsl r28
 1065 03e8 DD1F      		rol r29
 1066               	.LVL128:
 1067 03ea C050      		subi r28,lo8(-(dow_str))
 1068 03ec D040      		sbci r29,hi8(-(dow_str))
 1069               	.LBE40:
 203:display.c     ****                 for (uint8_t j=0; j<7; j++)
 1070               		.loc 1 203 0 discriminator 1
 1071 03ee 08E0      		ldi r16,lo8(8)
 1072               	.LVL129:
 1073               	.L38:
 1074               	.LBB41:
 188:display.c     ****     {
 1075               		.loc 1 188 0 discriminator 1
 1076 03f0 FB01      		movw r30,r22
 1077               	/* #APP */
 1078               	 ;  188 "display.c" 1
 1079 03f2 8491      		lpm r24, Z
 1080               		
 1081               	 ;  0 "" 2
 1082               	.LVL130:
 1083               	/* #NOAPP */
 1084               	.LBE41:
 1085 03f4 1817      		cp r17,r24
 1086 03f6 00F0      		brlo .+2
 1087 03f8 00C0      		rjmp .L50
 1088               	.LVL131:
 1089               	.LBB42:
 190:display.c     ****         c_len = cyr7width(c);
 1090               		.loc 1 190 0
 1091 03fa E881      		ld r30,Y
 1092 03fc F981      		ldd r31,Y+1
 1093 03fe E10F      		add r30,r17
 1094 0400 F11D      		adc r31,__zero_reg__
 1095               	/* #APP */
 1096               	 ;  190 "display.c" 1
 1097 0402 4491      		lpm r20, Z
 1098               		
 1099               	 ;  0 "" 2
 1100               	.LVL132:
 1101               	/* #NOAPP */
 1102               	.LBE42:
 1103               	.LBB43:
 191:display.c     ****         col = shift >> 3;
 1104               		.loc 1 191 0
 1105 0404 E42F      		mov r30,r20
 1106 0406 F0E0      		ldi r31,0
 1107 0408 E050      		subi r30,lo8(-(cyrillic7width))
 1108 040a F040      		sbci r31,hi8(-(cyrillic7width))
 1109               	/* #APP */
 1110               	 ;  191 "display.c" 1
 1111 040c 8491      		lpm r24, Z
 1112               		
 1113               	 ;  0 "" 2
 1114               	.LVL133:
 1115               	/* #NOAPP */
 1116               	.LBE43:
 192:display.c     ****         col_shift = shift & 0x07;
 1117               		.loc 1 192 0
 1118 040e B92E      		mov r11,r25
 1119 0410 B694      		lsr r11
 1120 0412 B694      		lsr r11
 1121 0414 B694      		lsr r11
 1122               	.LVL134:
 193:display.c     ****         if(col_shift)
 1123               		.loc 1 193 0
 1124 0416 292F      		mov r18,r25
 1125 0418 2770      		andi r18,lo8(7)
 1126 041a A22E      		mov r10,r18
 1127               	.LVL135:
 1128 041c AB2D      		mov r26,r11
 1129 041e B0E0      		ldi r27,0
 1130 0420 E7E0      		ldi r30,lo8(7)
 1131 0422 4E9F      		mul r20,r30
 1132 0424 A001      		movw r20,r0
 1133 0426 1124      		clr __zero_reg__
 1134               	.LVL136:
 1135 0428 A050      		subi r26,lo8(-(display_bottom_buf))
 1136 042a B040      		sbci r27,hi8(-(display_bottom_buf))
 194:display.c     ****         {
 1137               		.loc 1 194 0
 1138 042c 2223      		tst r18
 1139 042e 01F4      		brne .+2
 1140 0430 00C0      		rjmp .L39
 1141 0432 E12C      		mov r14,__zero_reg__
 1142 0434 F12C      		mov r15,__zero_reg__
 1143               	.LBB44:
 198:display.c     ****             }
 1144               		.loc 1 198 0
 1145 0436 C22E      		mov r12,r18
 1146 0438 D12C      		mov r13,__zero_reg__
 1147               	.L40:
 1148               	.LVL137:
 1149               	.LBB45:
 198:display.c     ****             }
 1150               		.loc 1 198 0 is_stmt 0 discriminator 3
 1151 043a F701      		movw r30,r14
 1152 043c E40F      		add r30,r20
 1153 043e F51F      		adc r31,r21
 1154 0440 E050      		subi r30,lo8(-(cyrillic7table))
 1155 0442 F040      		sbci r31,hi8(-(cyrillic7table))
 1156               	.LVL138:
 1157               	/* #APP */
 1158               	 ;  198 "display.c" 1
 1159 0444 2491      		lpm r18, Z
 1160               		
 1161               	 ;  0 "" 2
 1162               	.LVL139:
 1163               	/* #NOAPP */
 1164               	.LBE45:
 1165 0446 30E0      		ldi r19,0
 1166 0448 0A2C      		mov r0,r10
 1167 044a 00C0      		rjmp 2f
 1168               		1:
 1169 044c 3595      		asr r19
 1170 044e 2795      		ror r18
 1171               		2:
 1172 0450 0A94      		dec r0
 1173 0452 02F4      		brpl 1b
 1174               	.LVL140:
 1175 0454 EC91      		ld r30,X
 1176               	.LVL141:
 1177 0456 2E2B      		or r18,r30
 1178 0458 2C93      		st X,r18
 1179               	.LVL142:
 1180 045a FFEF      		ldi r31,-1
 1181 045c EF1A      		sub r14,r31
 1182 045e FF0A      		sbc r15,r31
 1183               	.LVL143:
 1184 0460 9096      		adiw r26,32
 196:display.c     ****             {
 1185               		.loc 1 196 0 is_stmt 1 discriminator 3
 1186 0462 27E0      		ldi r18,7
 1187 0464 E216      		cp r14,r18
 1188 0466 F104      		cpc r15,__zero_reg__
 1189 0468 01F4      		brne .L40
 1190               	.LBE44:
 200:display.c     ****             {
 1191               		.loc 1 200 0
 1192 046a C80E      		add r12,r24
 1193 046c D11C      		adc r13,__zero_reg__
 1194 046e E8E0      		ldi r30,8
 1195 0470 CE16      		cp r12,r30
 1196 0472 D104      		cpc r13,__zero_reg__
 1197 0474 04F4      		brge .L41
 1198               	.LVL144:
 1199               	.L43:
 217:display.c     ****     }
 1200               		.loc 1 217 0
 1201 0476 8F5F      		subi r24,lo8(-(1))
 1202               	.LVL145:
 1203 0478 980F      		add r25,r24
 1204               	.LVL146:
 188:display.c     ****     {
 1205               		.loc 1 188 0
 1206 047a 1F5F      		subi r17,lo8(-(1))
 1207               	.LVL147:
 1208 047c 00C0      		rjmp .L38
 1209               	.LVL148:
 1210               	.L41:
 203:display.c     ****                 for (uint8_t j=0; j<7; j++)
 1211               		.loc 1 203 0
 1212 047e F02E      		mov r15,r16
 1213 0480 FA18      		sub r15,r10
 1214               	.LVL149:
 1215 0482 B394      		inc r11
 1216               	.LVL150:
 1217 0484 AB2D      		mov r26,r11
 1218 0486 B0E0      		ldi r27,0
 1219 0488 A050      		subi r26,lo8(-(display_bottom_buf))
 1220 048a B040      		sbci r27,hi8(-(display_bottom_buf))
 1221 048c 20E0      		ldi r18,0
 1222 048e 30E0      		ldi r19,0
 1223               	.LVL151:
 1224               	.L42:
 1225               	.LBB46:
 1226               	.LBB47:
 206:display.c     ****                 }
 1227               		.loc 1 206 0 discriminator 3
 1228 0490 F901      		movw r30,r18
 1229 0492 E40F      		add r30,r20
 1230 0494 F51F      		adc r31,r21
 1231 0496 E050      		subi r30,lo8(-(cyrillic7table))
 1232 0498 F040      		sbci r31,hi8(-(cyrillic7table))
 1233               	.LVL152:
 1234               	/* #APP */
 1235               	 ;  206 "display.c" 1
 1236 049a E491      		lpm r30, Z
 1237               		
 1238               	 ;  0 "" 2
 1239               	.LVL153:
 1240               	/* #NOAPP */
 1241               	.LBE47:
 1242 049c 0F2C      		mov r0,r15
 1243 049e 00C0      		rjmp 2f
 1244               		1:
 1245 04a0 EE0F      		lsl r30
 1246               		2:
 1247 04a2 0A94      		dec r0
 1248 04a4 02F4      		brpl 1b
 1249               	.LVL154:
 1250 04a6 EC93      		st X,r30
 1251               	.LVL155:
 1252 04a8 2F5F      		subi r18,-1
 1253 04aa 3F4F      		sbci r19,-1
 1254               	.LVL156:
 1255 04ac 9096      		adiw r26,32
 204:display.c     ****                 {
 1256               		.loc 1 204 0 discriminator 3
 1257 04ae 2730      		cpi r18,7
 1258 04b0 3105      		cpc r19,__zero_reg__
 1259 04b2 01F4      		brne .L42
 1260 04b4 00C0      		rjmp .L43
 1261               	.LVL157:
 1262               	.L39:
 1263               	.LBE46:
 194:display.c     ****         {
 1264               		.loc 1 194 0
 1265 04b6 20E0      		ldi r18,0
 1266 04b8 30E0      		ldi r19,0
 1267               	.L44:
 1268               	.LVL158:
 1269               	.LBB48:
 1270               	.LBB49:
 214:display.c     ****             }
 1271               		.loc 1 214 0 discriminator 3
 1272 04ba F901      		movw r30,r18
 1273 04bc E40F      		add r30,r20
 1274 04be F51F      		adc r31,r21
 1275 04c0 E050      		subi r30,lo8(-(cyrillic7table))
 1276 04c2 F040      		sbci r31,hi8(-(cyrillic7table))
 1277               	.LVL159:
 1278               	/* #APP */
 1279               	 ;  214 "display.c" 1
 1280 04c4 E491      		lpm r30, Z
 1281               		
 1282               	 ;  0 "" 2
 1283               	.LVL160:
 1284               	/* #NOAPP */
 1285               	.LBE49:
 1286 04c6 EC93      		st X,r30
 1287               	.LVL161:
 1288 04c8 2F5F      		subi r18,-1
 1289 04ca 3F4F      		sbci r19,-1
 1290               	.LVL162:
 1291 04cc 9096      		adiw r26,32
 212:display.c     ****             {
 1292               		.loc 1 212 0 discriminator 3
 1293 04ce 2730      		cpi r18,7
 1294 04d0 3105      		cpc r19,__zero_reg__
 1295 04d2 01F4      		brne .L44
 1296 04d4 00C0      		rjmp .L43
 1297               	.LVL163:
 1298               	.L50:
 1299               	/* epilogue start */
 1300               	.LBE48:
 1301               	.LBE38:
 219:display.c     **** 
 1302               		.loc 1 219 0
 1303 04d6 DF91      		pop r29
 1304 04d8 CF91      		pop r28
 1305 04da 1F91      		pop r17
 1306               	.LVL164:
 1307 04dc 0F91      		pop r16
 1308 04de FF90      		pop r15
 1309 04e0 EF90      		pop r14
 1310 04e2 DF90      		pop r13
 1311 04e4 CF90      		pop r12
 1312 04e6 BF90      		pop r11
 1313 04e8 AF90      		pop r10
 1314 04ea 0895      		ret
 1315               		.cfi_endproc
 1316               	.LFE11:
 1318               	.global	print_bottom_date
 1320               	print_bottom_date:
 1321               	.LFB12:
 222:display.c     ****     uint8_t date_l = get_date_bcd_l();
 1322               		.loc 1 222 0
 1323               		.cfi_startproc
 1324 04ec EF92      		push r14
 1325               	.LCFI32:
 1326               		.cfi_def_cfa_offset 3
 1327               		.cfi_offset 14, -2
 1328 04ee FF92      		push r15
 1329               	.LCFI33:
 1330               		.cfi_def_cfa_offset 4
 1331               		.cfi_offset 15, -3
 1332 04f0 0F93      		push r16
 1333               	.LCFI34:
 1334               		.cfi_def_cfa_offset 5
 1335               		.cfi_offset 16, -4
 1336 04f2 1F93      		push r17
 1337               	.LCFI35:
 1338               		.cfi_def_cfa_offset 6
 1339               		.cfi_offset 17, -5
 1340 04f4 CF93      		push r28
 1341               	.LCFI36:
 1342               		.cfi_def_cfa_offset 7
 1343               		.cfi_offset 28, -6
 1344 04f6 DF93      		push r29
 1345               	.LCFI37:
 1346               		.cfi_def_cfa_offset 8
 1347               		.cfi_offset 29, -7
 1348               	/* prologue: function */
 1349               	/* frame size = 0 */
 1350               	/* stack size = 6 */
 1351               	.L__stack_usage = 6
 223:display.c     ****     uint8_t date_h = get_date_bcd_h();
 1352               		.loc 1 223 0
 1353 04f8 0E94 0000 		call get_date_bcd_l
 1354               	.LVL165:
 1355 04fc C82F      		mov r28,r24
 1356               	.LVL166:
 224:display.c     ****     uint8_t mon = get_month() - 1;
 1357               		.loc 1 224 0
 1358 04fe 0E94 0000 		call get_date_bcd_h
 1359               	.LVL167:
 1360 0502 D82F      		mov r29,r24
 1361               	.LVL168:
 225:display.c     ****     uint8_t width = _months_width(mon) + 6;
 1362               		.loc 1 225 0
 1363 0504 0E94 0000 		call get_month
 1364               	.LVL169:
 1365 0508 8150      		subi r24,lo8(-(-1))
 1366               	.LVL170:
 1367               	.LBB50:
 226:display.c     ****     if (date_h > 0)
 1368               		.loc 1 226 0
 1369 050a E82F      		mov r30,r24
 1370 050c F0E0      		ldi r31,0
 1371 050e E050      		subi r30,lo8(-(months_width))
 1372 0510 F040      		sbci r31,hi8(-(months_width))
 1373               	/* #APP */
 1374               	 ;  226 "display.c" 1
 1375 0512 E491      		lpm r30, Z
 1376               		
 1377               	 ;  0 "" 2
 1378               	.LVL171:
 1379               	/* #NOAPP */
 1380               	.LBE50:
 227:display.c     ****     {
 1381               		.loc 1 227 0
 1382 0514 D111      		cpse r29,__zero_reg__
 1383 0516 00C0      		rjmp .L52
 226:display.c     ****     if (date_h > 0)
 1384               		.loc 1 226 0
 1385 0518 EA5F      		subi r30,lo8(-(6))
 1386               	.LVL172:
 1387 051a 00C0      		rjmp .L53
 1388               	.LVL173:
 1389               	.L52:
 229:display.c     ****     }
 1390               		.loc 1 229 0
 1391 051c E45F      		subi r30,lo8(-(12))
 1392               	.LVL174:
 1393               	.L53:
 231:display.c     ****     uint8_t col, col_shift;
 1394               		.loc 1 231 0
 1395 051e 20E3      		ldi r18,lo8(48)
 1396 0520 30E0      		ldi r19,0
 1397 0522 2E1B      		sub r18,r30
 1398 0524 3109      		sbc r19,__zero_reg__
 1399 0526 37FF      		sbrs r19,7
 1400 0528 00C0      		rjmp .L54
 1401 052a 2F5F      		subi r18,-1
 1402 052c 3F4F      		sbci r19,-1
 1403               	.L54:
 1404 052e 3595      		asr r19
 1405 0530 2795      		ror r18
 1406 0532 90E4      		ldi r25,lo8(64)
 1407 0534 920F      		add r25,r18
 1408               	.LVL175:
 1409 0536 E0E0      		ldi r30,lo8(display_bottom_buf)
 1410 0538 F0E0      		ldi r31,hi8(display_bottom_buf)
 1411               	.LVL176:
 1412               	.L55:
 1413               	.LBB51:
 1414               	.LBB52:
 236:display.c     **** 
 1415               		.loc 1 236 0
 1416 053a 1086      		std Z+8,__zero_reg__
 1417               	.LVL177:
 1418 053c 1186      		std Z+9,__zero_reg__
 1419               	.LVL178:
 1420 053e 1286      		std Z+10,__zero_reg__
 1421               	.LVL179:
 1422 0540 1386      		std Z+11,__zero_reg__
 1423               	.LVL180:
 1424 0542 1486      		std Z+12,__zero_reg__
 1425               	.LVL181:
 1426 0544 1586      		std Z+13,__zero_reg__
 1427               	.LVL182:
 1428 0546 B096      		adiw r30,32
 1429               	.LBE52:
 234:display.c     ****         for(uint8_t j=8; j<14; j++)
 1430               		.loc 1 234 0
 1431 0548 40E0      		ldi r20,hi8(display_bottom_buf+256)
 1432 054a E030      		cpi r30,lo8(display_bottom_buf+256)
 1433 054c F407      		cpc r31,r20
 1434 054e 01F4      		brne .L55
 1435               	.LBE51:
 238:display.c     ****     {
 1436               		.loc 1 238 0
 1437 0550 DD23      		tst r29
 1438 0552 01F4      		brne .+2
 1439 0554 00C0      		rjmp .L56
 240:display.c     ****         col_shift = shift & 0x07;
 1440               		.loc 1 240 0
 1441 0556 A92F      		mov r26,r25
 1442 0558 A695      		lsr r26
 1443 055a A695      		lsr r26
 1444 055c A695      		lsr r26
 1445               	.LVL183:
 241:display.c     ****         for (uint8_t j=0; j<7; j++)
 1446               		.loc 1 241 0
 1447 055e B92F      		mov r27,r25
 1448 0560 B770      		andi r27,lo8(7)
 1449               	.LVL184:
 1450 0562 6A2F      		mov r22,r26
 1451 0564 70E0      		ldi r23,0
 1452 0566 6050      		subi r22,lo8(-(display_bottom_buf))
 1453 0568 7040      		sbci r23,hi8(-(display_bottom_buf))
 1454 056a 97E0      		ldi r25,lo8(7)
 1455               	.LVL185:
 1456 056c D99F      		mul r29,r25
 1457 056e A001      		movw r20,r0
 1458 0570 1124      		clr __zero_reg__
 1459 0572 00E0      		ldi r16,0
 1460 0574 10E0      		ldi r17,0
 1461               	.LVL186:
 1462               	.L57:
 1463               	.LBB53:
 1464               	.LBB54:
 244:display.c     ****         }
 1465               		.loc 1 244 0 discriminator 3
 1466 0576 F801      		movw r30,r16
 1467 0578 E40F      		add r30,r20
 1468 057a F51F      		adc r31,r21
 1469 057c E050      		subi r30,lo8(-(DotDigital7table))
 1470 057e F040      		sbci r31,hi8(-(DotDigital7table))
 1471               	.LVL187:
 1472               	/* #APP */
 1473               	 ;  244 "display.c" 1
 1474 0580 E491      		lpm r30, Z
 1475               		
 1476               	 ;  0 "" 2
 1477               	.LVL188:
 1478               	/* #NOAPP */
 1479               	.LBE54:
 1480 0582 F0E0      		ldi r31,0
 1481 0584 7F01      		movw r14,r30
 1482 0586 0B2E      		mov r0,r27
 1483 0588 00C0      		rjmp 2f
 1484               		1:
 1485 058a F594      		asr r15
 1486 058c E794      		ror r14
 1487               		2:
 1488 058e 0A94      		dec r0
 1489 0590 02F4      		brpl 1b
 1490 0592 FB01      		movw r30,r22
 1491               	.LVL189:
 1492 0594 E082      		st Z,r14
 1493               	.LVL190:
 1494 0596 0F5F      		subi r16,-1
 1495 0598 1F4F      		sbci r17,-1
 1496               	.LVL191:
 1497 059a 605E      		subi r22,-32
 1498 059c 7F4F      		sbci r23,-1
 242:display.c     ****         {
 1499               		.loc 1 242 0 discriminator 3
 1500 059e 0730      		cpi r16,7
 1501 05a0 1105      		cpc r17,__zero_reg__
 1502 05a2 01F4      		brne .L57
 1503               	.LBE53:
 246:display.c     ****         {
 1504               		.loc 1 246 0
 1505 05a4 B330      		cpi r27,lo8(3)
 1506 05a6 00F4      		brsh .L58
 1507               	.LVL192:
 1508               	.L60:
 255:display.c     ****     }
 1509               		.loc 1 255 0
 1510 05a8 96E4      		ldi r25,lo8(70)
 1511 05aa 920F      		add r25,r18
 1512               	.LVL193:
 1513 05ac 00C0      		rjmp .L56
 1514               	.LVL194:
 1515               	.L58:
 249:display.c     ****             for (uint8_t j=0; j<7; j++)
 1516               		.loc 1 249 0
 1517 05ae 98E0      		ldi r25,lo8(8)
 1518 05b0 9B1B      		sub r25,r27
 1519               	.LVL195:
 1520 05b2 AF5F      		subi r26,lo8(-(1))
 1521               	.LVL196:
 1522 05b4 B0E0      		ldi r27,0
 1523 05b6 A050      		subi r26,lo8(-(display_bottom_buf))
 1524 05b8 B040      		sbci r27,hi8(-(display_bottom_buf))
 1525               	.LVL197:
 1526 05ba 60E0      		ldi r22,0
 1527 05bc 70E0      		ldi r23,0
 1528               	.LVL198:
 1529               	.L59:
 1530               	.LBB55:
 1531               	.LBB56:
 252:display.c     ****             }
 1532               		.loc 1 252 0 discriminator 3
 1533 05be FB01      		movw r30,r22
 1534 05c0 E40F      		add r30,r20
 1535 05c2 F51F      		adc r31,r21
 1536 05c4 E050      		subi r30,lo8(-(DotDigital7table))
 1537 05c6 F040      		sbci r31,hi8(-(DotDigital7table))
 1538               	.LVL199:
 1539               	/* #APP */
 1540               	 ;  252 "display.c" 1
 1541 05c8 E491      		lpm r30, Z
 1542               		
 1543               	 ;  0 "" 2
 1544               	.LVL200:
 1545               	/* #NOAPP */
 1546               	.LBE56:
 1547 05ca 092E      		mov r0,r25
 1548 05cc 00C0      		rjmp 2f
 1549               		1:
 1550 05ce EE0F      		lsl r30
 1551               		2:
 1552 05d0 0A94      		dec r0
 1553 05d2 02F4      		brpl 1b
 1554               	.LVL201:
 1555 05d4 EC93      		st X,r30
 1556               	.LVL202:
 1557 05d6 6F5F      		subi r22,-1
 1558 05d8 7F4F      		sbci r23,-1
 1559               	.LVL203:
 1560 05da 9096      		adiw r26,32
 250:display.c     ****             {
 1561               		.loc 1 250 0 discriminator 3
 1562 05dc 6730      		cpi r22,7
 1563 05de 7105      		cpc r23,__zero_reg__
 1564 05e0 01F4      		brne .L59
 1565 05e2 00C0      		rjmp .L60
 1566               	.LVL204:
 1567               	.L56:
 1568               	.LBE55:
 258:display.c     ****     col_shift = shift & 0x07;
 1569               		.loc 1 258 0
 1570 05e4 492F      		mov r20,r25
 1571 05e6 4695      		lsr r20
 1572 05e8 4695      		lsr r20
 1573 05ea 4695      		lsr r20
 1574               	.LVL205:
 259:display.c     ****     if(col_shift)
 1575               		.loc 1 259 0
 1576 05ec 592F      		mov r21,r25
 1577 05ee 5770      		andi r21,lo8(7)
 1578               	.LVL206:
 1579 05f0 A42F      		mov r26,r20
 1580 05f2 B0E0      		ldi r27,0
 1581 05f4 F7E0      		ldi r31,lo8(7)
 1582 05f6 CF9F      		mul r28,r31
 1583 05f8 9001      		movw r18,r0
 1584 05fa 1124      		clr __zero_reg__
 1585 05fc A050      		subi r26,lo8(-(display_bottom_buf))
 1586 05fe B040      		sbci r27,hi8(-(display_bottom_buf))
 260:display.c     ****     {
 1587               		.loc 1 260 0
 1588 0600 5523      		tst r21
 1589 0602 01F4      		brne .+2
 1590 0604 00C0      		rjmp .L61
 1591 0606 60E0      		ldi r22,0
 1592 0608 70E0      		ldi r23,0
 1593               	.L62:
 1594               	.LVL207:
 1595               	.LBB57:
 1596               	.LBB58:
 264:display.c     ****         }
 1597               		.loc 1 264 0 discriminator 3
 1598 060a F901      		movw r30,r18
 1599 060c E60F      		add r30,r22
 1600 060e F71F      		adc r31,r23
 1601 0610 E050      		subi r30,lo8(-(DotDigital7table))
 1602 0612 F040      		sbci r31,hi8(-(DotDigital7table))
 1603               	.LVL208:
 1604               	/* #APP */
 1605               	 ;  264 "display.c" 1
 1606 0614 E491      		lpm r30, Z
 1607               		
 1608               	 ;  0 "" 2
 1609               	.LVL209:
 1610               	/* #NOAPP */
 1611               	.LBE58:
 1612 0616 F0E0      		ldi r31,0
 1613 0618 052E      		mov r0,r21
 1614 061a 00C0      		rjmp 2f
 1615               		1:
 1616 061c F595      		asr r31
 1617 061e E795      		ror r30
 1618               		2:
 1619 0620 0A94      		dec r0
 1620 0622 02F4      		brpl 1b
 1621               	.LVL210:
 1622 0624 FC91      		ld r31,X
 1623 0626 EF2B      		or r30,r31
 1624 0628 EC93      		st X,r30
 1625               	.LVL211:
 1626 062a 6F5F      		subi r22,-1
 1627 062c 7F4F      		sbci r23,-1
 1628               	.LVL212:
 1629 062e 9096      		adiw r26,32
 262:display.c     ****         {
 1630               		.loc 1 262 0 discriminator 3
 1631 0630 6730      		cpi r22,7
 1632 0632 7105      		cpc r23,__zero_reg__
 1633 0634 01F4      		brne .L62
 1634               	.LBE57:
 266:display.c     ****         {
 1635               		.loc 1 266 0
 1636 0636 5330      		cpi r21,lo8(3)
 1637 0638 00F4      		brsh .L63
 1638               	.LVL213:
 1639               	.L66:
 283:display.c     **** 
 1640               		.loc 1 283 0
 1641 063a 995F      		subi r25,lo8(-(7))
 1642               	.LVL214:
 285:display.c     ****     col_shift = shift & 0x07;
 1643               		.loc 1 285 0
 1644 063c 092F      		mov r16,r25
 1645 063e 0695      		lsr r16
 1646 0640 0695      		lsr r16
 1647 0642 0695      		lsr r16
 1648               	.LVL215:
 286:display.c     ****     for (uint8_t i=0; i<4; i++) {
 1649               		.loc 1 286 0
 1650 0644 192F      		mov r17,r25
 1651 0646 1770      		andi r17,lo8(7)
 1652               	.LVL216:
 1653 0648 24E1      		ldi r18,lo8(20)
 1654 064a 829F      		mul r24,r18
 1655 064c C001      		movw r24,r0
 1656 064e 1124      		clr __zero_reg__
 1657               	.LVL217:
 1658 0650 20E0      		ldi r18,0
 1659 0652 30E0      		ldi r19,0
 1660               	.LBB59:
 1661               	.LBB60:
 1662               	.LBB61:
 292:display.c     ****             } else {
 1663               		.loc 1 292 0
 1664 0654 68E0      		ldi r22,lo8(8)
 1665 0656 70E0      		ldi r23,0
 1666 0658 611B      		sub r22,r17
 1667 065a 7109      		sbc r23,__zero_reg__
 1668 065c 00C0      		rjmp .L64
 1669               	.LVL218:
 1670               	.L63:
 1671               	.LBE61:
 1672               	.LBE60:
 1673               	.LBE59:
 269:display.c     ****             for (uint8_t j=0; j<7; j++)
 1674               		.loc 1 269 0
 1675 065e 68E0      		ldi r22,lo8(8)
 1676               	.LVL219:
 1677 0660 651B      		sub r22,r21
 1678               	.LVL220:
 1679 0662 4F5F      		subi r20,lo8(-(1))
 1680               	.LVL221:
 1681 0664 A42F      		mov r26,r20
 1682 0666 B0E0      		ldi r27,0
 1683 0668 A050      		subi r26,lo8(-(display_bottom_buf))
 1684 066a B040      		sbci r27,hi8(-(display_bottom_buf))
 1685 066c 40E0      		ldi r20,0
 1686 066e 50E0      		ldi r21,0
 1687               	.LVL222:
 1688               	.L65:
 1689               	.LBB65:
 1690               	.LBB66:
 272:display.c     ****             }
 1691               		.loc 1 272 0 discriminator 3
 1692 0670 F901      		movw r30,r18
 1693 0672 E40F      		add r30,r20
 1694 0674 F51F      		adc r31,r21
 1695 0676 E050      		subi r30,lo8(-(DotDigital7table))
 1696 0678 F040      		sbci r31,hi8(-(DotDigital7table))
 1697               	.LVL223:
 1698               	/* #APP */
 1699               	 ;  272 "display.c" 1
 1700 067a E491      		lpm r30, Z
 1701               		
 1702               	 ;  0 "" 2
 1703               	.LVL224:
 1704               	/* #NOAPP */
 1705               	.LBE66:
 1706 067c 062E      		mov r0,r22
 1707 067e 00C0      		rjmp 2f
 1708               		1:
 1709 0680 EE0F      		lsl r30
 1710               		2:
 1711 0682 0A94      		dec r0
 1712 0684 02F4      		brpl 1b
 1713               	.LVL225:
 1714 0686 EC93      		st X,r30
 1715               	.LVL226:
 1716 0688 4F5F      		subi r20,-1
 1717 068a 5F4F      		sbci r21,-1
 1718               	.LVL227:
 1719 068c 9096      		adiw r26,32
 270:display.c     ****             {
 1720               		.loc 1 270 0 discriminator 3
 1721 068e 4730      		cpi r20,7
 1722 0690 5105      		cpc r21,__zero_reg__
 1723 0692 01F4      		brne .L65
 1724 0694 00C0      		rjmp .L66
 1725               	.LVL228:
 1726               	.L61:
 1727               	.LBE65:
 260:display.c     ****     {
 1728               		.loc 1 260 0
 1729 0696 40E0      		ldi r20,0
 1730 0698 50E0      		ldi r21,0
 1731               	.LVL229:
 1732               	.L67:
 1733               	.LBB67:
 1734               	.LBB68:
 280:display.c     ****         }
 1735               		.loc 1 280 0 discriminator 3
 1736 069a FA01      		movw r30,r20
 1737 069c E20F      		add r30,r18
 1738 069e F31F      		adc r31,r19
 1739 06a0 E050      		subi r30,lo8(-(DotDigital7table))
 1740 06a2 F040      		sbci r31,hi8(-(DotDigital7table))
 1741               	.LVL230:
 1742               	/* #APP */
 1743               	 ;  280 "display.c" 1
 1744 06a4 E491      		lpm r30, Z
 1745               		
 1746               	 ;  0 "" 2
 1747               	.LVL231:
 1748               	/* #NOAPP */
 1749               	.LBE68:
 1750 06a6 EC93      		st X,r30
 1751               	.LVL232:
 1752 06a8 4F5F      		subi r20,-1
 1753 06aa 5F4F      		sbci r21,-1
 1754               	.LVL233:
 1755 06ac 9096      		adiw r26,32
 278:display.c     ****         {
 1756               		.loc 1 278 0 discriminator 3
 1757 06ae 4730      		cpi r20,7
 1758 06b0 5105      		cpc r21,__zero_reg__
 1759 06b2 01F4      		brne .L67
 1760 06b4 00C0      		rjmp .L66
 1761               	.LVL234:
 1762               	.L64:
 1763 06b6 A02F      		mov r26,r16
 1764 06b8 A20F      		add r26,r18
 1765 06ba B0E0      		ldi r27,0
 1766 06bc A050      		subi r26,lo8(-(display_bottom_buf+64))
 1767 06be B040      		sbci r27,hi8(-(display_bottom_buf+64))
 1768 06c0 EC01      		movw r28,r24
 1769 06c2 C20F      		add r28,r18
 1770 06c4 D31F      		adc r29,r19
 1771               	.LBE67:
 260:display.c     ****     {
 1772               		.loc 1 260 0
 1773 06c6 40E0      		ldi r20,0
 1774 06c8 50E0      		ldi r21,0
 1775               	.LVL235:
 1776               	.L70:
 1777               	.LBB69:
 1778               	.LBB64:
 1779               	.LBB63:
 1780               	.LBB62:
 289:display.c     ****             if (col_shift) {
 1781               		.loc 1 289 0
 1782 06ca FE01      		movw r30,r28
 1783 06cc E40F      		add r30,r20
 1784 06ce F51F      		adc r31,r21
 1785 06d0 E050      		subi r30,lo8(-(months_table))
 1786 06d2 F040      		sbci r31,hi8(-(months_table))
 1787               	.LVL236:
 1788               	/* #APP */
 1789               	 ;  289 "display.c" 1
 1790 06d4 E491      		lpm r30, Z
 1791               		
 1792               	 ;  0 "" 2
 1793               	.LVL237:
 1794               	/* #NOAPP */
 1795               	.LBE62:
 290:display.c     ****                 display_bottom_buf[j+2][col] |= tmp >> col_shift;
 1796               		.loc 1 290 0
 1797 06d6 1123      		tst r17
 1798 06d8 01F0      		breq .L68
 291:display.c     ****                 display_bottom_buf[j+2][col+1] = tmp << (8 - col_shift);
 1799               		.loc 1 291 0
 1800 06da F0E0      		ldi r31,0
 1801 06dc 7F01      		movw r14,r30
 1802 06de 012E      		mov r0,r17
 1803 06e0 00C0      		rjmp 2f
 1804               		1:
 1805 06e2 F594      		asr r15
 1806 06e4 E794      		ror r14
 1807               		2:
 1808 06e6 0A94      		dec r0
 1809 06e8 02F4      		brpl 1b
 1810 06ea FC91      		ld r31,X
 1811 06ec EF2A      		or r14,r31
 1812 06ee EC92      		st X,r14
 292:display.c     ****             } else {
 1813               		.loc 1 292 0
 1814 06f0 062E      		mov r0,r22
 1815 06f2 00C0      		rjmp 2f
 1816               		1:
 1817 06f4 EE0F      		lsl r30
 1818               		2:
 1819 06f6 0A94      		dec r0
 1820 06f8 02F4      		brpl 1b
 1821               	.LVL238:
 1822 06fa 1196      		adiw r26,1
 1823 06fc EC93      		st X,r30
 1824 06fe 1197      		sbiw r26,1
 1825 0700 00C0      		rjmp .L69
 1826               	.LVL239:
 1827               	.L68:
 294:display.c     ****             }
 1828               		.loc 1 294 0
 1829 0702 EC93      		st X,r30
 1830               	.LVL240:
 1831               	.L69:
 1832 0704 4C5F      		subi r20,-4
 1833 0706 5F4F      		sbci r21,-1
 1834               	.LVL241:
 1835 0708 9096      		adiw r26,32
 1836               	.LBE63:
 288:display.c     ****             uint8_t tmp = _months_table(mon, j, i);
 1837               		.loc 1 288 0 discriminator 2
 1838 070a 4431      		cpi r20,20
 1839 070c 5105      		cpc r21,__zero_reg__
 1840 070e 01F4      		brne .L70
 1841               	.LVL242:
 1842 0710 2F5F      		subi r18,-1
 1843 0712 3F4F      		sbci r19,-1
 1844               	.LVL243:
 1845               	.LBE64:
 287:display.c     ****         for (uint8_t j=0; j<5; j++) {
 1846               		.loc 1 287 0 discriminator 2
 1847 0714 2430      		cpi r18,4
 1848 0716 3105      		cpc r19,__zero_reg__
 1849 0718 01F4      		brne .L64
 1850               	/* epilogue start */
 1851               	.LBE69:
 299:display.c     **** 
 1852               		.loc 1 299 0
 1853 071a DF91      		pop r29
 1854               	.LVL244:
 1855 071c CF91      		pop r28
 1856               	.LVL245:
 1857 071e 1F91      		pop r17
 1858               	.LVL246:
 1859 0720 0F91      		pop r16
 1860               	.LVL247:
 1861 0722 FF90      		pop r15
 1862 0724 EF90      		pop r14
 1863 0726 0895      		ret
 1864               		.cfi_endproc
 1865               	.LFE12:
 1867               	.global	print_ext_temperature
 1869               	print_ext_temperature:
 1870               	.LFB13:
 302:display.c     ****     uint8_t temp_h, temp_l, temp_f, sign=0;
 1871               		.loc 1 302 0
 1872               		.cfi_startproc
 1873               	.LVL248:
 1874 0728 AF92      		push r10
 1875               	.LCFI38:
 1876               		.cfi_def_cfa_offset 3
 1877               		.cfi_offset 10, -2
 1878 072a BF92      		push r11
 1879               	.LCFI39:
 1880               		.cfi_def_cfa_offset 4
 1881               		.cfi_offset 11, -3
 1882 072c CF92      		push r12
 1883               	.LCFI40:
 1884               		.cfi_def_cfa_offset 5
 1885               		.cfi_offset 12, -4
 1886 072e DF92      		push r13
 1887               	.LCFI41:
 1888               		.cfi_def_cfa_offset 6
 1889               		.cfi_offset 13, -5
 1890 0730 EF92      		push r14
 1891               	.LCFI42:
 1892               		.cfi_def_cfa_offset 7
 1893               		.cfi_offset 14, -6
 1894 0732 FF92      		push r15
 1895               	.LCFI43:
 1896               		.cfi_def_cfa_offset 8
 1897               		.cfi_offset 15, -7
 1898 0734 0F93      		push r16
 1899               	.LCFI44:
 1900               		.cfi_def_cfa_offset 9
 1901               		.cfi_offset 16, -8
 1902 0736 1F93      		push r17
 1903               	.LCFI45:
 1904               		.cfi_def_cfa_offset 10
 1905               		.cfi_offset 17, -9
 1906 0738 CF93      		push r28
 1907               	.LCFI46:
 1908               		.cfi_def_cfa_offset 11
 1909               		.cfi_offset 28, -10
 1910 073a DF93      		push r29
 1911               	.LCFI47:
 1912               		.cfi_def_cfa_offset 12
 1913               		.cfi_offset 29, -11
 1914               	/* prologue: function */
 1915               	/* frame size = 0 */
 1916               	/* stack size = 10 */
 1917               	.L__stack_usage = 10
 1918 073c 9C01      		movw r18,r24
 1919               	.LVL249:
 304:display.c     ****     {
 1920               		.loc 1 304 0
 1921 073e 97FF      		sbrs r25,7
 1922 0740 00C0      		rjmp .L91
 306:display.c     ****         sign = 1;
 1923               		.loc 1 306 0
 1924 0742 3195      		neg r19
 1925 0744 2195      		neg r18
 1926 0746 3109      		sbc r19,__zero_reg__
 1927               	.LVL250:
 307:display.c     ****     }
 1928               		.loc 1 307 0
 1929 0748 11E0      		ldi r17,lo8(1)
 1930 074a 00C0      		rjmp .L83
 1931               	.LVL251:
 1932               	.L91:
 303:display.c     ****     if (temperature < 0)
 1933               		.loc 1 303 0
 1934 074c 10E0      		ldi r17,0
 1935               	.LVL252:
 1936               	.L83:
 309:display.c     ****     temp_h = temp_l / 10;
 1937               		.loc 1 309 0
 1938 074e C901      		movw r24,r18
 1939 0750 F4E0      		ldi r31,4
 1940               		1:
 1941 0752 9595      		asr r25
 1942 0754 8795      		ror r24
 1943 0756 FA95      		dec r31
 1944 0758 01F4      		brne 1b
 1945               	.LVL253:
 310:display.c     ****     temp_l %= 10;
 1946               		.loc 1 310 0
 1947 075a 6AE0      		ldi r22,lo8(10)
 1948 075c 0E94 0000 		call __udivmodqi4
 1949 0760 692F      		mov r22,r25
 1950               	.LVL254:
 312:display.c     ****     temp_f *= 10;
 1951               		.loc 1 312 0
 1952 0762 2F70      		andi r18,lo8(15)
 1953               	.LVL255:
 313:display.c     ****     temp_f /= 16;
 1954               		.loc 1 313 0
 1955 0764 220F      		lsl r18
 1956               	.LVL256:
 1957 0766 422F      		mov r20,r18
 1958 0768 440F      		lsl r20
 1959 076a 440F      		lsl r20
 1960 076c 240F      		add r18,r20
 1961               	.LVL257:
 314:display.c     ****     for (uint8_t i=0; i<7; i++)
 1962               		.loc 1 314 0
 1963 076e 2295      		swap r18
 1964               	.LVL258:
 1965 0770 2F70      		andi r18,lo8(15)
 1966               	.LVL259:
 1967 0772 C0E0      		ldi r28,lo8(display_bottom_buf)
 1968 0774 D0E0      		ldi r29,hi8(display_bottom_buf)
 1969 0776 37E0      		ldi r19,lo8(7)
 1970 0778 939F      		mul r25,r19
 1971 077a 6001      		movw r12,r0
 1972 077c 1124      		clr __zero_reg__
 1973 077e 97E0      		ldi r25,lo8(7)
 1974 0780 299F      		mul r18,r25
 1975 0782 7001      		movw r14,r0
 1976 0784 1124      		clr __zero_reg__
 1977 0786 DE01      		movw r26,r28
 1978 0788 40E0      		ldi r20,0
 1979 078a 50E0      		ldi r21,0
 1980               	.LVL260:
 1981               	.L84:
 1982 078c FA01      		movw r30,r20
 1983 078e EC0D      		add r30,r12
 1984 0790 FD1D      		adc r31,r13
 1985 0792 E050      		subi r30,lo8(-(DotDigital7table))
 1986 0794 F040      		sbci r31,hi8(-(DotDigital7table))
 1987               	.LVL261:
 1988               	.LBB70:
 1989               	.LBB71:
 317:display.c     ****         display_bottom_buf[i][20] = (dDigital7table(temp_l, i) << 2) | (dDigital7table(temp_f, i) >
 1990               		.loc 1 317 0 discriminator 3
 1991               	/* #APP */
 1992               	 ;  317 "display.c" 1
 1993 0796 9491      		lpm r25, Z
 1994               		
 1995               	 ;  0 "" 2
 1996               	.LVL262:
 1997               	/* #NOAPP */
 1998               	.LBE71:
 1999 0798 9295      		swap r25
 2000               	.LVL263:
 2001 079a 9695      		lsr r25
 2002 079c 9695      		lsr r25
 2003 079e 9370      		andi r25,lo8(3)
 2004 07a0 5396      		adiw r26,19
 2005 07a2 9C93      		st X,r25
 2006 07a4 5397      		sbiw r26,19
 2007               	.LVL264:
 2008               	.LBB72:
 318:display.c     ****         display_bottom_buf[i][21] = dDigital7table(temp_f, i) << 2;
 2009               		.loc 1 318 0 discriminator 3
 2010               	/* #APP */
 2011               	 ;  318 "display.c" 1
 2012 07a6 A490      		lpm r10, Z
 2013               		
 2014               	 ;  0 "" 2
 2015               	.LVL265:
 2016               	/* #NOAPP */
 2017 07a8 FA01      		movw r30,r20
 2018               	.LVL266:
 2019 07aa EE0D      		add r30,r14
 2020 07ac FF1D      		adc r31,r15
 2021 07ae E050      		subi r30,lo8(-(DotDigital7table))
 2022 07b0 F040      		sbci r31,hi8(-(DotDigital7table))
 2023               	.LVL267:
 2024               	.LBE72:
 2025               	.LBB73:
 2026               	/* #APP */
 2027               	 ;  318 "display.c" 1
 2028 07b2 9491      		lpm r25, Z
 2029               		
 2030               	 ;  0 "" 2
 2031               	.LVL268:
 2032               	/* #NOAPP */
 2033               	.LBE73:
 2034 07b4 34E0      		ldi r19,lo8(4)
 2035 07b6 A39E      		mul r10,r19
 2036 07b8 5001      		movw r10,r0
 2037 07ba 1124      		clr __zero_reg__
 2038               	.LVL269:
 2039 07bc 9295      		swap r25
 2040               	.LVL270:
 2041 07be 9695      		lsr r25
 2042 07c0 9695      		lsr r25
 2043 07c2 9370      		andi r25,lo8(3)
 2044 07c4 A92A      		or r10,r25
 2045 07c6 5496      		adiw r26,20
 2046 07c8 AC92      		st X,r10
 2047 07ca 5497      		sbiw r26,20
 2048               	.LVL271:
 2049               	.LBB74:
 319:display.c     ****     }
 2050               		.loc 1 319 0 discriminator 3
 2051               	/* #APP */
 2052               	 ;  319 "display.c" 1
 2053 07cc E491      		lpm r30, Z
 2054               		
 2055               	 ;  0 "" 2
 2056               	.LVL272:
 2057               	/* #NOAPP */
 2058               	.LBE74:
 2059 07ce EE0F      		lsl r30
 2060 07d0 EE0F      		lsl r30
 2061               	.LVL273:
 2062 07d2 5596      		adiw r26,21
 2063 07d4 EC93      		st X,r30
 2064 07d6 5597      		sbiw r26,21
 2065               	.LVL274:
 2066 07d8 4F5F      		subi r20,-1
 2067 07da 5F4F      		sbci r21,-1
 2068               	.LVL275:
 2069 07dc 9096      		adiw r26,32
 315:display.c     ****     {
 2070               		.loc 1 315 0 discriminator 3
 2071 07de 4730      		cpi r20,7
 2072 07e0 5105      		cpc r21,__zero_reg__
 2073 07e2 01F4      		brne .L84
 2074               	.LBE70:
 321:display.c     ****     display_bottom_buf[6][20] |= 0x08;
 2075               		.loc 1 321 0
 2076 07e4 1092 0000 		sts display_bottom_buf+114,__zero_reg__
 322:display.c     ****     if (temp_h > 0)
 2077               		.loc 1 322 0
 2078 07e8 9091 0000 		lds r25,display_bottom_buf+212
 2079 07ec 9860      		ori r25,lo8(8)
 2080 07ee 9093 0000 		sts display_bottom_buf+212,r25
 323:display.c     ****     {
 2081               		.loc 1 323 0
 2082 07f2 8823      		tst r24
 2083 07f4 01F0      		breq .L85
 2084 07f6 97E0      		ldi r25,lo8(7)
 2085 07f8 899F      		mul r24,r25
 2086 07fa D001      		movw r26,r0
 2087 07fc 1124      		clr __zero_reg__
 2088 07fe 40E0      		ldi r20,0
 2089 0800 50E0      		ldi r21,0
 2090               	.LVL276:
 2091               	.L86:
 2092               	.LBB75:
 2093               	.LBB76:
 327:display.c     ****         }
 2094               		.loc 1 327 0 discriminator 3
 2095 0802 FA01      		movw r30,r20
 2096 0804 EA0F      		add r30,r26
 2097 0806 FB1F      		adc r31,r27
 2098 0808 E050      		subi r30,lo8(-(DotDigital7table))
 2099 080a F040      		sbci r31,hi8(-(DotDigital7table))
 2100               	.LVL277:
 2101               	/* #APP */
 2102               	 ;  327 "display.c" 1
 2103 080c E491      		lpm r30, Z
 2104               		
 2105               	 ;  0 "" 2
 2106               	.LVL278:
 2107               	/* #NOAPP */
 2108               	.LBE76:
 2109 080e 9B89      		ldd r25,Y+19
 2110 0810 E92B      		or r30,r25
 2111               	.LVL279:
 2112 0812 EB8B      		std Y+19,r30
 2113               	.LVL280:
 2114 0814 4F5F      		subi r20,-1
 2115 0816 5F4F      		sbci r21,-1
 2116               	.LVL281:
 2117 0818 A096      		adiw r28,32
 325:display.c     ****         {
 2118               		.loc 1 325 0 discriminator 3
 2119 081a 4730      		cpi r20,7
 2120 081c 5105      		cpc r21,__zero_reg__
 2121 081e 01F4      		brne .L86
 2122               	.LBE75:
 329:display.c     ****         {
 2123               		.loc 1 329 0
 2124 0820 1123      		tst r17
 2125 0822 01F0      		breq .L88
 331:display.c     ****         }
 2126               		.loc 1 331 0
 2127 0824 9EE0      		ldi r25,lo8(14)
 2128 0826 9093 0000 		sts display_bottom_buf+114,r25
 2129 082a 00C0      		rjmp .L88
 2130               	.LVL282:
 2131               	.L85:
 334:display.c     ****     {
 2132               		.loc 1 334 0
 2133 082c 1123      		tst r17
 2134 082e 01F0      		breq .L88
 336:display.c     ****     }
 2135               		.loc 1 336 0
 2136 0830 9091 0000 		lds r25,display_bottom_buf+115
 2137 0834 9863      		ori r25,lo8(56)
 2138 0836 9093 0000 		sts display_bottom_buf+115,r25
 2139               	.LVL283:
 2140               	.L88:
 338:display.c     ****     display_bottom_buf[3][21] |= 0x06;
 2141               		.loc 1 338 0
 2142 083a 9091 0000 		lds r25,display_bottom_buf+21
 2143 083e 9660      		ori r25,lo8(6)
 2144 0840 9093 0000 		sts display_bottom_buf+21,r25
 339:display.c     ****     display_bottom_buf[1][21] |= 0x09;
 2145               		.loc 1 339 0
 2146 0844 9091 0000 		lds r25,display_bottom_buf+117
 2147 0848 9660      		ori r25,lo8(6)
 2148 084a 9093 0000 		sts display_bottom_buf+117,r25
 340:display.c     ****     display_bottom_buf[2][21] |= 0x09;
 2149               		.loc 1 340 0
 2150 084e 9091 0000 		lds r25,display_bottom_buf+53
 2151 0852 9960      		ori r25,lo8(9)
 2152 0854 9093 0000 		sts display_bottom_buf+53,r25
 341:display.c     **** 
 2153               		.loc 1 341 0
 2154 0858 9091 0000 		lds r25,display_bottom_buf+85
 2155 085c 9960      		ori r25,lo8(9)
 2156 085e 9093 0000 		sts display_bottom_buf+85,r25
 2157               	.LVL284:
 2158 0862 EEE1      		ldi r30,lo8(30)
 2159 0864 8E9F      		mul r24,r30
 2160 0866 C001      		movw r24,r0
 2161 0868 1124      		clr __zero_reg__
 2162               	.LVL285:
 2163 086a FEE1      		ldi r31,lo8(30)
 2164 086c 6F9F      		mul r22,r31
 2165 086e B001      		movw r22,r0
 2166 0870 1124      		clr __zero_reg__
 2167               	.LVL286:
 2168 0872 3EE1      		ldi r19,lo8(30)
 2169 0874 239F      		mul r18,r19
 2170 0876 A001      		movw r20,r0
 2171 0878 1124      		clr __zero_reg__
 2172 087a 20E0      		ldi r18,0
 2173 087c 30E0      		ldi r19,0
 2174               	.LVL287:
 2175               	.LBB77:
 346:display.c     ****         display_full_buf[i>>1][1] = (tdDigital15table(temp_h, i) << 4) | (tdDigital15table(temp_h, 
 2176               		.loc 1 346 0
 2177 087e E6E0      		ldi r30,lo8(6)
 2178 0880 BE2E      		mov r11,r30
 2179               	.LBB78:
 347:display.c     ****         display_full_buf[i>>1][2] = tdDigital15table(temp_l, i);
 2180               		.loc 1 347 0
 2181 0882 7C01      		movw r14,r24
 2182 0884 EFEF      		ldi r30,-1
 2183 0886 EE1A      		sub r14,r30
 2184 0888 FE0A      		sbc r15,r30
 2185               	.LBE78:
 2186               	.LBB79:
 349:display.c     ****         display_full_buf[i>>1][4] = tdDigital15table(temp_f, i);
 2187               		.loc 1 349 0
 2188 088a 8B01      		movw r16,r22
 2189 088c 0F5F      		subi r16,-1
 2190 088e 1F4F      		sbci r17,-1
 2191               	.LBE79:
 2192               	.LBB80:
 351:display.c     ****     }
 2193               		.loc 1 351 0
 2194 0890 EA01      		movw r28,r20
 2195 0892 2196      		adiw r28,1
 2196               	.LVL288:
 2197               	.L90:
 2198               	.LBE80:
 346:display.c     ****         display_full_buf[i>>1][1] = (tdDigital15table(temp_h, i) << 4) | (tdDigital15table(temp_h, 
 2199               		.loc 1 346 0 discriminator 3
 2200 0894 C22E      		mov r12,r18
 2201 0896 C694      		lsr r12
 2202 0898 D12C      		mov r13,__zero_reg__
 2203 089a FC01      		movw r30,r24
 2204 089c E20F      		add r30,r18
 2205 089e F31F      		adc r31,r19
 2206 08a0 E050      		subi r30,lo8(-(TripleDotDigital15table))
 2207 08a2 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 2208               	.LVL289:
 2209               	.LBB81:
 2210               	/* #APP */
 2211               	 ;  346 "display.c" 1
 2212 08a4 A490      		lpm r10, Z
 2213               		
 2214               	 ;  0 "" 2
 2215               	.LVL290:
 2216               	/* #NOAPP */
 2217               	.LBE81:
 2218 08a6 BC9C      		mul r11,r12
 2219 08a8 D001      		movw r26,r0
 2220 08aa BD9C      		mul r11,r13
 2221 08ac B00D      		add r27,r0
 2222 08ae 1124      		clr __zero_reg__
 2223 08b0 A050      		subi r26,lo8(-(display_full_buf))
 2224 08b2 B040      		sbci r27,hi8(-(display_full_buf))
 2225 08b4 DA2C      		mov r13,r10
 2226 08b6 D694      		lsr r13
 2227 08b8 D694      		lsr r13
 2228 08ba D694      		lsr r13
 2229 08bc D694      		lsr r13
 2230 08be DC92      		st X,r13
 2231               	.LVL291:
 2232               	.LBB82:
 347:display.c     ****         display_full_buf[i>>1][2] = tdDigital15table(temp_l, i);
 2233               		.loc 1 347 0 discriminator 3
 2234               	/* #APP */
 2235               	 ;  347 "display.c" 1
 2236 08c0 C490      		lpm r12, Z
 2237               		
 2238               	 ;  0 "" 2
 2239               	.LVL292:
 2240               	/* #NOAPP */
 2241               	.LBE82:
 2242               	.LBB83:
 2243 08c2 F701      		movw r30,r14
 2244               	.LVL293:
 2245 08c4 E20F      		add r30,r18
 2246 08c6 F31F      		adc r31,r19
 2247 08c8 E050      		subi r30,lo8(-(TripleDotDigital15table))
 2248 08ca F040      		sbci r31,hi8(-(TripleDotDigital15table))
 2249               	/* #APP */
 2250               	 ;  347 "display.c" 1
 2251 08cc E491      		lpm r30, Z
 2252               		
 2253               	 ;  0 "" 2
 2254               	.LVL294:
 2255               	/* #NOAPP */
 2256               	.LBE83:
 2257 08ce F0E1      		ldi r31,lo8(16)
 2258 08d0 CF9E      		mul r12,r31
 2259 08d2 6001      		movw r12,r0
 2260 08d4 1124      		clr __zero_reg__
 2261               	.LVL295:
 2262 08d6 E295      		swap r30
 2263               	.LVL296:
 2264 08d8 EF70      		andi r30,lo8(15)
 2265 08da EC29      		or r30,r12
 2266 08dc 1196      		adiw r26,1
 2267 08de EC93      		st X,r30
 2268 08e0 1197      		sbiw r26,1
 2269               	.LVL297:
 2270               	.LBB84:
 348:display.c     ****         display_full_buf[i>>1][3] = tdDigital15table(temp_l, i+1);
 2271               		.loc 1 348 0 discriminator 3
 2272 08e2 FB01      		movw r30,r22
 2273 08e4 E20F      		add r30,r18
 2274 08e6 F31F      		adc r31,r19
 2275 08e8 E050      		subi r30,lo8(-(TripleDotDigital15table))
 2276 08ea F040      		sbci r31,hi8(-(TripleDotDigital15table))
 2277               	.LVL298:
 2278               	/* #APP */
 2279               	 ;  348 "display.c" 1
 2280 08ec E491      		lpm r30, Z
 2281               		
 2282               	 ;  0 "" 2
 2283               	.LVL299:
 2284               	/* #NOAPP */
 2285               	.LBE84:
 2286 08ee 1296      		adiw r26,2
 2287 08f0 EC93      		st X,r30
 2288 08f2 1297      		sbiw r26,2
 2289               	.LVL300:
 2290               	.LBB85:
 349:display.c     ****         display_full_buf[i>>1][4] = tdDigital15table(temp_f, i);
 2291               		.loc 1 349 0 discriminator 3
 2292 08f4 F801      		movw r30,r16
 2293               	.LVL301:
 2294 08f6 E20F      		add r30,r18
 2295 08f8 F31F      		adc r31,r19
 2296 08fa E050      		subi r30,lo8(-(TripleDotDigital15table))
 2297 08fc F040      		sbci r31,hi8(-(TripleDotDigital15table))
 2298               	/* #APP */
 2299               	 ;  349 "display.c" 1
 2300 08fe E491      		lpm r30, Z
 2301               		
 2302               	 ;  0 "" 2
 2303               	.LVL302:
 2304               	/* #NOAPP */
 2305               	.LBE85:
 2306 0900 1396      		adiw r26,3
 2307 0902 EC93      		st X,r30
 2308 0904 1397      		sbiw r26,3
 2309               	.LVL303:
 2310               	.LBB86:
 350:display.c     ****         display_full_buf[i>>1][5] = tdDigital15table(temp_f, i+1);
 2311               		.loc 1 350 0 discriminator 3
 2312 0906 FA01      		movw r30,r20
 2313               	.LVL304:
 2314 0908 E20F      		add r30,r18
 2315 090a F31F      		adc r31,r19
 2316 090c E050      		subi r30,lo8(-(TripleDotDigital15table))
 2317 090e F040      		sbci r31,hi8(-(TripleDotDigital15table))
 2318               	.LVL305:
 2319               	/* #APP */
 2320               	 ;  350 "display.c" 1
 2321 0910 E491      		lpm r30, Z
 2322               		
 2323               	 ;  0 "" 2
 2324               	.LVL306:
 2325               	/* #NOAPP */
 2326               	.LBE86:
 2327 0912 1496      		adiw r26,4
 2328 0914 EC93      		st X,r30
 2329 0916 1497      		sbiw r26,4
 2330               	.LVL307:
 2331               	.LBB87:
 351:display.c     ****     }
 2332               		.loc 1 351 0 discriminator 3
 2333 0918 FE01      		movw r30,r28
 2334               	.LVL308:
 2335 091a E20F      		add r30,r18
 2336 091c F31F      		adc r31,r19
 2337 091e E050      		subi r30,lo8(-(TripleDotDigital15table))
 2338 0920 F040      		sbci r31,hi8(-(TripleDotDigital15table))
 2339               	/* #APP */
 2340               	 ;  351 "display.c" 1
 2341 0922 E491      		lpm r30, Z
 2342               		
 2343               	 ;  0 "" 2
 2344               	.LVL309:
 2345               	/* #NOAPP */
 2346               	.LBE87:
 2347 0924 1596      		adiw r26,5
 2348 0926 EC93      		st X,r30
 2349               	.LVL310:
 2350 0928 2E5F      		subi r18,-2
 2351 092a 3F4F      		sbci r19,-1
 2352               	.LVL311:
 344:display.c     ****     {
 2353               		.loc 1 344 0 discriminator 3
 2354 092c 2E31      		cpi r18,30
 2355 092e 3105      		cpc r19,__zero_reg__
 2356 0930 01F0      		breq .+2
 2357 0932 00C0      		rjmp .L90
 2358               	.LBE77:
 353:display.c     **** }
 2359               		.loc 1 353 0
 2360 0934 9091 0000 		lds r25,display_full_buf+87
 2361 0938 84E0      		ldi r24,lo8(4)
 2362               	.LVL312:
 2363 093a 8927      		eor r24,r25
 2364 093c 8093 0000 		sts display_full_buf+87,r24
 2365               	.LVL313:
 2366               	/* epilogue start */
 354:display.c     **** 
 2367               		.loc 1 354 0
 2368 0940 DF91      		pop r29
 2369 0942 CF91      		pop r28
 2370 0944 1F91      		pop r17
 2371               	.LVL314:
 2372 0946 0F91      		pop r16
 2373 0948 FF90      		pop r15
 2374 094a EF90      		pop r14
 2375               	.LVL315:
 2376 094c DF90      		pop r13
 2377 094e CF90      		pop r12
 2378 0950 BF90      		pop r11
 2379 0952 AF90      		pop r10
 2380               	.LVL316:
 2381 0954 0895      		ret
 2382               		.cfi_endproc
 2383               	.LFE13:
 2385               	.global	clear_ext_temperature
 2387               	clear_ext_temperature:
 2388               	.LFB14:
 357:display.c     ****     for (uint8_t i=0; i<7; i++)
 2389               		.loc 1 357 0
 2390               		.cfi_startproc
 2391               	/* prologue: function */
 2392               	/* frame size = 0 */
 2393               	/* stack size = 0 */
 2394               	.L__stack_usage = 0
 2395               	.LVL317:
 2396 0956 E0E0      		ldi r30,lo8(display_bottom_buf)
 2397 0958 F0E0      		ldi r31,hi8(display_bottom_buf)
 2398               	.LVL318:
 2399               	.L99:
 2400               	.LBB88:
 360:display.c     ****         display_bottom_buf[i][19] = 0;
 2401               		.loc 1 360 0 discriminator 3
 2402 095a 128A      		std Z+18,__zero_reg__
 361:display.c     ****         display_bottom_buf[i][20] = 0;
 2403               		.loc 1 361 0 discriminator 3
 2404 095c 138A      		std Z+19,__zero_reg__
 362:display.c     ****         display_bottom_buf[i][21] = 0;
 2405               		.loc 1 362 0 discriminator 3
 2406 095e 148A      		std Z+20,__zero_reg__
 363:display.c     ****     }
 2407               		.loc 1 363 0 discriminator 3
 2408 0960 158A      		std Z+21,__zero_reg__
 2409 0962 B096      		adiw r30,32
 358:display.c     ****     {
 2410               		.loc 1 358 0 discriminator 3
 2411 0964 80E0      		ldi r24,hi8(display_bottom_buf+224)
 2412 0966 E030      		cpi r30,lo8(display_bottom_buf+224)
 2413 0968 F807      		cpc r31,r24
 2414 096a 01F4      		brne .L99
 2415               	/* epilogue start */
 2416               	.LBE88:
 365:display.c     **** 
 2417               		.loc 1 365 0
 2418 096c 0895      		ret
 2419               		.cfi_endproc
 2420               	.LFE14:
 2422               	.global	print_pressure
 2424               	print_pressure:
 2425               	.LFB15:
 368:display.c     ****     pressure *= 10;
 2426               		.loc 1 368 0
 2427               		.cfi_startproc
 2428               	.LVL319:
 2429 096e 8F92      		push r8
 2430               	.LCFI48:
 2431               		.cfi_def_cfa_offset 3
 2432               		.cfi_offset 8, -2
 2433 0970 9F92      		push r9
 2434               	.LCFI49:
 2435               		.cfi_def_cfa_offset 4
 2436               		.cfi_offset 9, -3
 2437 0972 AF92      		push r10
 2438               	.LCFI50:
 2439               		.cfi_def_cfa_offset 5
 2440               		.cfi_offset 10, -4
 2441 0974 BF92      		push r11
 2442               	.LCFI51:
 2443               		.cfi_def_cfa_offset 6
 2444               		.cfi_offset 11, -5
 2445 0976 CF92      		push r12
 2446               	.LCFI52:
 2447               		.cfi_def_cfa_offset 7
 2448               		.cfi_offset 12, -6
 2449 0978 DF92      		push r13
 2450               	.LCFI53:
 2451               		.cfi_def_cfa_offset 8
 2452               		.cfi_offset 13, -7
 2453 097a EF92      		push r14
 2454               	.LCFI54:
 2455               		.cfi_def_cfa_offset 9
 2456               		.cfi_offset 14, -8
 2457 097c FF92      		push r15
 2458               	.LCFI55:
 2459               		.cfi_def_cfa_offset 10
 2460               		.cfi_offset 15, -9
 2461 097e 0F93      		push r16
 2462               	.LCFI56:
 2463               		.cfi_def_cfa_offset 11
 2464               		.cfi_offset 16, -10
 2465 0980 1F93      		push r17
 2466               	.LCFI57:
 2467               		.cfi_def_cfa_offset 12
 2468               		.cfi_offset 17, -11
 2469 0982 CF93      		push r28
 2470               	.LCFI58:
 2471               		.cfi_def_cfa_offset 13
 2472               		.cfi_offset 28, -12
 2473 0984 DF93      		push r29
 2474               	.LCFI59:
 2475               		.cfi_def_cfa_offset 14
 2476               		.cfi_offset 29, -13
 2477               	/* prologue: function */
 2478               	/* frame size = 0 */
 2479               	/* stack size = 12 */
 2480               	.L__stack_usage = 12
 2481 0986 9B01      		movw r18,r22
 2482 0988 AC01      		movw r20,r24
 369:display.c     ****     pressure /= 133;
 2483               		.loc 1 369 0
 2484 098a AAE0      		ldi r26,lo8(10)
 2485 098c B0E0      		ldi r27,0
 2486 098e 0E94 0000 		call __muluhisi3
 2487               	.LVL320:
 2488 0992 4B01      		movw r8,r22
 2489 0994 5C01      		movw r10,r24
 2490               	.LVL321:
 370:display.c     ****     uint8_t p1 = pressure / 1000;
 2491               		.loc 1 370 0
 2492 0996 25E8      		ldi r18,lo8(-123)
 2493 0998 30E0      		ldi r19,0
 2494 099a 40E0      		ldi r20,0
 2495 099c 50E0      		ldi r21,0
 2496 099e 0E94 0000 		call __divmodsi4
 2497 09a2 6901      		movw r12,r18
 2498 09a4 7A01      		movw r14,r20
 2499               	.LVL322:
 371:display.c     ****     pressure -= (uint16_t)p1 * 1000;
 2500               		.loc 1 371 0
 2501 09a6 C501      		movw r24,r10
 2502 09a8 B401      		movw r22,r8
 2503 09aa 28E8      		ldi r18,lo8(-120)
 2504 09ac 37E0      		ldi r19,lo8(7)
 2505 09ae 42E0      		ldi r20,lo8(2)
 2506 09b0 50E0      		ldi r21,0
 2507 09b2 0E94 0000 		call __divmodsi4
 2508 09b6 C22F      		mov r28,r18
 2509               	.LVL323:
 372:display.c     ****     uint8_t p2 = pressure / 100;
 2510               		.loc 1 372 0
 2511 09b8 28EE      		ldi r18,lo8(-24)
 2512 09ba 33E0      		ldi r19,lo8(3)
 2513               	.LVL324:
 2514 09bc C29F      		mul r28,r18
 2515 09be C001      		movw r24,r0
 2516 09c0 C39F      		mul r28,r19
 2517 09c2 900D      		add r25,r0
 2518 09c4 1124      		clr __zero_reg__
 2519 09c6 C81A      		sub r12,r24
 2520 09c8 D90A      		sbc r13,r25
 2521 09ca E108      		sbc r14,__zero_reg__
 2522 09cc F108      		sbc r15,__zero_reg__
 2523               	.LVL325:
 373:display.c     ****     pressure -= (uint16_t)p2 * 100;
 2524               		.loc 1 373 0
 2525 09ce C701      		movw r24,r14
 2526 09d0 B601      		movw r22,r12
 2527 09d2 24E6      		ldi r18,lo8(100)
 2528 09d4 30E0      		ldi r19,0
 2529 09d6 40E0      		ldi r20,0
 2530 09d8 50E0      		ldi r21,0
 2531 09da 0E94 0000 		call __divmodsi4
 2532 09de 022F      		mov r16,r18
 2533               	.LVL326:
 374:display.c     ****     uint8_t p3 = pressure / 10;
 2534               		.loc 1 374 0
 2535 09e0 24E6      		ldi r18,lo8(100)
 2536 09e2 029F      		mul r16,r18
 2537 09e4 C001      		movw r24,r0
 2538 09e6 1124      		clr __zero_reg__
 2539 09e8 C81A      		sub r12,r24
 2540 09ea D90A      		sbc r13,r25
 2541 09ec E108      		sbc r14,__zero_reg__
 2542 09ee F108      		sbc r15,__zero_reg__
 2543               	.LVL327:
 375:display.c     ****     uint8_t p4 = (uint8_t)pressure - p3 * 10;
 2544               		.loc 1 375 0
 2545 09f0 C701      		movw r24,r14
 2546 09f2 B601      		movw r22,r12
 2547 09f4 2AE0      		ldi r18,lo8(10)
 2548 09f6 30E0      		ldi r19,0
 2549 09f8 40E0      		ldi r20,0
 2550 09fa 50E0      		ldi r21,0
 2551 09fc 0E94 0000 		call __divmodsi4
 2552               	.LVL328:
 376:display.c     ****     for (uint8_t i=0; i<7; i++)
 2553               		.loc 1 376 0
 2554 0a00 8AE0      		ldi r24,lo8(10)
 2555 0a02 289F      		mul r18,r24
 2556 0a04 C018      		sub r12,r0
 2557 0a06 1124      		clr __zero_reg__
 2558               	.LVL329:
 2559 0a08 A0E0      		ldi r26,lo8(display_bottom_buf)
 2560 0a0a B0E0      		ldi r27,hi8(display_bottom_buf)
 2561 0a0c 87E0      		ldi r24,lo8(7)
 2562 0a0e C89F      		mul r28,r24
 2563 0a10 7001      		movw r14,r0
 2564 0a12 1124      		clr __zero_reg__
 2565 0a14 87E0      		ldi r24,lo8(7)
 2566 0a16 089F      		mul r16,r24
 2567 0a18 8001      		movw r16,r0
 2568 0a1a 1124      		clr __zero_reg__
 2569               	.LVL330:
 2570 0a1c 87E0      		ldi r24,lo8(7)
 2571 0a1e 289F      		mul r18,r24
 2572 0a20 E001      		movw r28,r0
 2573 0a22 1124      		clr __zero_reg__
 2574               	.LVL331:
 2575 0a24 27E0      		ldi r18,lo8(7)
 2576               	.LVL332:
 2577 0a26 C29E      		mul r12,r18
 2578 0a28 B001      		movw r22,r0
 2579 0a2a 1124      		clr __zero_reg__
 2580 0a2c 40E0      		ldi r20,0
 2581 0a2e 50E0      		ldi r21,0
 2582               	.LVL333:
 2583               	.L102:
 2584 0a30 FA01      		movw r30,r20
 2585 0a32 EE0D      		add r30,r14
 2586 0a34 FF1D      		adc r31,r15
 2587 0a36 E050      		subi r30,lo8(-(DotDigital7table))
 2588 0a38 F040      		sbci r31,hi8(-(DotDigital7table))
 2589               	.LVL334:
 2590               	.LBB89:
 2591               	.LBB90:
 379:display.c     ****         display_bottom_buf[i][26] = (dDigital7table(p1, i) << 4) | (dDigital7table(p2, i) >> 2);
 2592               		.loc 1 379 0 discriminator 3
 2593               	/* #APP */
 2594               	 ;  379 "display.c" 1
 2595 0a3a 8491      		lpm r24, Z
 2596               		
 2597               	 ;  0 "" 2
 2598               	.LVL335:
 2599               	/* #NOAPP */
 2600               	.LBE90:
 2601 0a3c 8295      		swap r24
 2602               	.LVL336:
 2603 0a3e 8F70      		andi r24,lo8(15)
 2604 0a40 5996      		adiw r26,25
 2605 0a42 8C93      		st X,r24
 2606 0a44 5997      		sbiw r26,25
 2607               	.LVL337:
 2608               	.LBB91:
 380:display.c     ****         display_bottom_buf[i][27] = dDigital7table(p3, i);
 2609               		.loc 1 380 0 discriminator 3
 2610               	/* #APP */
 2611               	 ;  380 "display.c" 1
 2612 0a46 9491      		lpm r25, Z
 2613               		
 2614               	 ;  0 "" 2
 2615               	.LVL338:
 2616               	/* #NOAPP */
 2617               	.LBE91:
 2618               	.LBB92:
 2619 0a48 FA01      		movw r30,r20
 2620               	.LVL339:
 2621 0a4a E00F      		add r30,r16
 2622 0a4c F11F      		adc r31,r17
 2623 0a4e E050      		subi r30,lo8(-(DotDigital7table))
 2624 0a50 F040      		sbci r31,hi8(-(DotDigital7table))
 2625               	.LVL340:
 2626               	/* #APP */
 2627               	 ;  380 "display.c" 1
 2628 0a52 E491      		lpm r30, Z
 2629               		
 2630               	 ;  0 "" 2
 2631               	.LVL341:
 2632               	/* #NOAPP */
 2633               	.LBE92:
 2634 0a54 20E1      		ldi r18,lo8(16)
 2635 0a56 929F      		mul r25,r18
 2636 0a58 C001      		movw r24,r0
 2637 0a5a 1124      		clr __zero_reg__
 2638 0a5c E695      		lsr r30
 2639 0a5e E695      		lsr r30
 2640               	.LVL342:
 2641 0a60 8E2B      		or r24,r30
 2642 0a62 5A96      		adiw r26,26
 2643 0a64 8C93      		st X,r24
 2644 0a66 5A97      		sbiw r26,26
 2645               	.LVL343:
 2646               	.LBB93:
 381:display.c     ****         display_bottom_buf[i][28] = dDigital7table(p4, i);
 2647               		.loc 1 381 0 discriminator 3
 2648 0a68 FA01      		movw r30,r20
 2649 0a6a EC0F      		add r30,r28
 2650 0a6c FD1F      		adc r31,r29
 2651 0a6e E050      		subi r30,lo8(-(DotDigital7table))
 2652 0a70 F040      		sbci r31,hi8(-(DotDigital7table))
 2653               	.LVL344:
 2654               	/* #APP */
 2655               	 ;  381 "display.c" 1
 2656 0a72 E491      		lpm r30, Z
 2657               		
 2658               	 ;  0 "" 2
 2659               	.LVL345:
 2660               	/* #NOAPP */
 2661               	.LBE93:
 2662 0a74 5B96      		adiw r26,27
 2663 0a76 EC93      		st X,r30
 2664 0a78 5B97      		sbiw r26,27
 2665               	.LVL346:
 2666               	.LBB94:
 382:display.c     ****     }
 2667               		.loc 1 382 0 discriminator 3
 2668 0a7a FA01      		movw r30,r20
 2669               	.LVL347:
 2670 0a7c E60F      		add r30,r22
 2671 0a7e F71F      		adc r31,r23
 2672 0a80 E050      		subi r30,lo8(-(DotDigital7table))
 2673 0a82 F040      		sbci r31,hi8(-(DotDigital7table))
 2674               	.LVL348:
 2675               	/* #APP */
 2676               	 ;  382 "display.c" 1
 2677 0a84 E491      		lpm r30, Z
 2678               		
 2679               	 ;  0 "" 2
 2680               	.LVL349:
 2681               	/* #NOAPP */
 2682               	.LBE94:
 2683 0a86 5C96      		adiw r26,28
 2684 0a88 EC93      		st X,r30
 2685 0a8a 5C97      		sbiw r26,28
 2686               	.LVL350:
 2687 0a8c 4F5F      		subi r20,-1
 2688 0a8e 5F4F      		sbci r21,-1
 2689               	.LVL351:
 2690 0a90 9096      		adiw r26,32
 2691               	.LVL352:
 377:display.c     ****     {
 2692               		.loc 1 377 0 discriminator 3
 2693 0a92 4730      		cpi r20,7
 2694 0a94 5105      		cpc r21,__zero_reg__
 2695 0a96 01F0      		breq .+2
 2696 0a98 00C0      		rjmp .L102
 2697               	.LBE89:
 384:display.c     **** }
 2698               		.loc 1 384 0
 2699 0a9a 8091 0000 		lds r24,display_bottom_buf+219
 2700 0a9e 8260      		ori r24,lo8(2)
 2701 0aa0 8093 0000 		sts display_bottom_buf+219,r24
 2702               	.LVL353:
 2703               	/* epilogue start */
 385:display.c     **** 
 2704               		.loc 1 385 0
 2705 0aa4 DF91      		pop r29
 2706 0aa6 CF91      		pop r28
 2707               	.LVL354:
 2708 0aa8 1F91      		pop r17
 2709 0aaa 0F91      		pop r16
 2710               	.LVL355:
 2711 0aac FF90      		pop r15
 2712 0aae EF90      		pop r14
 2713               	.LVL356:
 2714 0ab0 DF90      		pop r13
 2715 0ab2 CF90      		pop r12
 2716               	.LVL357:
 2717 0ab4 BF90      		pop r11
 2718 0ab6 AF90      		pop r10
 2719 0ab8 9F90      		pop r9
 2720 0aba 8F90      		pop r8
 2721 0abc 0895      		ret
 2722               		.cfi_endproc
 2723               	.LFE15:
 2725               	.global	print_int_temperature
 2727               	print_int_temperature:
 2728               	.LFB16:
 388:display.c     ****     t /= 10;
 2729               		.loc 1 388 0
 2730               		.cfi_startproc
 2731               	.LVL358:
 2732               	/* prologue: function */
 2733               	/* frame size = 0 */
 2734               	/* stack size = 0 */
 2735               	.L__stack_usage = 0
 2736 0abe 9C01      		movw r18,r24
 2737               	.LVL359:
 390:display.c     ****     uint8_t temp_h = t / 10;
 2738               		.loc 1 390 0
 2739 0ac0 EAE0      		ldi r30,lo8(10)
 2740 0ac2 F0E0      		ldi r31,0
 2741 0ac4 BF01      		movw r22,r30
 2742 0ac6 0E94 0000 		call __divmodhi4
 2743               	.LVL360:
 2744 0aca CB01      		movw r24,r22
 2745 0acc BF01      		movw r22,r30
 2746               	.LVL361:
 2747 0ace 0E94 0000 		call __divmodhi4
 2748               	.LVL362:
 2749 0ad2 482F      		mov r20,r24
 2750               	.LVL363:
 391:display.c     ****     for (uint8_t i=0; i<7; i++)
 2751               		.loc 1 391 0
 2752 0ad4 C901      		movw r24,r18
 2753 0ad6 64E6      		ldi r22,lo8(100)
 2754 0ad8 70E0      		ldi r23,0
 2755 0ada 0E94 0000 		call __divmodhi4
 2756               	.LVL364:
 2757 0ade A0E0      		ldi r26,lo8(display_bottom_buf)
 2758 0ae0 B0E0      		ldi r27,hi8(display_bottom_buf)
 2759 0ae2 20E0      		ldi r18,0
 2760 0ae4 30E0      		ldi r19,0
 2761               	.LVL365:
 2762               	.LBB95:
 2763               	.LBB96:
 394:display.c     ****         display_bottom_buf[i][17] = (dDigital7table(temp_l, i) << 2);
 2764               		.loc 1 394 0
 2765 0ae6 87E0      		ldi r24,lo8(7)
 2766 0ae8 689F      		mul r22,r24
 2767 0aea B001      		movw r22,r0
 2768 0aec 1124      		clr __zero_reg__
 2769               	.LVL366:
 2770               	.LBE96:
 2771               	.LBB97:
 2772 0aee 489F      		mul r20,r24
 2773 0af0 C001      		movw r24,r0
 2774 0af2 1124      		clr __zero_reg__
 2775               	.LVL367:
 2776               	.L105:
 2777               	.LBE97:
 2778               	.LBB98:
 394:display.c     ****         display_bottom_buf[i][17] = (dDigital7table(temp_l, i) << 2);
 2779               		.loc 1 394 0 is_stmt 0 discriminator 3
 2780 0af4 FB01      		movw r30,r22
 2781 0af6 E20F      		add r30,r18
 2782 0af8 F31F      		adc r31,r19
 2783 0afa E050      		subi r30,lo8(-(DotDigital7table))
 2784 0afc F040      		sbci r31,hi8(-(DotDigital7table))
 2785               	/* #APP */
 2786               	 ;  394 "display.c" 1
 2787 0afe 4491      		lpm r20, Z
 2788               		
 2789               	 ;  0 "" 2
 2790               	.LVL368:
 2791               	/* #NOAPP */
 2792               	.LBE98:
 2793               	.LBB99:
 2794 0b00 FC01      		movw r30,r24
 2795 0b02 E20F      		add r30,r18
 2796 0b04 F31F      		adc r31,r19
 2797 0b06 E050      		subi r30,lo8(-(DotDigital7table))
 2798 0b08 F040      		sbci r31,hi8(-(DotDigital7table))
 2799               	.LVL369:
 2800               	/* #APP */
 2801               	 ;  394 "display.c" 1
 2802 0b0a 5491      		lpm r21, Z
 2803               		
 2804               	 ;  0 "" 2
 2805               	.LVL370:
 2806               	/* #NOAPP */
 2807               	.LBE99:
 2808 0b0c 5295      		swap r21
 2809               	.LVL371:
 2810 0b0e 5695      		lsr r21
 2811 0b10 5695      		lsr r21
 2812 0b12 5370      		andi r21,lo8(3)
 2813 0b14 452B      		or r20,r21
 2814               	.LVL372:
 2815 0b16 5096      		adiw r26,16
 2816 0b18 4C93      		st X,r20
 2817 0b1a 5097      		sbiw r26,16
 2818               	.LVL373:
 2819               	.LBB100:
 395:display.c     ****     }
 2820               		.loc 1 395 0 is_stmt 1 discriminator 3
 2821               	/* #APP */
 2822               	 ;  395 "display.c" 1
 2823 0b1c E491      		lpm r30, Z
 2824               		
 2825               	 ;  0 "" 2
 2826               	.LVL374:
 2827               	/* #NOAPP */
 2828               	.LBE100:
 2829 0b1e EE0F      		lsl r30
 2830 0b20 EE0F      		lsl r30
 2831               	.LVL375:
 2832 0b22 5196      		adiw r26,17
 2833 0b24 EC93      		st X,r30
 2834 0b26 5197      		sbiw r26,17
 2835               	.LVL376:
 2836 0b28 2F5F      		subi r18,-1
 2837 0b2a 3F4F      		sbci r19,-1
 2838               	.LVL377:
 2839 0b2c 9096      		adiw r26,32
 392:display.c     ****     {
 2840               		.loc 1 392 0 discriminator 3
 2841 0b2e 2730      		cpi r18,7
 2842 0b30 3105      		cpc r19,__zero_reg__
 2843 0b32 01F4      		brne .L105
 2844               	.LBE95:
 397:display.c     ****     display_bottom_buf[3][17] |= 0x06;
 2845               		.loc 1 397 0
 2846 0b34 8091 0000 		lds r24,display_bottom_buf+17
 2847               	.LVL378:
 2848 0b38 8660      		ori r24,lo8(6)
 2849 0b3a 8093 0000 		sts display_bottom_buf+17,r24
 398:display.c     ****     display_bottom_buf[1][17] |= 0x09;
 2850               		.loc 1 398 0
 2851 0b3e 8091 0000 		lds r24,display_bottom_buf+113
 2852 0b42 8660      		ori r24,lo8(6)
 2853 0b44 8093 0000 		sts display_bottom_buf+113,r24
 399:display.c     ****     display_bottom_buf[2][17] |= 0x09;
 2854               		.loc 1 399 0
 2855 0b48 8091 0000 		lds r24,display_bottom_buf+49
 2856 0b4c 8960      		ori r24,lo8(9)
 2857 0b4e 8093 0000 		sts display_bottom_buf+49,r24
 400:display.c     **** }
 2858               		.loc 1 400 0
 2859 0b52 8091 0000 		lds r24,display_bottom_buf+81
 2860 0b56 8960      		ori r24,lo8(9)
 2861 0b58 8093 0000 		sts display_bottom_buf+81,r24
 2862 0b5c 0895      		ret
 2863               		.cfi_endproc
 2864               	.LFE16:
 2866               	.global	display_clear_buf
 2868               	display_clear_buf:
 2869               	.LFB17:
 404:display.c     ****     for(uint8_t i=0; i<32; i++)
 2870               		.loc 1 404 0
 2871               		.cfi_startproc
 2872               	/* prologue: function */
 2873               	/* frame size = 0 */
 2874               	/* stack size = 0 */
 2875               	.L__stack_usage = 0
 2876               	.LVL379:
 2877 0b5e A0E0      		ldi r26,lo8(display_buf)
 2878 0b60 B0E0      		ldi r27,hi8(display_buf)
 2879 0b62 80E0      		ldi r24,lo8(display_buf+64)
 2880 0b64 90E0      		ldi r25,hi8(display_buf+64)
 2881               	.LVL380:
 2882               	.L108:
 2883 0b66 ED91      		ld r30,X+
 2884 0b68 FD91      		ld r31,X+
 2885 0b6a 9F01      		movw r18,r30
 2886 0b6c 2A5F      		subi r18,-6
 2887 0b6e 3F4F      		sbci r19,-1
 2888               	.LVL381:
 2889               	.L109:
 2890               	.LBB101:
 2891               	.LBB102:
 407:display.c     **** 
 2892               		.loc 1 407 0 discriminator 3
 2893 0b70 1192      		st Z+,__zero_reg__
 2894               	.LVL382:
 406:display.c     ****             display_buf[i][j] = 0;
 2895               		.loc 1 406 0 discriminator 3
 2896 0b72 E217      		cp r30,r18
 2897 0b74 F307      		cpc r31,r19
 2898 0b76 01F4      		brne .L109
 2899               	.LBE102:
 405:display.c     ****         for(uint8_t j=0; j<6; j++)
 2900               		.loc 1 405 0 discriminator 2
 2901 0b78 8A17      		cp r24,r26
 2902 0b7a 9B07      		cpc r25,r27
 2903 0b7c 01F4      		brne .L108
 2904 0b7e A0E0      		ldi r26,lo8(display_buf+48)
 2905 0b80 B0E0      		ldi r27,hi8(display_buf+48)
 2906               	.LVL383:
 2907               	.L110:
 2908 0b82 ED91      		ld r30,X+
 2909 0b84 FD91      		ld r31,X+
 2910 0b86 9F01      		movw r18,r30
 2911 0b88 205E      		subi r18,-32
 2912 0b8a 3F4F      		sbci r19,-1
 2913               	.LVL384:
 2914               	.L111:
 2915               	.LBE101:
 2916               	.LBB103:
 2917               	.LBB104:
 411:display.c     **** }
 2918               		.loc 1 411 0 discriminator 3
 2919 0b8c 1192      		st Z+,__zero_reg__
 2920               	.LVL385:
 410:display.c     ****             display_buf[i][j] = 0;
 2921               		.loc 1 410 0 discriminator 3
 2922 0b8e 2E17      		cp r18,r30
 2923 0b90 3F07      		cpc r19,r31
 2924 0b92 01F4      		brne .L111
 2925               	.LVL386:
 2926               	.LBE104:
 409:display.c     ****         for(uint8_t j=0; j<32; j++)
 2927               		.loc 1 409 0 discriminator 2
 2928 0b94 8A17      		cp r24,r26
 2929 0b96 9B07      		cpc r25,r27
 2930 0b98 01F4      		brne .L110
 2931 0b9a 0895      		ret
 2932               	.LBE103:
 2933               		.cfi_endproc
 2934               	.LFE17:
 2936               	.global	display_init
 2938               	display_init:
 2939               	.LFB7:
  98:display.c     ****     display_clear_buf();
 2940               		.loc 1 98 0
 2941               		.cfi_startproc
 2942               	/* prologue: function */
 2943               	/* frame size = 0 */
 2944               	/* stack size = 0 */
 2945               	.L__stack_usage = 0
  99:display.c     ****     // print_img();
 2946               		.loc 1 99 0
 2947 0b9c 0E94 0000 		call display_clear_buf
 2948               	.LVL387:
 101:display.c     ****     max7219_update();
 2949               		.loc 1 101 0
 2950 0ba0 0E94 0000 		call max7219_init
 2951               	.LVL388:
 102:display.c     **** }
 2952               		.loc 1 102 0
 2953 0ba4 0C94 0000 		jmp max7219_update
 2954               	.LVL389:
 2955               		.cfi_endproc
 2956               	.LFE7:
 2958               	.global	max7219_load_row
 2960               	max7219_load_row:
 2961               	.LFB18:
 415:display.c     ****     uint8_t tmp, col, row;
 2962               		.loc 1 415 0
 2963               		.cfi_startproc
 2964               	.LVL390:
 2965 0ba8 8F92      		push r8
 2966               	.LCFI60:
 2967               		.cfi_def_cfa_offset 3
 2968               		.cfi_offset 8, -2
 2969 0baa 9F92      		push r9
 2970               	.LCFI61:
 2971               		.cfi_def_cfa_offset 4
 2972               		.cfi_offset 9, -3
 2973 0bac AF92      		push r10
 2974               	.LCFI62:
 2975               		.cfi_def_cfa_offset 5
 2976               		.cfi_offset 10, -4
 2977 0bae BF92      		push r11
 2978               	.LCFI63:
 2979               		.cfi_def_cfa_offset 6
 2980               		.cfi_offset 11, -5
 2981 0bb0 CF92      		push r12
 2982               	.LCFI64:
 2983               		.cfi_def_cfa_offset 7
 2984               		.cfi_offset 12, -6
 2985 0bb2 DF92      		push r13
 2986               	.LCFI65:
 2987               		.cfi_def_cfa_offset 8
 2988               		.cfi_offset 13, -7
 2989 0bb4 EF92      		push r14
 2990               	.LCFI66:
 2991               		.cfi_def_cfa_offset 9
 2992               		.cfi_offset 14, -8
 2993 0bb6 FF92      		push r15
 2994               	.LCFI67:
 2995               		.cfi_def_cfa_offset 10
 2996               		.cfi_offset 15, -9
 2997 0bb8 0F93      		push r16
 2998               	.LCFI68:
 2999               		.cfi_def_cfa_offset 11
 3000               		.cfi_offset 16, -10
 3001 0bba 1F93      		push r17
 3002               	.LCFI69:
 3003               		.cfi_def_cfa_offset 12
 3004               		.cfi_offset 17, -11
 3005 0bbc CF93      		push r28
 3006               	.LCFI70:
 3007               		.cfi_def_cfa_offset 13
 3008               		.cfi_offset 28, -12
 3009 0bbe DF93      		push r29
 3010               	.LCFI71:
 3011               		.cfi_def_cfa_offset 14
 3012               		.cfi_offset 29, -13
 3013               	/* prologue: function */
 3014               	/* frame size = 0 */
 3015               	/* stack size = 12 */
 3016               	.L__stack_usage = 12
 417:display.c     ****     uint8_t matrix_shift = display_col_shift >> 3;
 3017               		.loc 1 417 0
 3018 0bc0 2091 0000 		lds r18,display_col_shift
 3019 0bc4 322F      		mov r19,r18
 3020 0bc6 3770      		andi r19,lo8(7)
 3021               	.LVL391:
 418:display.c     **** 
 3022               		.loc 1 418 0
 3023 0bc8 2695      		lsr r18
 3024 0bca 2695      		lsr r18
 3025 0bcc 2695      		lsr r18
 3026               	.LVL392:
 3027               	.LBB105:
 426:display.c     ****             if(row < 24)
 3028               		.loc 1 426 0
 3029 0bce 9091 0000 		lds r25,display_row_shift
 3030 0bd2 E82E      		mov r14,r24
 3031 0bd4 E90E      		add r14,r25
 428:display.c     ****             else
 3032               		.loc 1 428 0
 3033 0bd6 4E2D      		mov r20,r14
 3034 0bd8 50E0      		ldi r21,0
 445:display.c     ****             col = 11 - m;
 3035               		.loc 1 445 0
 3036 0bda 915F      		subi r25,lo8(-(15))
 3037 0bdc 981B      		sub r25,r24
 448:display.c     ****             else
 3038               		.loc 1 448 0
 3039 0bde C92F      		mov r28,r25
 3040 0be0 D0E0      		ldi r29,0
 3041 0be2 DB01      		movw r26,r22
 3042 0be4 6BE0      		ldi r22,lo8(11)
 3043 0be6 F62E      		mov r15,r22
 3044               	.LVL393:
 3045 0be8 F20E      		add r15,r18
 3046 0bea 60E0      		ldi r22,0
 3047 0bec 70E0      		ldi r23,0
 422:display.c     **** 
 3048               		.loc 1 422 0
 3049 0bee 8F5F      		subi r24,lo8(-(1))
 3050               	.LVL394:
 3051 0bf0 CC0F      		lsl r28
 3052 0bf2 DD1F      		rol r29
 453:display.c     ****                 if (col_shift)
 3053               		.loc 1 453 0
 3054 0bf4 C050      		subi r28,lo8(-(display_buf))
 3055 0bf6 D040      		sbci r29,hi8(-(display_buf))
 459:display.c     ****                 }
 3056               		.loc 1 459 0
 3057 0bf8 08E0      		ldi r16,lo8(8)
 3058 0bfa 10E0      		ldi r17,0
 3059 0bfc 031B      		sub r16,r19
 3060 0bfe 1109      		sbc r17,__zero_reg__
 3061 0c00 440F      		lsl r20
 3062 0c02 551F      		rol r21
 432:display.c     ****                 if(col_shift)
 3063               		.loc 1 432 0
 3064 0c04 4050      		subi r20,lo8(-(display_buf))
 3065 0c06 5040      		sbci r21,hi8(-(display_buf))
 3066               	.LVL395:
 3067               	.L124:
 422:display.c     **** 
 3068               		.loc 1 422 0
 3069 0c08 8C93      		st X,r24
 3070 0c0a E62F      		mov r30,r22
 424:display.c     ****         {
 3071               		.loc 1 424 0
 3072 0c0c 6630      		cpi r22,lo8(6)
 3073 0c0e 00F4      		brsh .L118
 3074               	.LVL396:
 427:display.c     ****                 tmp = display_buf[row][m];
 3075               		.loc 1 427 0
 3076 0c10 F7E1      		ldi r31,lo8(23)
 3077 0c12 FE15      		cp r31,r14
 3078 0c14 00F0      		brlo .L119
 428:display.c     ****             else
 3079               		.loc 1 428 0
 3080 0c16 FA01      		movw r30,r20
 3081 0c18 C080      		ld r12,Z
 3082 0c1a D180      		ldd r13,Z+1
 3083 0c1c F601      		movw r30,r12
 3084 0c1e E60F      		add r30,r22
 3085 0c20 F71F      		adc r31,r23
 3086 0c22 D080      		ld r13,Z
 3087               	.LVL397:
 3088 0c24 00C0      		rjmp .L120
 3089               	.LVL398:
 3090               	.L119:
 431:display.c     ****                 tmp = display_buf[row][col];
 3091               		.loc 1 431 0
 3092 0c26 E20F      		add r30,r18
 3093 0c28 EF71      		andi r30,lo8(31)
 3094 0c2a BE2E      		mov r11,r30
 3095               	.LVL399:
 432:display.c     ****                 if(col_shift)
 3096               		.loc 1 432 0
 3097 0c2c FA01      		movw r30,r20
 3098 0c2e 8080      		ld r8,Z
 3099 0c30 9180      		ldd r9,Z+1
 3100 0c32 6401      		movw r12,r8
 3101 0c34 CB0C      		add r12,r11
 3102 0c36 D11C      		adc r13,__zero_reg__
 3103 0c38 F601      		movw r30,r12
 3104 0c3a D080      		ld r13,Z
 3105               	.LVL400:
 433:display.c     ****                 {
 3106               		.loc 1 433 0
 3107 0c3c 3323      		tst r19
 3108 0c3e 01F0      		breq .L120
 3109               	.LVL401:
 436:display.c     ****                     col &= 31;
 3110               		.loc 1 436 0
 3111 0c40 B394      		inc r11
 3112               	.LVL402:
 438:display.c     ****                 }
 3113               		.loc 1 438 0
 3114 0c42 FB2D      		mov r31,r11
 3115 0c44 FF71      		andi r31,lo8(31)
 3116               	.LVL403:
 3117 0c46 BF2E      		mov r11,r31
 3118 0c48 F401      		movw r30,r8
 3119 0c4a EB0D      		add r30,r11
 3120 0c4c F11D      		adc r31,__zero_reg__
 3121 0c4e E081      		ld r30,Z
 3122 0c50 F0E0      		ldi r31,0
 3123               	.LVL404:
 3124 0c52 002E      		mov r0,r16
 3125 0c54 00C0      		rjmp 2f
 3126               		1:
 3127 0c56 F595      		asr r31
 3128 0c58 E795      		ror r30
 3129               		2:
 3130 0c5a 0A94      		dec r0
 3131 0c5c 02F4      		brpl 1b
 3132 0c5e 032E      		mov r0,r19
 3133 0c60 00C0      		rjmp 2f
 3134               		1:
 3135 0c62 DD0C      		lsl r13
 3136               		2:
 3137 0c64 0A94      		dec r0
 3138 0c66 02F4      		brpl 1b
 3139               	.LVL405:
 3140 0c68 DE2A      		or r13,r30
 3141               	.LVL406:
 3142               	.L120:
 441:display.c     ****         }
 3143               		.loc 1 441 0
 3144 0c6a 1196      		adiw r26,1
 3145 0c6c DC92      		st X,r13
 3146 0c6e 1197      		sbiw r26,1
 3147 0c70 00C0      		rjmp .L121
 3148               	.LVL407:
 3149               	.L118:
 446:display.c     ****             if(row < 24)
 3150               		.loc 1 446 0
 3151 0c72 DF2C      		mov r13,r15
 3152 0c74 D21A      		sub r13,r18
 3153               	.LVL408:
 447:display.c     ****                 tmp = display_buf[row][col];
 3154               		.loc 1 447 0
 3155 0c76 9831      		cpi r25,lo8(24)
 3156 0c78 00F4      		brsh .L122
 448:display.c     ****             else
 3157               		.loc 1 448 0
 3158 0c7a E881      		ld r30,Y
 3159 0c7c F981      		ldd r31,Y+1
 3160 0c7e ED0D      		add r30,r13
 3161 0c80 F11D      		adc r31,__zero_reg__
 3162 0c82 A080      		ld r10,Z
 3163               	.LVL409:
 3164 0c84 00C0      		rjmp .L123
 3165               	.LVL410:
 3166               	.L122:
 452:display.c     ****                 tmp = display_buf[row][col];
 3167               		.loc 1 452 0
 3168 0c86 EF2D      		mov r30,r15
 3169 0c88 EF71      		andi r30,lo8(31)
 3170 0c8a BE2E      		mov r11,r30
 3171               	.LVL411:
 453:display.c     ****                 if (col_shift)
 3172               		.loc 1 453 0
 3173 0c8c C880      		ld r12,Y
 3174 0c8e D980      		ldd r13,Y+1
 3175 0c90 F601      		movw r30,r12
 3176 0c92 EB0D      		add r30,r11
 3177 0c94 F11D      		adc r31,__zero_reg__
 3178 0c96 A080      		ld r10,Z
 3179               	.LVL412:
 454:display.c     ****                 {
 3180               		.loc 1 454 0
 3181 0c98 3323      		tst r19
 3182 0c9a 01F0      		breq .L123
 3183               	.LVL413:
 457:display.c     ****                     col &= 31;
 3184               		.loc 1 457 0
 3185 0c9c F1E0      		ldi r31,lo8(1)
 3186 0c9e FB0D      		add r31,r11
 3187               	.LVL414:
 459:display.c     ****                 }
 3188               		.loc 1 459 0
 3189 0ca0 FF71      		andi r31,lo8(31)
 3190               	.LVL415:
 3191 0ca2 CF0E      		add r12,r31
 3192 0ca4 D11C      		adc r13,__zero_reg__
 3193 0ca6 F601      		movw r30,r12
 3194 0ca8 C080      		ld r12,Z
 3195 0caa D12C      		mov r13,__zero_reg__
 3196 0cac 002E      		mov r0,r16
 3197 0cae 00C0      		rjmp 2f
 3198               		1:
 3199 0cb0 D594      		asr r13
 3200 0cb2 C794      		ror r12
 3201               		2:
 3202 0cb4 0A94      		dec r0
 3203 0cb6 02F4      		brpl 1b
 3204 0cb8 EA2D      		mov r30,r10
 3205 0cba 032E      		mov r0,r19
 3206 0cbc 00C0      		rjmp 2f
 3207               		1:
 3208 0cbe EE0F      		lsl r30
 3209               		2:
 3210 0cc0 0A94      		dec r0
 3211 0cc2 02F4      		brpl 1b
 3212 0cc4 AE2E      		mov r10,r30
 3213               	.LVL416:
 3214 0cc6 AC28      		or r10,r12
 3215               	.LVL417:
 3216               	.L123:
 3217               	.LBB106:
 462:display.c     ****         }
 3218               		.loc 1 462 0
 3219 0cc8 EA2D      		mov r30,r10
 3220 0cca F0E0      		ldi r31,0
 3221 0ccc E050      		subi r30,lo8(-(bit_reverse_table256))
 3222 0cce F040      		sbci r31,hi8(-(bit_reverse_table256))
 3223               	/* #APP */
 3224               	 ;  462 "display.c" 1
 3225 0cd0 E491      		lpm r30, Z
 3226               		
 3227               	 ;  0 "" 2
 3228               	.LVL418:
 3229               	/* #NOAPP */
 3230               	.LBE106:
 3231 0cd2 1196      		adiw r26,1
 3232 0cd4 EC93      		st X,r30
 3233 0cd6 1197      		sbiw r26,1
 3234               	.LVL419:
 3235               	.L121:
 3236 0cd8 6F5F      		subi r22,-1
 3237 0cda 7F4F      		sbci r23,-1
 3238               	.LVL420:
 3239 0cdc 1296      		adiw r26,2
 3240 0cde FA94      		dec r15
 420:display.c     ****     {
 3241               		.loc 1 420 0 discriminator 2
 3242 0ce0 6C30      		cpi r22,12
 3243 0ce2 7105      		cpc r23,__zero_reg__
 3244 0ce4 01F0      		breq .+2
 3245 0ce6 00C0      		rjmp .L124
 3246               	/* epilogue start */
 3247               	.LBE105:
 465:display.c     **** 
 3248               		.loc 1 465 0
 3249 0ce8 DF91      		pop r29
 3250 0cea CF91      		pop r28
 3251 0cec 1F91      		pop r17
 3252 0cee 0F91      		pop r16
 3253 0cf0 FF90      		pop r15
 3254 0cf2 EF90      		pop r14
 3255 0cf4 DF90      		pop r13
 3256 0cf6 CF90      		pop r12
 3257 0cf8 BF90      		pop r11
 3258 0cfa AF90      		pop r10
 3259 0cfc 9F90      		pop r9
 3260 0cfe 8F90      		pop r8
 3261 0d00 0895      		ret
 3262               		.cfi_endproc
 3263               	.LFE18:
 3265               	.global	display_activate
 3267               	display_activate:
 3268               	.LFB24:
 512:display.c     **** }
 513:display.c     **** 
 514:display.c     **** void display_activate(void)
 515:display.c     **** {
 3269               		.loc 1 515 0
 3270               		.cfi_startproc
 3271               	/* prologue: function */
 3272               	/* frame size = 0 */
 3273               	/* stack size = 0 */
 3274               	.L__stack_usage = 0
 516:display.c     ****     display_state = DISPLAY_STATE_ACTIVATING;
 3275               		.loc 1 516 0
 3276 0d02 81E0      		ldi r24,lo8(1)
 3277 0d04 8093 0000 		sts display_state,r24
 517:display.c     ****     // print_img();
 518:display.c     ****     max7219_update();
 3278               		.loc 1 518 0
 3279 0d08 0E94 0000 		call max7219_update
 3280               	.LVL421:
 519:display.c     ****     timer_register(DISPLAY_TIMER_ID, 1, display_scroll_up);
 3281               		.loc 1 519 0
 3282 0d0c 40E0      		ldi r20,lo8(gs(display_scroll_up))
 3283 0d0e 50E0      		ldi r21,hi8(gs(display_scroll_up))
 3284 0d10 61E0      		ldi r22,lo8(1)
 3285 0d12 80E0      		ldi r24,0
 3286 0d14 0C94 0000 		jmp timer_register
 3287               	.LVL422:
 3288               		.cfi_endproc
 3289               	.LFE24:
 3291               	.global	display_deactivate
 3293               	display_deactivate:
 3294               	.LFB25:
 520:display.c     **** }
 521:display.c     **** 
 522:display.c     **** void display_deactivate(void)
 523:display.c     **** {
 3295               		.loc 1 523 0
 3296               		.cfi_startproc
 3297               	/* prologue: function */
 3298               	/* frame size = 0 */
 3299               	/* stack size = 0 */
 3300               	.L__stack_usage = 0
 524:display.c     ****     display_state = DISPLAY_STATE_INACTIVE;
 3301               		.loc 1 524 0
 3302 0d18 84E0      		ldi r24,lo8(4)
 3303 0d1a 8093 0000 		sts display_state,r24
 525:display.c     ****     display_clear_buf();
 3304               		.loc 1 525 0
 3305 0d1e 0E94 0000 		call display_clear_buf
 3306               	.LVL423:
 526:display.c     ****     display_row_shift = 16;
 3307               		.loc 1 526 0
 3308 0d22 80E1      		ldi r24,lo8(16)
 3309 0d24 8093 0000 		sts display_row_shift,r24
 527:display.c     ****     display_col_shift = 0;
 3310               		.loc 1 527 0
 3311 0d28 1092 0000 		sts display_col_shift,__zero_reg__
 528:display.c     ****     max7219_update_with_config();
 3312               		.loc 1 528 0
 3313 0d2c 0E94 0000 		call max7219_update_with_config
 3314               	.LVL424:
 529:display.c     ****     timer_stop(DISPLAY_TIMER_ID);
 3315               		.loc 1 529 0
 3316 0d30 80E0      		ldi r24,0
 3317 0d32 0C94 0000 		jmp timer_stop
 3318               	.LVL425:
 3319               		.cfi_endproc
 3320               	.LFE25:
 3322               	.global	time_update_handler
 3324               	time_update_handler:
 3325               	.LFB26:
 530:display.c     **** }
 531:display.c     **** 
 532:display.c     **** void time_update_handler(void)
 533:display.c     **** {
 3326               		.loc 1 533 0
 3327               		.cfi_startproc
 3328               	/* prologue: function */
 3329               	/* frame size = 0 */
 3330               	/* stack size = 0 */
 3331               	.L__stack_usage = 0
 534:display.c     ****     if(display_state == DISPLAY_STATE_ACTIVE)
 3332               		.loc 1 534 0
 3333 0d36 8091 0000 		lds r24,display_state
 3334 0d3a 8330      		cpi r24,lo8(3)
 3335 0d3c 01F4      		brne .L135
 535:display.c     ****     {
 536:display.c     ****         print_top_time();
 3336               		.loc 1 536 0
 3337 0d3e 0E94 0000 		call print_top_time
 3338               	.LVL426:
 537:display.c     ****         print_bottom_dow();
 3339               		.loc 1 537 0
 3340 0d42 0E94 0000 		call print_bottom_dow
 3341               	.LVL427:
 538:display.c     ****         print_bottom_date();
 3342               		.loc 1 538 0
 3343 0d46 0E94 0000 		call print_bottom_date
 3344               	.LVL428:
 539:display.c     ****         if (get_second_bcd_l())
 3345               		.loc 1 539 0
 3346 0d4a 0E94 0000 		call get_second_bcd_l
 3347               	.LVL429:
 3348 0d4e 8111      		cpse r24,__zero_reg__
 3349               	.L137:
 540:display.c     ****         {
 541:display.c     ****             max7219_update();
 3350               		.loc 1 541 0
 3351 0d50 0C94 0000 		jmp max7219_update
 3352               	.LVL430:
 3353               	.L136:
 542:display.c     ****         }
 543:display.c     ****         else
 544:display.c     ****         {
 545:display.c     ****             max7219_update_with_config();
 3354               		.loc 1 545 0
 3355 0d54 0C94 0000 		jmp max7219_update_with_config
 3356               	.LVL431:
 3357               	.L135:
 546:display.c     ****         }
 547:display.c     ****     }
 548:display.c     ****     else if(display_state == DISPLAY_STATE_ACTIVATING)
 3358               		.loc 1 548 0
 3359 0d58 8130      		cpi r24,lo8(1)
 3360 0d5a 01F0      		breq .L137
 549:display.c     ****     {
 550:display.c     ****         // print_img();
 551:display.c     ****         max7219_update();
 552:display.c     ****     }
 553:display.c     ****     else if(display_state == DISPLAY_STATE_WAITING)
 3361               		.loc 1 553 0
 3362 0d5c 8230      		cpi r24,lo8(2)
 3363 0d5e 01F4      		brne .L134
 554:display.c     ****     {
 555:display.c     ****         print_top_time();
 3364               		.loc 1 555 0
 3365 0d60 0E94 0000 		call print_top_time
 3366               	.LVL432:
 556:display.c     ****         print_bottom_dow();
 3367               		.loc 1 556 0
 3368 0d64 0E94 0000 		call print_bottom_dow
 3369               	.LVL433:
 557:display.c     ****         print_bottom_date();
 3370               		.loc 1 557 0
 3371 0d68 0E94 0000 		call print_bottom_date
 3372               	.LVL434:
 558:display.c     ****         display_col_shift = 0;
 3373               		.loc 1 558 0
 3374 0d6c 1092 0000 		sts display_col_shift,__zero_reg__
 559:display.c     ****         display_state = DISPLAY_STATE_ACTIVE;
 3375               		.loc 1 559 0
 3376 0d70 83E0      		ldi r24,lo8(3)
 3377 0d72 8093 0000 		sts display_state,r24
 560:display.c     ****         timer_register(DISPLAY_TIMER_ID, 1, display_wait_down);
 3378               		.loc 1 560 0
 3379 0d76 40E0      		ldi r20,lo8(gs(display_wait_down))
 3380 0d78 50E0      		ldi r21,hi8(gs(display_wait_down))
 3381 0d7a 61E0      		ldi r22,lo8(1)
 3382 0d7c 80E0      		ldi r24,0
 3383 0d7e 0C94 0000 		jmp timer_register
 3384               	.LVL435:
 3385               	.L134:
 3386 0d82 0895      		ret
 3387               		.cfi_endproc
 3388               	.LFE26:
 3390               		.local	display_state
 3391               		.comm	display_state,1,1
 3392               		.local	display_col_shift
 3393               		.comm	display_col_shift,1,1
 3394               		.data
 3397               	display_row_shift:
 3398 0000 10        		.byte	16
 3399               		.section	.rodata
 3402               	display_buf:
 3403 0000 0000      		.word	display_full_buf
 3404 0002 0000      		.word	display_full_buf+6
 3405 0004 0000      		.word	display_full_buf+12
 3406 0006 0000      		.word	display_full_buf+18
 3407 0008 0000      		.word	display_full_buf+24
 3408 000a 0000      		.word	display_full_buf+30
 3409 000c 0000      		.word	display_full_buf+36
 3410 000e 0000      		.word	display_full_buf+42
 3411 0010 0000      		.word	display_full_buf+48
 3412 0012 0000      		.word	display_full_buf+54
 3413 0014 0000      		.word	display_full_buf+60
 3414 0016 0000      		.word	display_full_buf+66
 3415 0018 0000      		.word	display_full_buf+72
 3416 001a 0000      		.word	display_full_buf+78
 3417 001c 0000      		.word	display_full_buf+84
 3418 001e 0000      		.word	display_full_buf+90
 3419 0020 0000      		.word	display_top_buf
 3420 0022 0000      		.word	display_top_buf+6
 3421 0024 0000      		.word	display_top_buf+12
 3422 0026 0000      		.word	display_top_buf+18
 3423 0028 0000      		.word	display_top_buf+24
 3424 002a 0000      		.word	display_top_buf+30
 3425 002c 0000      		.word	display_top_buf+36
 3426 002e 0000      		.word	display_top_buf+42
 3427 0030 0000      		.word	display_bottom_buf
 3428 0032 0000      		.word	display_bottom_buf+32
 3429 0034 0000      		.word	display_bottom_buf+64
 3430 0036 0000      		.word	display_bottom_buf+96
 3431 0038 0000      		.word	display_bottom_buf+128
 3432 003a 0000      		.word	display_bottom_buf+160
 3433 003c 0000      		.word	display_bottom_buf+192
 3434 003e 0000      		.word	display_bottom_buf+224
 3435               		.local	display_bottom_buf
 3436               		.comm	display_bottom_buf,256,1
 3437               		.local	display_top_buf
 3438               		.comm	display_top_buf,48,1
 3439               		.local	display_full_buf
 3440               		.comm	display_full_buf,96,1
 3441               	.global	img_table
 3442               		.section	.progmem.data,"a",@progbits
 3445               	img_table:
 3446 0000 00        		.byte	0
 3447 0001 00        		.byte	0
 3448 0002 00        		.byte	0
 3449 0003 00        		.byte	0
 3450 0004 00        		.byte	0
 3451 0005 00        		.byte	0
 3452 0006 00        		.byte	0
 3453 0007 09        		.byte	9
 3454 0008 74        		.byte	116
 3455 0009 4C        		.byte	76
 3456 000a 60        		.byte	96
 3457 000b 00        		.byte	0
 3458 000c 00        		.byte	0
 3459 000d 09        		.byte	9
 3460 000e 46        		.byte	70
 3461 000f D2        		.byte	-46
 3462 0010 80        		.byte	-128
 3463 0011 00        		.byte	0
 3464 0012 00        		.byte	0
 3465 0013 0F        		.byte	15
 3466 0014 75        		.byte	117
 3467 0015 52        		.byte	82
 3468 0016 E0        		.byte	-32
 3469 0017 00        		.byte	0
 3470 0018 00        		.byte	0
 3471 0019 09        		.byte	9
 3472 001a 44        		.byte	68
 3473 001b 5E        		.byte	94
 3474 001c 80        		.byte	-128
 3475 001d 00        		.byte	0
 3476 001e 00        		.byte	0
 3477 001f 09        		.byte	9
 3478 0020 74        		.byte	116
 3479 0021 52        		.byte	82
 3480 0022 60        		.byte	96
 3481 0023 00        		.byte	0
 3482 0024 00        		.byte	0
 3483 0025 00        		.byte	0
 3484 0026 00        		.byte	0
 3485 0027 00        		.byte	0
 3486 0028 00        		.byte	0
 3487 0029 00        		.byte	0
 3488 002a 00        		.byte	0
 3489 002b 00        		.byte	0
 3490 002c 00        		.byte	0
 3491 002d 00        		.byte	0
 3492 002e 00        		.byte	0
 3493 002f 00        		.byte	0
 3494 0030 00        		.byte	0
 3495 0031 00        		.byte	0
 3496 0032 00        		.byte	0
 3497 0033 00        		.byte	0
 3498 0034 00        		.byte	0
 3499 0035 00        		.byte	0
 3500 0036 00        		.byte	0
 3501 0037 64        		.byte	100
 3502 0038 BA        		.byte	-70
 3503 0039 4C        		.byte	76
 3504 003a 35        		.byte	53
 3505 003b 00        		.byte	0
 3506 003c 00        		.byte	0
 3507 003d 94        		.byte	-108
 3508 003e A2        		.byte	-94
 3509 003f 52        		.byte	82
 3510 0040 55        		.byte	85
 3511 0041 00        		.byte	0
 3512 0042 00        		.byte	0
 3513 0043 85        		.byte	-123
 3514 0044 A3        		.byte	-93
 3515 0045 D2        		.byte	-46
 3516 0046 53        		.byte	83
 3517 0047 00        		.byte	0
 3518 0048 00        		.byte	0
 3519 0049 96        		.byte	-106
 3520 004a A2        		.byte	-94
 3521 004b 5E        		.byte	94
 3522 004c 51        		.byte	81
 3523 004d 00        		.byte	0
 3524 004e 00        		.byte	0
 3525 004f 64        		.byte	100
 3526 0050 A2        		.byte	-94
 3527 0051 52        		.byte	82
 3528 0052 96        		.byte	-106
 3529 0053 00        		.byte	0
 3530 0054 00        		.byte	0
 3531 0055 00        		.byte	0
 3532 0056 00        		.byte	0
 3533 0057 00        		.byte	0
 3534 0058 00        		.byte	0
 3535 0059 00        		.byte	0
 3536 005a 00        		.byte	0
 3537 005b 00        		.byte	0
 3538 005c 00        		.byte	0
 3539 005d 00        		.byte	0
 3540 005e 00        		.byte	0
 3541 005f 00        		.byte	0
 3542               	.global	bit_reverse_table256
 3545               	bit_reverse_table256:
 3546 0060 00        		.byte	0
 3547 0061 80        		.byte	-128
 3548 0062 40        		.byte	64
 3549 0063 C0        		.byte	-64
 3550 0064 20        		.byte	32
 3551 0065 A0        		.byte	-96
 3552 0066 60        		.byte	96
 3553 0067 E0        		.byte	-32
 3554 0068 10        		.byte	16
 3555 0069 90        		.byte	-112
 3556 006a 50        		.byte	80
 3557 006b D0        		.byte	-48
 3558 006c 30        		.byte	48
 3559 006d B0        		.byte	-80
 3560 006e 70        		.byte	112
 3561 006f F0        		.byte	-16
 3562 0070 08        		.byte	8
 3563 0071 88        		.byte	-120
 3564 0072 48        		.byte	72
 3565 0073 C8        		.byte	-56
 3566 0074 28        		.byte	40
 3567 0075 A8        		.byte	-88
 3568 0076 68        		.byte	104
 3569 0077 E8        		.byte	-24
 3570 0078 18        		.byte	24
 3571 0079 98        		.byte	-104
 3572 007a 58        		.byte	88
 3573 007b D8        		.byte	-40
 3574 007c 38        		.byte	56
 3575 007d B8        		.byte	-72
 3576 007e 78        		.byte	120
 3577 007f F8        		.byte	-8
 3578 0080 04        		.byte	4
 3579 0081 84        		.byte	-124
 3580 0082 44        		.byte	68
 3581 0083 C4        		.byte	-60
 3582 0084 24        		.byte	36
 3583 0085 A4        		.byte	-92
 3584 0086 64        		.byte	100
 3585 0087 E4        		.byte	-28
 3586 0088 14        		.byte	20
 3587 0089 94        		.byte	-108
 3588 008a 54        		.byte	84
 3589 008b D4        		.byte	-44
 3590 008c 34        		.byte	52
 3591 008d B4        		.byte	-76
 3592 008e 74        		.byte	116
 3593 008f F4        		.byte	-12
 3594 0090 0C        		.byte	12
 3595 0091 8C        		.byte	-116
 3596 0092 4C        		.byte	76
 3597 0093 CC        		.byte	-52
 3598 0094 2C        		.byte	44
 3599 0095 AC        		.byte	-84
 3600 0096 6C        		.byte	108
 3601 0097 EC        		.byte	-20
 3602 0098 1C        		.byte	28
 3603 0099 9C        		.byte	-100
 3604 009a 5C        		.byte	92
 3605 009b DC        		.byte	-36
 3606 009c 3C        		.byte	60
 3607 009d BC        		.byte	-68
 3608 009e 7C        		.byte	124
 3609 009f FC        		.byte	-4
 3610 00a0 02        		.byte	2
 3611 00a1 82        		.byte	-126
 3612 00a2 42        		.byte	66
 3613 00a3 C2        		.byte	-62
 3614 00a4 22        		.byte	34
 3615 00a5 A2        		.byte	-94
 3616 00a6 62        		.byte	98
 3617 00a7 E2        		.byte	-30
 3618 00a8 12        		.byte	18
 3619 00a9 92        		.byte	-110
 3620 00aa 52        		.byte	82
 3621 00ab D2        		.byte	-46
 3622 00ac 32        		.byte	50
 3623 00ad B2        		.byte	-78
 3624 00ae 72        		.byte	114
 3625 00af F2        		.byte	-14
 3626 00b0 0A        		.byte	10
 3627 00b1 8A        		.byte	-118
 3628 00b2 4A        		.byte	74
 3629 00b3 CA        		.byte	-54
 3630 00b4 2A        		.byte	42
 3631 00b5 AA        		.byte	-86
 3632 00b6 6A        		.byte	106
 3633 00b7 EA        		.byte	-22
 3634 00b8 1A        		.byte	26
 3635 00b9 9A        		.byte	-102
 3636 00ba 5A        		.byte	90
 3637 00bb DA        		.byte	-38
 3638 00bc 3A        		.byte	58
 3639 00bd BA        		.byte	-70
 3640 00be 7A        		.byte	122
 3641 00bf FA        		.byte	-6
 3642 00c0 06        		.byte	6
 3643 00c1 86        		.byte	-122
 3644 00c2 46        		.byte	70
 3645 00c3 C6        		.byte	-58
 3646 00c4 26        		.byte	38
 3647 00c5 A6        		.byte	-90
 3648 00c6 66        		.byte	102
 3649 00c7 E6        		.byte	-26
 3650 00c8 16        		.byte	22
 3651 00c9 96        		.byte	-106
 3652 00ca 56        		.byte	86
 3653 00cb D6        		.byte	-42
 3654 00cc 36        		.byte	54
 3655 00cd B6        		.byte	-74
 3656 00ce 76        		.byte	118
 3657 00cf F6        		.byte	-10
 3658 00d0 0E        		.byte	14
 3659 00d1 8E        		.byte	-114
 3660 00d2 4E        		.byte	78
 3661 00d3 CE        		.byte	-50
 3662 00d4 2E        		.byte	46
 3663 00d5 AE        		.byte	-82
 3664 00d6 6E        		.byte	110
 3665 00d7 EE        		.byte	-18
 3666 00d8 1E        		.byte	30
 3667 00d9 9E        		.byte	-98
 3668 00da 5E        		.byte	94
 3669 00db DE        		.byte	-34
 3670 00dc 3E        		.byte	62
 3671 00dd BE        		.byte	-66
 3672 00de 7E        		.byte	126
 3673 00df FE        		.byte	-2
 3674 00e0 01        		.byte	1
 3675 00e1 81        		.byte	-127
 3676 00e2 41        		.byte	65
 3677 00e3 C1        		.byte	-63
 3678 00e4 21        		.byte	33
 3679 00e5 A1        		.byte	-95
 3680 00e6 61        		.byte	97
 3681 00e7 E1        		.byte	-31
 3682 00e8 11        		.byte	17
 3683 00e9 91        		.byte	-111
 3684 00ea 51        		.byte	81
 3685 00eb D1        		.byte	-47
 3686 00ec 31        		.byte	49
 3687 00ed B1        		.byte	-79
 3688 00ee 71        		.byte	113
 3689 00ef F1        		.byte	-15
 3690 00f0 09        		.byte	9
 3691 00f1 89        		.byte	-119
 3692 00f2 49        		.byte	73
 3693 00f3 C9        		.byte	-55
 3694 00f4 29        		.byte	41
 3695 00f5 A9        		.byte	-87
 3696 00f6 69        		.byte	105
 3697 00f7 E9        		.byte	-23
 3698 00f8 19        		.byte	25
 3699 00f9 99        		.byte	-103
 3700 00fa 59        		.byte	89
 3701 00fb D9        		.byte	-39
 3702 00fc 39        		.byte	57
 3703 00fd B9        		.byte	-71
 3704 00fe 79        		.byte	121
 3705 00ff F9        		.byte	-7
 3706 0100 05        		.byte	5
 3707 0101 85        		.byte	-123
 3708 0102 45        		.byte	69
 3709 0103 C5        		.byte	-59
 3710 0104 25        		.byte	37
 3711 0105 A5        		.byte	-91
 3712 0106 65        		.byte	101
 3713 0107 E5        		.byte	-27
 3714 0108 15        		.byte	21
 3715 0109 95        		.byte	-107
 3716 010a 55        		.byte	85
 3717 010b D5        		.byte	-43
 3718 010c 35        		.byte	53
 3719 010d B5        		.byte	-75
 3720 010e 75        		.byte	117
 3721 010f F5        		.byte	-11
 3722 0110 0D        		.byte	13
 3723 0111 8D        		.byte	-115
 3724 0112 4D        		.byte	77
 3725 0113 CD        		.byte	-51
 3726 0114 2D        		.byte	45
 3727 0115 AD        		.byte	-83
 3728 0116 6D        		.byte	109
 3729 0117 ED        		.byte	-19
 3730 0118 1D        		.byte	29
 3731 0119 9D        		.byte	-99
 3732 011a 5D        		.byte	93
 3733 011b DD        		.byte	-35
 3734 011c 3D        		.byte	61
 3735 011d BD        		.byte	-67
 3736 011e 7D        		.byte	125
 3737 011f FD        		.byte	-3
 3738 0120 03        		.byte	3
 3739 0121 83        		.byte	-125
 3740 0122 43        		.byte	67
 3741 0123 C3        		.byte	-61
 3742 0124 23        		.byte	35
 3743 0125 A3        		.byte	-93
 3744 0126 63        		.byte	99
 3745 0127 E3        		.byte	-29
 3746 0128 13        		.byte	19
 3747 0129 93        		.byte	-109
 3748 012a 53        		.byte	83
 3749 012b D3        		.byte	-45
 3750 012c 33        		.byte	51
 3751 012d B3        		.byte	-77
 3752 012e 73        		.byte	115
 3753 012f F3        		.byte	-13
 3754 0130 0B        		.byte	11
 3755 0131 8B        		.byte	-117
 3756 0132 4B        		.byte	75
 3757 0133 CB        		.byte	-53
 3758 0134 2B        		.byte	43
 3759 0135 AB        		.byte	-85
 3760 0136 6B        		.byte	107
 3761 0137 EB        		.byte	-21
 3762 0138 1B        		.byte	27
 3763 0139 9B        		.byte	-101
 3764 013a 5B        		.byte	91
 3765 013b DB        		.byte	-37
 3766 013c 3B        		.byte	59
 3767 013d BB        		.byte	-69
 3768 013e 7B        		.byte	123
 3769 013f FB        		.byte	-5
 3770 0140 07        		.byte	7
 3771 0141 87        		.byte	-121
 3772 0142 47        		.byte	71
 3773 0143 C7        		.byte	-57
 3774 0144 27        		.byte	39
 3775 0145 A7        		.byte	-89
 3776 0146 67        		.byte	103
 3777 0147 E7        		.byte	-25
 3778 0148 17        		.byte	23
 3779 0149 97        		.byte	-105
 3780 014a 57        		.byte	87
 3781 014b D7        		.byte	-41
 3782 014c 37        		.byte	55
 3783 014d B7        		.byte	-73
 3784 014e 77        		.byte	119
 3785 014f F7        		.byte	-9
 3786 0150 0F        		.byte	15
 3787 0151 8F        		.byte	-113
 3788 0152 4F        		.byte	79
 3789 0153 CF        		.byte	-49
 3790 0154 2F        		.byte	47
 3791 0155 AF        		.byte	-81
 3792 0156 6F        		.byte	111
 3793 0157 EF        		.byte	-17
 3794 0158 1F        		.byte	31
 3795 0159 9F        		.byte	-97
 3796 015a 5F        		.byte	95
 3797 015b DF        		.byte	-33
 3798 015c 3F        		.byte	63
 3799 015d BF        		.byte	-65
 3800 015e 7F        		.byte	127
 3801 015f FF        		.byte	-1
 3802               		.text
 3803               	.Letext0:
 3804               		.file 2 "/usr/lib/avr/include/stdint.h"
 3805               		.file 3 "../drivers/fonts.h"
 3806               		.file 4 "../drivers/cyrillicfont.h"
 3807               		.file 5 "../drivers/text.h"
 3808               		.file 6 "../drivers/timer.h"
 3809               		.file 7 "../drivers/max7219.h"
 3810               		.file 8 "../drivers/neo7m.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 display.c
     /tmp/ccAG95s5.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccAG95s5.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccAG95s5.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccAG95s5.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccAG95s5.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccAG95s5.s:12     .text:0000000000000000 display_wait_right
     /tmp/ccAG95s5.s:53     .text:0000000000000018 display_scroll_right
     /tmp/ccAG95s5.s:33     .text:000000000000000c display_wait_down
     /tmp/ccAG95s5.s:118    .text:000000000000005a display_scroll_down
     /tmp/ccAG95s5.s:3391   .bss:0000000000000001 display_col_shift
     /tmp/ccAG95s5.s:82     .text:0000000000000034 display_scroll_up
     /tmp/ccAG95s5.s:3397   .data:0000000000000000 display_row_shift
                             .bss:0000000000000000 display_state
     /tmp/ccAG95s5.s:159    .text:0000000000000082 print_full_time
     /tmp/ccAG95s5.s:3438   .bss:0000000000000132 display_full_buf
     /tmp/ccAG95s5.s:564    .text:0000000000000204 print_img
     /tmp/ccAG95s5.s:3445   .progmem.data:0000000000000000 img_table
     /tmp/ccAG95s5.s:630    .text:0000000000000236 print_top_time
     /tmp/ccAG95s5.s:3436   .bss:0000000000000102 display_top_buf
     /tmp/ccAG95s5.s:949    .text:000000000000038a print_bottom_dow
     /tmp/ccAG95s5.s:3393   .bss:0000000000000002 display_bottom_buf
     /tmp/ccAG95s5.s:1320   .text:00000000000004ec print_bottom_date
     /tmp/ccAG95s5.s:1869   .text:0000000000000728 print_ext_temperature
     /tmp/ccAG95s5.s:2387   .text:0000000000000956 clear_ext_temperature
     /tmp/ccAG95s5.s:2424   .text:000000000000096e print_pressure
     /tmp/ccAG95s5.s:2727   .text:0000000000000abe print_int_temperature
     /tmp/ccAG95s5.s:2868   .text:0000000000000b5e display_clear_buf
     /tmp/ccAG95s5.s:3402   .rodata:0000000000000000 display_buf
     /tmp/ccAG95s5.s:2938   .text:0000000000000b9c display_init
     /tmp/ccAG95s5.s:2960   .text:0000000000000ba8 max7219_load_row
     /tmp/ccAG95s5.s:3545   .progmem.data:0000000000000060 bit_reverse_table256
     /tmp/ccAG95s5.s:3267   .text:0000000000000d02 display_activate
     /tmp/ccAG95s5.s:3293   .text:0000000000000d18 display_deactivate
     /tmp/ccAG95s5.s:3324   .text:0000000000000d36 time_update_handler

UNDEFINED SYMBOLS
timer_register
max7219_update
timer_stop
get_hour_bcd_l
get_hour_bcd_h
get_minute_bcd_l
get_minute_bcd_h
TripleDotDigital15table
get_second_bcd_l
get_second_bcd_h
DotDigital7table
get_dow
dow_shift
dow_len
dow_str
cyrillic7width
cyrillic7table
get_date_bcd_l
get_date_bcd_h
get_month
months_width
months_table
__udivmodqi4
__muluhisi3
__divmodsi4
__divmodhi4
max7219_init
max7219_update_with_config
__do_copy_data
__do_clear_bss
